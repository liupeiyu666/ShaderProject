//////////////////////////////////////////
//
// NOTE: This is *not* a valid shader file
//
///////////////////////////////////////////
Shader "miHoYo/miHoYo_Scenes/Scenes_DLC/DLC_AirEffect_Reflect(Clip)_LightMap" {
Properties {
_Color ("Color", Color) = (1,1,1,1)
_BloomFactor ("Bloom Factor", Float) = 1
_MainTex ("Color Tex (RGB)", 2D) = "white" { }
_ReflectMaskTex ("Reflect Mask Tex(R)", 2D) = "white" { }
_ShadowTex ("LightMap (RGB)", 2D) = "grey" { }
_EnvTex ("Environment Texture (RGB)", Cube) = "grey" { }
_Reflectivity ("Reflectivity", Range(0, 5)) = 1
_CamDistRatio ("Camera Distance Ratio", Range(0, 1)) = 0.1
_CamHeightOffset ("Camera Height", Float) = 5
_CamRotate ("Camera Rotate", Range(-3.14159, 3.14159)) = 0
[Toggle(INT_PING_PONG)] _LigthMapIntPingPong ("Light Map Intensity Ping Pong", Float) = 0
_Magnitude ("Magnitude Of Ping Pong", Range(0, 5)) = 3
_MinValue ("Min Value Of Ping Pong", Range(0, 2)) = 0.5
_Speed ("Speed Of Ping Pong", Range(0, 3)) = 0.5
_ScaleTime ("Scale Time", Range(0, 1)) = 1
_UMin ("U Min", Float) = 0
_UMax ("U Max", Float) = 1
[MHYSingleLineTextureNoScaleOffset] _PropertyLightmapTex ("LightMap", 2D) = "gray" { }
[MHYTextureScaleOffset] _PropertyLightmapTexTS ("PropertyLightmapTexTS", Vector) = (1,1,0,0)
_LightMapIntensity ("Light Map Intensity", Float) = 1
_LightingColor ("Lighting Color", Color) = (0.2,0.2,0.2,1)
[Toggle(LUMINANCE)] _Luminance ("Luminance", Float) = 0
_LumiFactor ("Luminance Factor", Float) = 0
}
SubShader {
 LOD 200
 Tags { "QUEUE" = "Geometry" "RenderType" = "Opaque" }
 Pass {
  Name "BASE"
  LOD 200
  Tags { "LIGHTMODE" = "FORWARDBASE" "QUEUE" = "Geometry" "RenderType" = "Opaque" }
  GpuProgramID 36334
Program "vp" {
SubProgram "gles3 hw_tier00 " {
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 _FogColorNear;
uniform 	vec4 _FogColorFar;
uniform 	float _FogColorIntensity;
uniform 	float _FogIntensity;
uniform 	float _FogEffectStart;
uniform 	float _FogEffectLimit;
uniform 	float _FogStartDistance;
uniform 	float _FogEndDistance;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec3 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat2.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat5.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat2.y = u_xlat16_4.x;
    u_xlat5.z = dot(u_xlat2.xy, u_xlat1.xz);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
#ifdef UNITY_ADRENO_ES3
    u_xlatb21 = !!(0.5<_FogColorNear.w);
#else
    u_xlatb21 = 0.5<_FogColorNear.w;
#endif
    if(u_xlatb21){
        u_xlat1.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat21 = dot(u_xlat1.xzw, u_xlat1.xzw);
        u_xlat21 = sqrt(u_xlat21);
        u_xlat21 = u_xlat21 + (-_FogStartDistance);
        u_xlat21 = max(u_xlat21, 0.0);
        u_xlat1.xz = vec2(u_xlat21) * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat1.xz = u_xlat1.xz * (-u_xlat1.xz);
        u_xlat1.xz = u_xlat1.xz * vec2(1.44269502, 1.44269502);
        u_xlat1.xz = exp2(u_xlat1.xz);
        u_xlat21 = (-u_xlat1.x) + 1.0;
        u_xlat21 = u_xlat21 * _FogEffectLimit;
        u_xlat21 = max(u_xlat21, _FogEffectStart);
        u_xlat2.w = min(u_xlat21, _FogEffectLimit);
        u_xlat6.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat1.zzz * u_xlat6.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    } else {
        u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
        u_xlat0.x = sqrt(u_xlat0.x);
        u_xlat0.x = u_xlat0.x + (-_FogStartDistance);
        u_xlat0.x = max(u_xlat0.x, 0.0);
        u_xlat0.xy = u_xlat0.xx * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat0.xy = u_xlat0.xy * vec2(500.0, 1000.0);
        u_xlat14 = (-_FogStartDistance) + _FogEndDistance;
        u_xlat14 = max(u_xlat14, 0.100000001);
        u_xlat0.xy = u_xlat0.yx / vec2(u_xlat14);
        u_xlat7.x = u_xlat0.y * _FogEffectLimit;
        u_xlat7.x = max(u_xlat7.x, _FogEffectStart);
        u_xlat2.w = min(u_xlat7.x, _FogEffectLimit);
        u_xlat0.x = u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
        u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
        u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
        u_xlat0.x = (-u_xlat0.x) + 1.0;
        u_xlat7.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat0.xxx * u_xlat7.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    //ENDIF
    }
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat5.y = u_xlat1.y;
    vs_TEXCOORD3.xyz = u_xlat5.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform mediump sampler2D unity_Lightmap;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
ivec2 u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp float u_xlat10_2;
bool u_xlatb2;
mediump vec4 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
lowp vec3 u_xlat10_7;
mediump vec3 u_xlat16_8;
mediump float u_xlat16_9;
vec3 u_xlat10;
mediump vec3 u_xlat16_10;
lowp vec3 u_xlat10_10;
ivec2 u_xlati10;
bool u_xlatb10;
vec3 u_xlat11;
lowp vec3 u_xlat10_11;
vec3 u_xlat15;
lowp vec3 u_xlat10_15;
mediump float u_xlat16_18;
lowp float u_xlat10_19;
bool u_xlatb19;
float u_xlat28;
void main()
{
    u_xlat16_0.x = (-_UMin) + _UMax;
    u_xlat16_9 = u_xlat16_0.x * 0.0250000004;
    u_xlat16_1 = u_xlat16_0.x * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_9 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb10 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb10 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1.x = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb10) * 0xffffffffu);
    if(u_xlati1.x != 0) {
        u_xlat10_10.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_2 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
        u_xlat10_11.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_2.xyz = vec3(u_xlat10_2) * u_xlat10_11.xyz;
        u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Reflectivity);
        u_xlat16_10.xyz = u_xlat10_10.xyz * _Color.xyz + u_xlat16_2.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb2 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb2 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat11.x = _Time.y * _Speed;
        u_xlat11.x = fract(u_xlat11.x);
        u_xlat11.x = u_xlat11.x + -0.5;
        u_xlat11.x = abs(u_xlat11.x) * _Magnitude + _MinValue;
        u_xlat11.xyz = u_xlat16_10.xyz * u_xlat11.xxx;
        u_xlat10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb2)) ? u_xlat11.xyz : u_xlat10.xyz;
        u_xlat16_10.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
        u_xlat16_4.xyz = u_xlat16_10.xyz * unity_Lightmap_HDR.xxx;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_5.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;
        u_xlat16_3.xyz = (-u_xlat16_3.xyz) * u_xlat16_4.xyz + vs_COLOR1.xyz;
        u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_3.xyz + u_xlat16_5.xyz;
        u_xlat16_2.w = _BloomFactor;
        u_xlat16_3 = u_xlat16_2;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1.x == 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.0500000007 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.100000001 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.150000006 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.200000003 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.25 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.300000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.349999994 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.400000006 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.450000018 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.5 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.550000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.600000024 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.650000036 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.699999988 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.75 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.800000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.850000024 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.900000036 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.949999988 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.x = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.x != 0) {
            u_xlat10_10.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_6.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_0.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_0.x = u_xlat16_0.x + u_xlat16_0.x;
            u_xlat16_0.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_0.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_15.xyz = texture(_EnvTex, u_xlat16_0.xyz).xyz;
            u_xlat16_6.xyz = u_xlat10_6.xxx * u_xlat10_15.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_10.xyz = u_xlat10_10.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb6 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb6 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat15.x = _Time.y * _Speed;
            u_xlat15.x = fract(u_xlat15.x);
            u_xlat15.x = u_xlat15.x + -0.5;
            u_xlat15.x = abs(u_xlat15.x) * _Magnitude + _MinValue;
            u_xlat15.xyz = u_xlat16_10.xyz * u_xlat15.xxx;
            u_xlat10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity);
            u_xlat16_0.xyz = (bool(u_xlatb6)) ? u_xlat15.xyz : u_xlat10.xyz;
            u_xlat16_10.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_10.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_5.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
            u_xlat16_0.xyz = (-u_xlat16_0.xyz) * u_xlat16_4.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_0.xyz + u_xlat16_5.xyz;
            SV_Target0.w = _BloomFactor;
            SV_Target0.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1.x != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 _FogColorNear;
uniform 	vec4 _FogColorFar;
uniform 	float _FogColorIntensity;
uniform 	float _FogIntensity;
uniform 	float _FogEffectStart;
uniform 	float _FogEffectLimit;
uniform 	float _FogStartDistance;
uniform 	float _FogEndDistance;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec3 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat2.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat5.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat2.y = u_xlat16_4.x;
    u_xlat5.z = dot(u_xlat2.xy, u_xlat1.xz);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
#ifdef UNITY_ADRENO_ES3
    u_xlatb21 = !!(0.5<_FogColorNear.w);
#else
    u_xlatb21 = 0.5<_FogColorNear.w;
#endif
    if(u_xlatb21){
        u_xlat1.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat21 = dot(u_xlat1.xzw, u_xlat1.xzw);
        u_xlat21 = sqrt(u_xlat21);
        u_xlat21 = u_xlat21 + (-_FogStartDistance);
        u_xlat21 = max(u_xlat21, 0.0);
        u_xlat1.xz = vec2(u_xlat21) * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat1.xz = u_xlat1.xz * (-u_xlat1.xz);
        u_xlat1.xz = u_xlat1.xz * vec2(1.44269502, 1.44269502);
        u_xlat1.xz = exp2(u_xlat1.xz);
        u_xlat21 = (-u_xlat1.x) + 1.0;
        u_xlat21 = u_xlat21 * _FogEffectLimit;
        u_xlat21 = max(u_xlat21, _FogEffectStart);
        u_xlat2.w = min(u_xlat21, _FogEffectLimit);
        u_xlat6.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat1.zzz * u_xlat6.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    } else {
        u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
        u_xlat0.x = sqrt(u_xlat0.x);
        u_xlat0.x = u_xlat0.x + (-_FogStartDistance);
        u_xlat0.x = max(u_xlat0.x, 0.0);
        u_xlat0.xy = u_xlat0.xx * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat0.xy = u_xlat0.xy * vec2(500.0, 1000.0);
        u_xlat14 = (-_FogStartDistance) + _FogEndDistance;
        u_xlat14 = max(u_xlat14, 0.100000001);
        u_xlat0.xy = u_xlat0.yx / vec2(u_xlat14);
        u_xlat7.x = u_xlat0.y * _FogEffectLimit;
        u_xlat7.x = max(u_xlat7.x, _FogEffectStart);
        u_xlat2.w = min(u_xlat7.x, _FogEffectLimit);
        u_xlat0.x = u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
        u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
        u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
        u_xlat0.x = (-u_xlat0.x) + 1.0;
        u_xlat7.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat0.xxx * u_xlat7.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    //ENDIF
    }
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat5.y = u_xlat1.y;
    vs_TEXCOORD3.xyz = u_xlat5.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform mediump sampler2D unity_Lightmap;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
ivec2 u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp float u_xlat10_2;
bool u_xlatb2;
mediump vec4 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
lowp vec3 u_xlat10_7;
mediump vec3 u_xlat16_8;
mediump float u_xlat16_9;
vec3 u_xlat10;
mediump vec3 u_xlat16_10;
lowp vec3 u_xlat10_10;
ivec2 u_xlati10;
bool u_xlatb10;
vec3 u_xlat11;
lowp vec3 u_xlat10_11;
vec3 u_xlat15;
lowp vec3 u_xlat10_15;
mediump float u_xlat16_18;
lowp float u_xlat10_19;
bool u_xlatb19;
float u_xlat28;
void main()
{
    u_xlat16_0.x = (-_UMin) + _UMax;
    u_xlat16_9 = u_xlat16_0.x * 0.0250000004;
    u_xlat16_1 = u_xlat16_0.x * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_9 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb10 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb10 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1.x = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb10) * 0xffffffffu);
    if(u_xlati1.x != 0) {
        u_xlat10_10.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_2 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
        u_xlat10_11.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_2.xyz = vec3(u_xlat10_2) * u_xlat10_11.xyz;
        u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Reflectivity);
        u_xlat16_10.xyz = u_xlat10_10.xyz * _Color.xyz + u_xlat16_2.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb2 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb2 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat11.x = _Time.y * _Speed;
        u_xlat11.x = fract(u_xlat11.x);
        u_xlat11.x = u_xlat11.x + -0.5;
        u_xlat11.x = abs(u_xlat11.x) * _Magnitude + _MinValue;
        u_xlat11.xyz = u_xlat16_10.xyz * u_xlat11.xxx;
        u_xlat10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb2)) ? u_xlat11.xyz : u_xlat10.xyz;
        u_xlat16_10.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
        u_xlat16_4.xyz = u_xlat16_10.xyz * unity_Lightmap_HDR.xxx;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_5.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;
        u_xlat16_3.xyz = (-u_xlat16_3.xyz) * u_xlat16_4.xyz + vs_COLOR1.xyz;
        u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_3.xyz + u_xlat16_5.xyz;
        u_xlat16_2.w = _BloomFactor;
        u_xlat16_3 = u_xlat16_2;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1.x == 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.0500000007 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.100000001 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.150000006 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.200000003 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.25 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.300000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.349999994 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.400000006 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.450000018 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.5 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.550000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.600000024 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.650000036 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.699999988 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.75 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.800000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.850000024 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.900000036 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.949999988 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.x = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.x != 0) {
            u_xlat10_10.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_6.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_0.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_0.x = u_xlat16_0.x + u_xlat16_0.x;
            u_xlat16_0.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_0.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_15.xyz = texture(_EnvTex, u_xlat16_0.xyz).xyz;
            u_xlat16_6.xyz = u_xlat10_6.xxx * u_xlat10_15.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_10.xyz = u_xlat10_10.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb6 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb6 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat15.x = _Time.y * _Speed;
            u_xlat15.x = fract(u_xlat15.x);
            u_xlat15.x = u_xlat15.x + -0.5;
            u_xlat15.x = abs(u_xlat15.x) * _Magnitude + _MinValue;
            u_xlat15.xyz = u_xlat16_10.xyz * u_xlat15.xxx;
            u_xlat10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity);
            u_xlat16_0.xyz = (bool(u_xlatb6)) ? u_xlat15.xyz : u_xlat10.xyz;
            u_xlat16_10.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_10.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_5.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
            u_xlat16_0.xyz = (-u_xlat16_0.xyz) * u_xlat16_4.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_0.xyz + u_xlat16_5.xyz;
            SV_Target0.w = _BloomFactor;
            SV_Target0.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1.x != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 _FogColorNear;
uniform 	vec4 _FogColorFar;
uniform 	float _FogColorIntensity;
uniform 	float _FogIntensity;
uniform 	float _FogEffectStart;
uniform 	float _FogEffectLimit;
uniform 	float _FogStartDistance;
uniform 	float _FogEndDistance;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec3 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat2.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat5.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat2.y = u_xlat16_4.x;
    u_xlat5.z = dot(u_xlat2.xy, u_xlat1.xz);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
#ifdef UNITY_ADRENO_ES3
    u_xlatb21 = !!(0.5<_FogColorNear.w);
#else
    u_xlatb21 = 0.5<_FogColorNear.w;
#endif
    if(u_xlatb21){
        u_xlat1.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat21 = dot(u_xlat1.xzw, u_xlat1.xzw);
        u_xlat21 = sqrt(u_xlat21);
        u_xlat21 = u_xlat21 + (-_FogStartDistance);
        u_xlat21 = max(u_xlat21, 0.0);
        u_xlat1.xz = vec2(u_xlat21) * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat1.xz = u_xlat1.xz * (-u_xlat1.xz);
        u_xlat1.xz = u_xlat1.xz * vec2(1.44269502, 1.44269502);
        u_xlat1.xz = exp2(u_xlat1.xz);
        u_xlat21 = (-u_xlat1.x) + 1.0;
        u_xlat21 = u_xlat21 * _FogEffectLimit;
        u_xlat21 = max(u_xlat21, _FogEffectStart);
        u_xlat2.w = min(u_xlat21, _FogEffectLimit);
        u_xlat6.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat1.zzz * u_xlat6.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    } else {
        u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
        u_xlat0.x = sqrt(u_xlat0.x);
        u_xlat0.x = u_xlat0.x + (-_FogStartDistance);
        u_xlat0.x = max(u_xlat0.x, 0.0);
        u_xlat0.xy = u_xlat0.xx * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat0.xy = u_xlat0.xy * vec2(500.0, 1000.0);
        u_xlat14 = (-_FogStartDistance) + _FogEndDistance;
        u_xlat14 = max(u_xlat14, 0.100000001);
        u_xlat0.xy = u_xlat0.yx / vec2(u_xlat14);
        u_xlat7.x = u_xlat0.y * _FogEffectLimit;
        u_xlat7.x = max(u_xlat7.x, _FogEffectStart);
        u_xlat2.w = min(u_xlat7.x, _FogEffectLimit);
        u_xlat0.x = u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
        u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
        u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
        u_xlat0.x = (-u_xlat0.x) + 1.0;
        u_xlat7.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat0.xxx * u_xlat7.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    //ENDIF
    }
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat5.y = u_xlat1.y;
    vs_TEXCOORD3.xyz = u_xlat5.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform mediump sampler2D unity_Lightmap;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
ivec2 u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp float u_xlat10_2;
bool u_xlatb2;
mediump vec4 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
lowp vec3 u_xlat10_7;
mediump vec3 u_xlat16_8;
mediump float u_xlat16_9;
vec3 u_xlat10;
mediump vec3 u_xlat16_10;
lowp vec3 u_xlat10_10;
ivec2 u_xlati10;
bool u_xlatb10;
vec3 u_xlat11;
lowp vec3 u_xlat10_11;
vec3 u_xlat15;
lowp vec3 u_xlat10_15;
mediump float u_xlat16_18;
lowp float u_xlat10_19;
bool u_xlatb19;
float u_xlat28;
void main()
{
    u_xlat16_0.x = (-_UMin) + _UMax;
    u_xlat16_9 = u_xlat16_0.x * 0.0250000004;
    u_xlat16_1 = u_xlat16_0.x * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_9 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb10 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb10 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1.x = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb10) * 0xffffffffu);
    if(u_xlati1.x != 0) {
        u_xlat10_10.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_2 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
        u_xlat10_11.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_2.xyz = vec3(u_xlat10_2) * u_xlat10_11.xyz;
        u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Reflectivity);
        u_xlat16_10.xyz = u_xlat10_10.xyz * _Color.xyz + u_xlat16_2.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb2 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb2 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat11.x = _Time.y * _Speed;
        u_xlat11.x = fract(u_xlat11.x);
        u_xlat11.x = u_xlat11.x + -0.5;
        u_xlat11.x = abs(u_xlat11.x) * _Magnitude + _MinValue;
        u_xlat11.xyz = u_xlat16_10.xyz * u_xlat11.xxx;
        u_xlat10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb2)) ? u_xlat11.xyz : u_xlat10.xyz;
        u_xlat16_10.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
        u_xlat16_4.xyz = u_xlat16_10.xyz * unity_Lightmap_HDR.xxx;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_5.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;
        u_xlat16_3.xyz = (-u_xlat16_3.xyz) * u_xlat16_4.xyz + vs_COLOR1.xyz;
        u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_3.xyz + u_xlat16_5.xyz;
        u_xlat16_2.w = _BloomFactor;
        u_xlat16_3 = u_xlat16_2;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1.x == 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.0500000007 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.100000001 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.150000006 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.200000003 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.25 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.300000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.349999994 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.400000006 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.450000018 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.5 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.550000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.600000024 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.650000036 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.699999988 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.75 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.800000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.850000024 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.900000036 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.949999988 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.x = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.x != 0) {
            u_xlat10_10.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_6.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_0.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_0.x = u_xlat16_0.x + u_xlat16_0.x;
            u_xlat16_0.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_0.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_15.xyz = texture(_EnvTex, u_xlat16_0.xyz).xyz;
            u_xlat16_6.xyz = u_xlat10_6.xxx * u_xlat10_15.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_10.xyz = u_xlat10_10.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb6 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb6 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat15.x = _Time.y * _Speed;
            u_xlat15.x = fract(u_xlat15.x);
            u_xlat15.x = u_xlat15.x + -0.5;
            u_xlat15.x = abs(u_xlat15.x) * _Magnitude + _MinValue;
            u_xlat15.xyz = u_xlat16_10.xyz * u_xlat15.xxx;
            u_xlat10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity);
            u_xlat16_0.xyz = (bool(u_xlatb6)) ? u_xlat15.xyz : u_xlat10.xyz;
            u_xlat16_10.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_10.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_5.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
            u_xlat16_0.xyz = (-u_xlat16_0.xyz) * u_xlat16_4.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_0.xyz + u_xlat16_5.xyz;
            SV_Target0.w = _BloomFactor;
            SV_Target0.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1.x != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LERP" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 _FogColorNear;
uniform 	vec4 _FogColorFar;
uniform 	float _FogColorIntensity;
uniform 	float _FogIntensity;
uniform 	float _FogEffectStart;
uniform 	float _FogEffectLimit;
uniform 	float _FogStartDistance;
uniform 	float _FogEndDistance;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec3 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat2.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat5.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat2.y = u_xlat16_4.x;
    u_xlat5.z = dot(u_xlat2.xy, u_xlat1.xz);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
#ifdef UNITY_ADRENO_ES3
    u_xlatb21 = !!(0.5<_FogColorNear.w);
#else
    u_xlatb21 = 0.5<_FogColorNear.w;
#endif
    if(u_xlatb21){
        u_xlat1.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat21 = dot(u_xlat1.xzw, u_xlat1.xzw);
        u_xlat21 = sqrt(u_xlat21);
        u_xlat21 = u_xlat21 + (-_FogStartDistance);
        u_xlat21 = max(u_xlat21, 0.0);
        u_xlat1.xz = vec2(u_xlat21) * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat1.xz = u_xlat1.xz * (-u_xlat1.xz);
        u_xlat1.xz = u_xlat1.xz * vec2(1.44269502, 1.44269502);
        u_xlat1.xz = exp2(u_xlat1.xz);
        u_xlat21 = (-u_xlat1.x) + 1.0;
        u_xlat21 = u_xlat21 * _FogEffectLimit;
        u_xlat21 = max(u_xlat21, _FogEffectStart);
        u_xlat2.w = min(u_xlat21, _FogEffectLimit);
        u_xlat6.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat1.zzz * u_xlat6.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    } else {
        u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
        u_xlat0.x = sqrt(u_xlat0.x);
        u_xlat0.x = u_xlat0.x + (-_FogStartDistance);
        u_xlat0.x = max(u_xlat0.x, 0.0);
        u_xlat0.xy = u_xlat0.xx * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat0.xy = u_xlat0.xy * vec2(500.0, 1000.0);
        u_xlat14 = (-_FogStartDistance) + _FogEndDistance;
        u_xlat14 = max(u_xlat14, 0.100000001);
        u_xlat0.xy = u_xlat0.yx / vec2(u_xlat14);
        u_xlat7.x = u_xlat0.y * _FogEffectLimit;
        u_xlat7.x = max(u_xlat7.x, _FogEffectStart);
        u_xlat2.w = min(u_xlat7.x, _FogEffectLimit);
        u_xlat0.x = u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
        u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
        u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
        u_xlat0.x = (-u_xlat0.x) + 1.0;
        u_xlat7.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat0.xxx * u_xlat7.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    //ENDIF
    }
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat5.y = u_xlat1.y;
    vs_TEXCOORD3.xyz = u_xlat5.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform mediump sampler2D unity_Lightmap;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
ivec2 u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp float u_xlat10_2;
bool u_xlatb2;
mediump vec4 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
lowp vec3 u_xlat10_7;
mediump vec3 u_xlat16_8;
mediump float u_xlat16_9;
vec3 u_xlat10;
mediump vec3 u_xlat16_10;
lowp vec3 u_xlat10_10;
ivec2 u_xlati10;
bool u_xlatb10;
vec3 u_xlat11;
lowp vec3 u_xlat10_11;
vec3 u_xlat15;
lowp vec3 u_xlat10_15;
mediump float u_xlat16_18;
lowp float u_xlat10_19;
bool u_xlatb19;
float u_xlat28;
void main()
{
    u_xlat16_0.x = (-_UMin) + _UMax;
    u_xlat16_9 = u_xlat16_0.x * 0.0250000004;
    u_xlat16_1 = u_xlat16_0.x * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_9 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb10 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb10 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1.x = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb10) * 0xffffffffu);
    if(u_xlati1.x != 0) {
        u_xlat10_10.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_2 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
        u_xlat10_11.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_2.xyz = vec3(u_xlat10_2) * u_xlat10_11.xyz;
        u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Reflectivity);
        u_xlat16_10.xyz = u_xlat10_10.xyz * _Color.xyz + u_xlat16_2.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb2 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb2 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat11.x = _Time.y * _Speed;
        u_xlat11.x = fract(u_xlat11.x);
        u_xlat11.x = u_xlat11.x + -0.5;
        u_xlat11.x = abs(u_xlat11.x) * _Magnitude + _MinValue;
        u_xlat11.xyz = u_xlat16_10.xyz * u_xlat11.xxx;
        u_xlat10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb2)) ? u_xlat11.xyz : u_xlat10.xyz;
        u_xlat16_10.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
        u_xlat16_4.xyz = u_xlat16_10.xyz * unity_Lightmap_HDR.xxx;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_5.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;
        u_xlat16_3.xyz = (-u_xlat16_3.xyz) * u_xlat16_4.xyz + vs_COLOR1.xyz;
        u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_3.xyz + u_xlat16_5.xyz;
        u_xlat16_2.w = _BloomFactor;
        u_xlat16_3 = u_xlat16_2;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1.x == 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.0500000007 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.100000001 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.150000006 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.200000003 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.25 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.300000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.349999994 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.400000006 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.450000018 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.5 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.550000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.600000024 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.650000036 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.699999988 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.75 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.800000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.850000024 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.900000036 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.949999988 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.x = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.x != 0) {
            u_xlat10_10.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_6.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_0.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_0.x = u_xlat16_0.x + u_xlat16_0.x;
            u_xlat16_0.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_0.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_15.xyz = texture(_EnvTex, u_xlat16_0.xyz).xyz;
            u_xlat16_6.xyz = u_xlat10_6.xxx * u_xlat10_15.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_10.xyz = u_xlat10_10.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb6 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb6 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat15.x = _Time.y * _Speed;
            u_xlat15.x = fract(u_xlat15.x);
            u_xlat15.x = u_xlat15.x + -0.5;
            u_xlat15.x = abs(u_xlat15.x) * _Magnitude + _MinValue;
            u_xlat15.xyz = u_xlat16_10.xyz * u_xlat15.xxx;
            u_xlat10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity);
            u_xlat16_0.xyz = (bool(u_xlatb6)) ? u_xlat15.xyz : u_xlat10.xyz;
            u_xlat16_10.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_10.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_5.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
            u_xlat16_0.xyz = (-u_xlat16_0.xyz) * u_xlat16_4.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_0.xyz + u_xlat16_5.xyz;
            SV_Target0.w = _BloomFactor;
            SV_Target0.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1.x != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LERP" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 _FogColorNear;
uniform 	vec4 _FogColorFar;
uniform 	float _FogColorIntensity;
uniform 	float _FogIntensity;
uniform 	float _FogEffectStart;
uniform 	float _FogEffectLimit;
uniform 	float _FogStartDistance;
uniform 	float _FogEndDistance;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec3 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat2.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat5.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat2.y = u_xlat16_4.x;
    u_xlat5.z = dot(u_xlat2.xy, u_xlat1.xz);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
#ifdef UNITY_ADRENO_ES3
    u_xlatb21 = !!(0.5<_FogColorNear.w);
#else
    u_xlatb21 = 0.5<_FogColorNear.w;
#endif
    if(u_xlatb21){
        u_xlat1.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat21 = dot(u_xlat1.xzw, u_xlat1.xzw);
        u_xlat21 = sqrt(u_xlat21);
        u_xlat21 = u_xlat21 + (-_FogStartDistance);
        u_xlat21 = max(u_xlat21, 0.0);
        u_xlat1.xz = vec2(u_xlat21) * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat1.xz = u_xlat1.xz * (-u_xlat1.xz);
        u_xlat1.xz = u_xlat1.xz * vec2(1.44269502, 1.44269502);
        u_xlat1.xz = exp2(u_xlat1.xz);
        u_xlat21 = (-u_xlat1.x) + 1.0;
        u_xlat21 = u_xlat21 * _FogEffectLimit;
        u_xlat21 = max(u_xlat21, _FogEffectStart);
        u_xlat2.w = min(u_xlat21, _FogEffectLimit);
        u_xlat6.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat1.zzz * u_xlat6.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    } else {
        u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
        u_xlat0.x = sqrt(u_xlat0.x);
        u_xlat0.x = u_xlat0.x + (-_FogStartDistance);
        u_xlat0.x = max(u_xlat0.x, 0.0);
        u_xlat0.xy = u_xlat0.xx * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat0.xy = u_xlat0.xy * vec2(500.0, 1000.0);
        u_xlat14 = (-_FogStartDistance) + _FogEndDistance;
        u_xlat14 = max(u_xlat14, 0.100000001);
        u_xlat0.xy = u_xlat0.yx / vec2(u_xlat14);
        u_xlat7.x = u_xlat0.y * _FogEffectLimit;
        u_xlat7.x = max(u_xlat7.x, _FogEffectStart);
        u_xlat2.w = min(u_xlat7.x, _FogEffectLimit);
        u_xlat0.x = u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
        u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
        u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
        u_xlat0.x = (-u_xlat0.x) + 1.0;
        u_xlat7.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat0.xxx * u_xlat7.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    //ENDIF
    }
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat5.y = u_xlat1.y;
    vs_TEXCOORD3.xyz = u_xlat5.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform mediump sampler2D unity_Lightmap;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
ivec2 u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp float u_xlat10_2;
bool u_xlatb2;
mediump vec4 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
lowp vec3 u_xlat10_7;
mediump vec3 u_xlat16_8;
mediump float u_xlat16_9;
vec3 u_xlat10;
mediump vec3 u_xlat16_10;
lowp vec3 u_xlat10_10;
ivec2 u_xlati10;
bool u_xlatb10;
vec3 u_xlat11;
lowp vec3 u_xlat10_11;
vec3 u_xlat15;
lowp vec3 u_xlat10_15;
mediump float u_xlat16_18;
lowp float u_xlat10_19;
bool u_xlatb19;
float u_xlat28;
void main()
{
    u_xlat16_0.x = (-_UMin) + _UMax;
    u_xlat16_9 = u_xlat16_0.x * 0.0250000004;
    u_xlat16_1 = u_xlat16_0.x * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_9 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb10 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb10 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1.x = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb10) * 0xffffffffu);
    if(u_xlati1.x != 0) {
        u_xlat10_10.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_2 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
        u_xlat10_11.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_2.xyz = vec3(u_xlat10_2) * u_xlat10_11.xyz;
        u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Reflectivity);
        u_xlat16_10.xyz = u_xlat10_10.xyz * _Color.xyz + u_xlat16_2.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb2 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb2 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat11.x = _Time.y * _Speed;
        u_xlat11.x = fract(u_xlat11.x);
        u_xlat11.x = u_xlat11.x + -0.5;
        u_xlat11.x = abs(u_xlat11.x) * _Magnitude + _MinValue;
        u_xlat11.xyz = u_xlat16_10.xyz * u_xlat11.xxx;
        u_xlat10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb2)) ? u_xlat11.xyz : u_xlat10.xyz;
        u_xlat16_10.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
        u_xlat16_4.xyz = u_xlat16_10.xyz * unity_Lightmap_HDR.xxx;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_5.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;
        u_xlat16_3.xyz = (-u_xlat16_3.xyz) * u_xlat16_4.xyz + vs_COLOR1.xyz;
        u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_3.xyz + u_xlat16_5.xyz;
        u_xlat16_2.w = _BloomFactor;
        u_xlat16_3 = u_xlat16_2;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1.x == 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.0500000007 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.100000001 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.150000006 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.200000003 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.25 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.300000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.349999994 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.400000006 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.450000018 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.5 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.550000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.600000024 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.650000036 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.699999988 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.75 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.800000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.850000024 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.900000036 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.949999988 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.x = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.x != 0) {
            u_xlat10_10.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_6.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_0.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_0.x = u_xlat16_0.x + u_xlat16_0.x;
            u_xlat16_0.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_0.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_15.xyz = texture(_EnvTex, u_xlat16_0.xyz).xyz;
            u_xlat16_6.xyz = u_xlat10_6.xxx * u_xlat10_15.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_10.xyz = u_xlat10_10.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb6 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb6 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat15.x = _Time.y * _Speed;
            u_xlat15.x = fract(u_xlat15.x);
            u_xlat15.x = u_xlat15.x + -0.5;
            u_xlat15.x = abs(u_xlat15.x) * _Magnitude + _MinValue;
            u_xlat15.xyz = u_xlat16_10.xyz * u_xlat15.xxx;
            u_xlat10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity);
            u_xlat16_0.xyz = (bool(u_xlatb6)) ? u_xlat15.xyz : u_xlat10.xyz;
            u_xlat16_10.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_10.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_5.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
            u_xlat16_0.xyz = (-u_xlat16_0.xyz) * u_xlat16_4.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_0.xyz + u_xlat16_5.xyz;
            SV_Target0.w = _BloomFactor;
            SV_Target0.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1.x != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LERP" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 _FogColorNear;
uniform 	vec4 _FogColorFar;
uniform 	float _FogColorIntensity;
uniform 	float _FogIntensity;
uniform 	float _FogEffectStart;
uniform 	float _FogEffectLimit;
uniform 	float _FogStartDistance;
uniform 	float _FogEndDistance;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec3 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat2.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat5.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat2.y = u_xlat16_4.x;
    u_xlat5.z = dot(u_xlat2.xy, u_xlat1.xz);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
#ifdef UNITY_ADRENO_ES3
    u_xlatb21 = !!(0.5<_FogColorNear.w);
#else
    u_xlatb21 = 0.5<_FogColorNear.w;
#endif
    if(u_xlatb21){
        u_xlat1.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat21 = dot(u_xlat1.xzw, u_xlat1.xzw);
        u_xlat21 = sqrt(u_xlat21);
        u_xlat21 = u_xlat21 + (-_FogStartDistance);
        u_xlat21 = max(u_xlat21, 0.0);
        u_xlat1.xz = vec2(u_xlat21) * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat1.xz = u_xlat1.xz * (-u_xlat1.xz);
        u_xlat1.xz = u_xlat1.xz * vec2(1.44269502, 1.44269502);
        u_xlat1.xz = exp2(u_xlat1.xz);
        u_xlat21 = (-u_xlat1.x) + 1.0;
        u_xlat21 = u_xlat21 * _FogEffectLimit;
        u_xlat21 = max(u_xlat21, _FogEffectStart);
        u_xlat2.w = min(u_xlat21, _FogEffectLimit);
        u_xlat6.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat1.zzz * u_xlat6.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    } else {
        u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
        u_xlat0.x = sqrt(u_xlat0.x);
        u_xlat0.x = u_xlat0.x + (-_FogStartDistance);
        u_xlat0.x = max(u_xlat0.x, 0.0);
        u_xlat0.xy = u_xlat0.xx * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat0.xy = u_xlat0.xy * vec2(500.0, 1000.0);
        u_xlat14 = (-_FogStartDistance) + _FogEndDistance;
        u_xlat14 = max(u_xlat14, 0.100000001);
        u_xlat0.xy = u_xlat0.yx / vec2(u_xlat14);
        u_xlat7.x = u_xlat0.y * _FogEffectLimit;
        u_xlat7.x = max(u_xlat7.x, _FogEffectStart);
        u_xlat2.w = min(u_xlat7.x, _FogEffectLimit);
        u_xlat0.x = u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
        u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
        u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
        u_xlat0.x = (-u_xlat0.x) + 1.0;
        u_xlat7.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat0.xxx * u_xlat7.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    //ENDIF
    }
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat5.y = u_xlat1.y;
    vs_TEXCOORD3.xyz = u_xlat5.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform mediump sampler2D unity_Lightmap;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
ivec2 u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp float u_xlat10_2;
bool u_xlatb2;
mediump vec4 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
lowp vec3 u_xlat10_7;
mediump vec3 u_xlat16_8;
mediump float u_xlat16_9;
vec3 u_xlat10;
mediump vec3 u_xlat16_10;
lowp vec3 u_xlat10_10;
ivec2 u_xlati10;
bool u_xlatb10;
vec3 u_xlat11;
lowp vec3 u_xlat10_11;
vec3 u_xlat15;
lowp vec3 u_xlat10_15;
mediump float u_xlat16_18;
lowp float u_xlat10_19;
bool u_xlatb19;
float u_xlat28;
void main()
{
    u_xlat16_0.x = (-_UMin) + _UMax;
    u_xlat16_9 = u_xlat16_0.x * 0.0250000004;
    u_xlat16_1 = u_xlat16_0.x * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_9 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb10 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb10 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1.x = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb10) * 0xffffffffu);
    if(u_xlati1.x != 0) {
        u_xlat10_10.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_2 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
        u_xlat10_11.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_2.xyz = vec3(u_xlat10_2) * u_xlat10_11.xyz;
        u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Reflectivity);
        u_xlat16_10.xyz = u_xlat10_10.xyz * _Color.xyz + u_xlat16_2.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb2 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb2 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat11.x = _Time.y * _Speed;
        u_xlat11.x = fract(u_xlat11.x);
        u_xlat11.x = u_xlat11.x + -0.5;
        u_xlat11.x = abs(u_xlat11.x) * _Magnitude + _MinValue;
        u_xlat11.xyz = u_xlat16_10.xyz * u_xlat11.xxx;
        u_xlat10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb2)) ? u_xlat11.xyz : u_xlat10.xyz;
        u_xlat16_10.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
        u_xlat16_4.xyz = u_xlat16_10.xyz * unity_Lightmap_HDR.xxx;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_5.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;
        u_xlat16_3.xyz = (-u_xlat16_3.xyz) * u_xlat16_4.xyz + vs_COLOR1.xyz;
        u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_3.xyz + u_xlat16_5.xyz;
        u_xlat16_2.w = _BloomFactor;
        u_xlat16_3 = u_xlat16_2;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1.x == 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.0500000007 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.100000001 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.150000006 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.200000003 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.25 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.300000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.349999994 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.400000006 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.450000018 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.5 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.550000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.600000024 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.650000036 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.699999988 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.75 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.800000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.850000024 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.900000036 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat16_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_5.xyz = u_xlat16_6.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.949999988 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.x = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.x != 0) {
            u_xlat10_10.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_6.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_0.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_0.x = u_xlat16_0.x + u_xlat16_0.x;
            u_xlat16_0.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_0.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_15.xyz = texture(_EnvTex, u_xlat16_0.xyz).xyz;
            u_xlat16_6.xyz = u_xlat10_6.xxx * u_xlat10_15.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_10.xyz = u_xlat10_10.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb6 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb6 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat15.x = _Time.y * _Speed;
            u_xlat15.x = fract(u_xlat15.x);
            u_xlat15.x = u_xlat15.x + -0.5;
            u_xlat15.x = abs(u_xlat15.x) * _Magnitude + _MinValue;
            u_xlat15.xyz = u_xlat16_10.xyz * u_xlat15.xxx;
            u_xlat10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity);
            u_xlat16_0.xyz = (bool(u_xlatb6)) ? u_xlat15.xyz : u_xlat10.xyz;
            u_xlat16_10.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_10.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_5.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
            u_xlat16_0.xyz = (-u_xlat16_0.xyz) * u_xlat16_4.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_0.xyz + u_xlat16_5.xyz;
            SV_Target0.w = _BloomFactor;
            SV_Target0.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1.x != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_HEIGHT" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 _HeigtFogParams;
uniform 	vec4 _HeigtFogRamp;
uniform 	vec4 _HeigtFogColBase;
uniform 	vec4 _HeigtFogColDelta;
uniform 	vec4 _HeigtFogColParams;
uniform 	vec4 _HeigtFogRadialCol;
uniform 	vec4 _Mihoyo_FogColor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec2 u_xlat5;
float u_xlat6;
bool u_xlatb6;
mediump float u_xlat16_9;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat18;
float u_xlat19;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD1.xy = u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat2.y = u_xlat1.y;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat5.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat2.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat5.y = u_xlat16_4.x;
    u_xlat2.z = dot(u_xlat5.xy, u_xlat1.xz);
    vs_TEXCOORD3.xyz = u_xlat2.xyz;
    u_xlat18 = u_xlat0.y * _HeigtFogColParams.x + _HeigtFogColParams.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
    u_xlat16_3 = (-u_xlat18) + 2.0;
    u_xlat16_3 = u_xlat18 * u_xlat16_3;
    u_xlat1.xyz = vec3(u_xlat16_3) * _HeigtFogColDelta.xyz + _HeigtFogColBase.xyz;
    u_xlat2.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol.xyz;
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = u_xlat0.y * _HeigtFogParams.x;
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat12.x = u_xlat0.x + (-_HeigtFogRamp.w);
    u_xlat12.x = u_xlat12.x * _HeigtFogColParams.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat12.x = min(max(u_xlat12.x, 0.0), 1.0);
#else
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
#endif
    u_xlat1.xyz = u_xlat12.xxx * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat12.x = _ProjectionParams.z * 0.999899983;
#ifdef UNITY_ADRENO_ES3
    u_xlatb12 = !!(u_xlat0.x>=u_xlat12.x);
#else
    u_xlatb12 = u_xlat0.x>=u_xlat12.x;
#endif
    u_xlat18 = u_xlat0.x * _HeigtFogParams.z + _HeigtFogParams.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat19 = (-u_xlat18) + 2.0;
    u_xlat18 = u_xlat18 * u_xlat19;
    u_xlat19 = u_xlat18 * _HeigtFogColDelta.w;
    u_xlat12.x = (u_xlatb12) ? u_xlat19 : u_xlat18;
    u_xlat12.x = log2(u_xlat12.x);
    u_xlat12.x = u_xlat12.x * _Mihoyo_FogColor.w;
    u_xlat12.x = exp2(u_xlat12.x);
    u_xlat12.x = min(u_xlat12.x, _HeigtFogColBase.w);
    u_xlat1.xyz = u_xlat12.xxx * u_xlat1.xyz;
    u_xlat18 = u_xlat6 * -1.44269502;
    u_xlat12.y = exp2(u_xlat18);
    u_xlat12.xy = (-u_xlat12.xy) + vec2(1.0, 1.0);
    u_xlat18 = u_xlat12.y / u_xlat6;
#ifdef UNITY_ADRENO_ES3
    u_xlatb6 = !!(0.00999999978<abs(u_xlat6));
#else
    u_xlatb6 = 0.00999999978<abs(u_xlat6);
#endif
    u_xlat16_3 = (u_xlatb6) ? u_xlat18 : 1.0;
    u_xlat6 = u_xlat0.x * _HeigtFogParams.y;
    u_xlat0.x = u_xlat0.x * _HeigtFogRamp.x + _HeigtFogRamp.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat16_3 = u_xlat6 * u_xlat16_3;
    u_xlat16_3 = exp2((-u_xlat16_3));
    u_xlat16_3 = min(u_xlat16_3, 1.0);
    u_xlat16_3 = (-u_xlat16_3) + 1.0;
    u_xlat16_9 = (-u_xlat0.x) + 2.0;
    u_xlat16_9 = u_xlat0.x * u_xlat16_9;
    u_xlat0.x = u_xlat16_9 * _HeigtFogRamp.z + (-_HeigtFogRamp.z);
    u_xlat0.x = u_xlat0.x + 1.0;
    u_xlat16_3 = u_xlat0.x * u_xlat16_3;
    u_xlat0.x = min(u_xlat16_3, _HeigtFogColBase.w);
    u_xlat6 = (-u_xlat0.x) + 1.0;
    u_xlat1.xyz = vec3(u_xlat6) * u_xlat1.xyz;
    u_xlat2.w = u_xlat6 * u_xlat12.x;
    u_xlat2.xyz = _Mihoyo_FogColor.xyz * u_xlat0.xxx + u_xlat1.xyz;
    vs_COLOR1 = u_xlat2;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform mediump sampler2D unity_Lightmap;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
ivec2 u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp float u_xlat10_2;
bool u_xlatb2;
mediump vec4 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
lowp vec3 u_xlat10_9;
ivec2 u_xlati9;
bool u_xlatb9;
vec3 u_xlat10;
lowp vec3 u_xlat10_10;
vec3 u_xlat13;
lowp vec3 u_xlat10_13;
mediump float u_xlat16_16;
lowp float u_xlat10_17;
bool u_xlatb17;
mediump float u_xlat16_24;
float u_xlat25;
void main()
{
    u_xlat16_0.x = (-_UMin) + _UMax;
    u_xlat16_8 = u_xlat16_0.x * 0.0250000004;
    u_xlat16_1 = u_xlat16_0.x * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_8 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb9 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb9 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1.x = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb9) * 0xffffffffu);
    if(u_xlati1.x != 0) {
        u_xlat10_9.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_2 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
        u_xlat10_10.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_2.xyz = vec3(u_xlat10_2) * u_xlat10_10.xyz;
        u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Reflectivity);
        u_xlat16_9.xyz = u_xlat10_9.xyz * _Color.xyz + u_xlat16_2.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb2 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb2 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat10.x = _Time.y * _Speed;
        u_xlat10.x = fract(u_xlat10.x);
        u_xlat10.x = u_xlat10.x + -0.5;
        u_xlat10.x = abs(u_xlat10.x) * _Magnitude + _MinValue;
        u_xlat10.xyz = u_xlat16_9.xyz * u_xlat10.xxx;
        u_xlat9.xyz = u_xlat16_9.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb2)) ? u_xlat10.xyz : u_xlat9.xyz;
        u_xlat16_9.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
        u_xlat16_4.xyz = u_xlat16_9.xyz * unity_Lightmap_HDR.xxx;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;
        u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
        u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
        u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
        u_xlat16_2.xyz = u_xlat16_3.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
        u_xlat16_2.w = _BloomFactor;
        u_xlat16_3 = u_xlat16_2;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1.x == 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.0500000007 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.100000001 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.150000006 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.200000003 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.25 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.300000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.349999994 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.400000006 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.450000018 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.5 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.550000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.600000024 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.650000036 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.699999988 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.75 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.800000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.850000024 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.900000036 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.949999988 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.x = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.x != 0) {
            u_xlat10_9.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_5.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_0.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_0.x = u_xlat16_0.x + u_xlat16_0.x;
            u_xlat16_0.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_0.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_13.xyz = texture(_EnvTex, u_xlat16_0.xyz).xyz;
            u_xlat16_5.xyz = u_xlat10_5.xxx * u_xlat10_13.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Reflectivity);
            u_xlat16_9.xyz = u_xlat10_9.xyz * _Color.xyz + u_xlat16_5.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat13.x = _Time.y * _Speed;
            u_xlat13.x = fract(u_xlat13.x);
            u_xlat13.x = u_xlat13.x + -0.5;
            u_xlat13.x = abs(u_xlat13.x) * _Magnitude + _MinValue;
            u_xlat13.xyz = u_xlat16_9.xyz * u_xlat13.xxx;
            u_xlat9.xyz = u_xlat16_9.xyz * vec3(_LightMapIntensity);
            u_xlat16_0.xyz = (bool(u_xlatb5)) ? u_xlat13.xyz : u_xlat9.xyz;
            u_xlat16_9.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_9.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
            u_xlat16_24 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_24 = min(max(u_xlat16_24, 0.0), 1.0);
#else
            u_xlat16_24 = clamp(u_xlat16_24, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(u_xlat16_24) + vs_COLOR1.xyz;
            SV_Target0.w = _BloomFactor;
            SV_Target0.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1.x != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_HEIGHT" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 _HeigtFogParams;
uniform 	vec4 _HeigtFogRamp;
uniform 	vec4 _HeigtFogColBase;
uniform 	vec4 _HeigtFogColDelta;
uniform 	vec4 _HeigtFogColParams;
uniform 	vec4 _HeigtFogRadialCol;
uniform 	vec4 _Mihoyo_FogColor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec2 u_xlat5;
float u_xlat6;
bool u_xlatb6;
mediump float u_xlat16_9;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat18;
float u_xlat19;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD1.xy = u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat2.y = u_xlat1.y;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat5.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat2.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat5.y = u_xlat16_4.x;
    u_xlat2.z = dot(u_xlat5.xy, u_xlat1.xz);
    vs_TEXCOORD3.xyz = u_xlat2.xyz;
    u_xlat18 = u_xlat0.y * _HeigtFogColParams.x + _HeigtFogColParams.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
    u_xlat16_3 = (-u_xlat18) + 2.0;
    u_xlat16_3 = u_xlat18 * u_xlat16_3;
    u_xlat1.xyz = vec3(u_xlat16_3) * _HeigtFogColDelta.xyz + _HeigtFogColBase.xyz;
    u_xlat2.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol.xyz;
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = u_xlat0.y * _HeigtFogParams.x;
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat12.x = u_xlat0.x + (-_HeigtFogRamp.w);
    u_xlat12.x = u_xlat12.x * _HeigtFogColParams.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat12.x = min(max(u_xlat12.x, 0.0), 1.0);
#else
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
#endif
    u_xlat1.xyz = u_xlat12.xxx * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat12.x = _ProjectionParams.z * 0.999899983;
#ifdef UNITY_ADRENO_ES3
    u_xlatb12 = !!(u_xlat0.x>=u_xlat12.x);
#else
    u_xlatb12 = u_xlat0.x>=u_xlat12.x;
#endif
    u_xlat18 = u_xlat0.x * _HeigtFogParams.z + _HeigtFogParams.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat19 = (-u_xlat18) + 2.0;
    u_xlat18 = u_xlat18 * u_xlat19;
    u_xlat19 = u_xlat18 * _HeigtFogColDelta.w;
    u_xlat12.x = (u_xlatb12) ? u_xlat19 : u_xlat18;
    u_xlat12.x = log2(u_xlat12.x);
    u_xlat12.x = u_xlat12.x * _Mihoyo_FogColor.w;
    u_xlat12.x = exp2(u_xlat12.x);
    u_xlat12.x = min(u_xlat12.x, _HeigtFogColBase.w);
    u_xlat1.xyz = u_xlat12.xxx * u_xlat1.xyz;
    u_xlat18 = u_xlat6 * -1.44269502;
    u_xlat12.y = exp2(u_xlat18);
    u_xlat12.xy = (-u_xlat12.xy) + vec2(1.0, 1.0);
    u_xlat18 = u_xlat12.y / u_xlat6;
#ifdef UNITY_ADRENO_ES3
    u_xlatb6 = !!(0.00999999978<abs(u_xlat6));
#else
    u_xlatb6 = 0.00999999978<abs(u_xlat6);
#endif
    u_xlat16_3 = (u_xlatb6) ? u_xlat18 : 1.0;
    u_xlat6 = u_xlat0.x * _HeigtFogParams.y;
    u_xlat0.x = u_xlat0.x * _HeigtFogRamp.x + _HeigtFogRamp.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat16_3 = u_xlat6 * u_xlat16_3;
    u_xlat16_3 = exp2((-u_xlat16_3));
    u_xlat16_3 = min(u_xlat16_3, 1.0);
    u_xlat16_3 = (-u_xlat16_3) + 1.0;
    u_xlat16_9 = (-u_xlat0.x) + 2.0;
    u_xlat16_9 = u_xlat0.x * u_xlat16_9;
    u_xlat0.x = u_xlat16_9 * _HeigtFogRamp.z + (-_HeigtFogRamp.z);
    u_xlat0.x = u_xlat0.x + 1.0;
    u_xlat16_3 = u_xlat0.x * u_xlat16_3;
    u_xlat0.x = min(u_xlat16_3, _HeigtFogColBase.w);
    u_xlat6 = (-u_xlat0.x) + 1.0;
    u_xlat1.xyz = vec3(u_xlat6) * u_xlat1.xyz;
    u_xlat2.w = u_xlat6 * u_xlat12.x;
    u_xlat2.xyz = _Mihoyo_FogColor.xyz * u_xlat0.xxx + u_xlat1.xyz;
    vs_COLOR1 = u_xlat2;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform mediump sampler2D unity_Lightmap;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
ivec2 u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp float u_xlat10_2;
bool u_xlatb2;
mediump vec4 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
lowp vec3 u_xlat10_9;
ivec2 u_xlati9;
bool u_xlatb9;
vec3 u_xlat10;
lowp vec3 u_xlat10_10;
vec3 u_xlat13;
lowp vec3 u_xlat10_13;
mediump float u_xlat16_16;
lowp float u_xlat10_17;
bool u_xlatb17;
mediump float u_xlat16_24;
float u_xlat25;
void main()
{
    u_xlat16_0.x = (-_UMin) + _UMax;
    u_xlat16_8 = u_xlat16_0.x * 0.0250000004;
    u_xlat16_1 = u_xlat16_0.x * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_8 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb9 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb9 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1.x = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb9) * 0xffffffffu);
    if(u_xlati1.x != 0) {
        u_xlat10_9.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_2 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
        u_xlat10_10.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_2.xyz = vec3(u_xlat10_2) * u_xlat10_10.xyz;
        u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Reflectivity);
        u_xlat16_9.xyz = u_xlat10_9.xyz * _Color.xyz + u_xlat16_2.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb2 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb2 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat10.x = _Time.y * _Speed;
        u_xlat10.x = fract(u_xlat10.x);
        u_xlat10.x = u_xlat10.x + -0.5;
        u_xlat10.x = abs(u_xlat10.x) * _Magnitude + _MinValue;
        u_xlat10.xyz = u_xlat16_9.xyz * u_xlat10.xxx;
        u_xlat9.xyz = u_xlat16_9.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb2)) ? u_xlat10.xyz : u_xlat9.xyz;
        u_xlat16_9.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
        u_xlat16_4.xyz = u_xlat16_9.xyz * unity_Lightmap_HDR.xxx;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;
        u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
        u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
        u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
        u_xlat16_2.xyz = u_xlat16_3.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
        u_xlat16_2.w = _BloomFactor;
        u_xlat16_3 = u_xlat16_2;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1.x == 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.0500000007 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.100000001 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.150000006 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.200000003 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.25 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.300000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.349999994 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.400000006 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.450000018 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.5 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.550000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.600000024 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.650000036 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.699999988 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.75 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.800000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.850000024 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.900000036 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.949999988 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.x = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.x != 0) {
            u_xlat10_9.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_5.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_0.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_0.x = u_xlat16_0.x + u_xlat16_0.x;
            u_xlat16_0.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_0.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_13.xyz = texture(_EnvTex, u_xlat16_0.xyz).xyz;
            u_xlat16_5.xyz = u_xlat10_5.xxx * u_xlat10_13.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Reflectivity);
            u_xlat16_9.xyz = u_xlat10_9.xyz * _Color.xyz + u_xlat16_5.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat13.x = _Time.y * _Speed;
            u_xlat13.x = fract(u_xlat13.x);
            u_xlat13.x = u_xlat13.x + -0.5;
            u_xlat13.x = abs(u_xlat13.x) * _Magnitude + _MinValue;
            u_xlat13.xyz = u_xlat16_9.xyz * u_xlat13.xxx;
            u_xlat9.xyz = u_xlat16_9.xyz * vec3(_LightMapIntensity);
            u_xlat16_0.xyz = (bool(u_xlatb5)) ? u_xlat13.xyz : u_xlat9.xyz;
            u_xlat16_9.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_9.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
            u_xlat16_24 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_24 = min(max(u_xlat16_24, 0.0), 1.0);
#else
            u_xlat16_24 = clamp(u_xlat16_24, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(u_xlat16_24) + vs_COLOR1.xyz;
            SV_Target0.w = _BloomFactor;
            SV_Target0.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1.x != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_HEIGHT" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 _HeigtFogParams;
uniform 	vec4 _HeigtFogRamp;
uniform 	vec4 _HeigtFogColBase;
uniform 	vec4 _HeigtFogColDelta;
uniform 	vec4 _HeigtFogColParams;
uniform 	vec4 _HeigtFogRadialCol;
uniform 	vec4 _Mihoyo_FogColor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec2 u_xlat5;
float u_xlat6;
bool u_xlatb6;
mediump float u_xlat16_9;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat18;
float u_xlat19;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD1.xy = u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat2.y = u_xlat1.y;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat5.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat2.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat5.y = u_xlat16_4.x;
    u_xlat2.z = dot(u_xlat5.xy, u_xlat1.xz);
    vs_TEXCOORD3.xyz = u_xlat2.xyz;
    u_xlat18 = u_xlat0.y * _HeigtFogColParams.x + _HeigtFogColParams.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
    u_xlat16_3 = (-u_xlat18) + 2.0;
    u_xlat16_3 = u_xlat18 * u_xlat16_3;
    u_xlat1.xyz = vec3(u_xlat16_3) * _HeigtFogColDelta.xyz + _HeigtFogColBase.xyz;
    u_xlat2.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol.xyz;
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = u_xlat0.y * _HeigtFogParams.x;
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat12.x = u_xlat0.x + (-_HeigtFogRamp.w);
    u_xlat12.x = u_xlat12.x * _HeigtFogColParams.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat12.x = min(max(u_xlat12.x, 0.0), 1.0);
#else
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
#endif
    u_xlat1.xyz = u_xlat12.xxx * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat12.x = _ProjectionParams.z * 0.999899983;
#ifdef UNITY_ADRENO_ES3
    u_xlatb12 = !!(u_xlat0.x>=u_xlat12.x);
#else
    u_xlatb12 = u_xlat0.x>=u_xlat12.x;
#endif
    u_xlat18 = u_xlat0.x * _HeigtFogParams.z + _HeigtFogParams.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat19 = (-u_xlat18) + 2.0;
    u_xlat18 = u_xlat18 * u_xlat19;
    u_xlat19 = u_xlat18 * _HeigtFogColDelta.w;
    u_xlat12.x = (u_xlatb12) ? u_xlat19 : u_xlat18;
    u_xlat12.x = log2(u_xlat12.x);
    u_xlat12.x = u_xlat12.x * _Mihoyo_FogColor.w;
    u_xlat12.x = exp2(u_xlat12.x);
    u_xlat12.x = min(u_xlat12.x, _HeigtFogColBase.w);
    u_xlat1.xyz = u_xlat12.xxx * u_xlat1.xyz;
    u_xlat18 = u_xlat6 * -1.44269502;
    u_xlat12.y = exp2(u_xlat18);
    u_xlat12.xy = (-u_xlat12.xy) + vec2(1.0, 1.0);
    u_xlat18 = u_xlat12.y / u_xlat6;
#ifdef UNITY_ADRENO_ES3
    u_xlatb6 = !!(0.00999999978<abs(u_xlat6));
#else
    u_xlatb6 = 0.00999999978<abs(u_xlat6);
#endif
    u_xlat16_3 = (u_xlatb6) ? u_xlat18 : 1.0;
    u_xlat6 = u_xlat0.x * _HeigtFogParams.y;
    u_xlat0.x = u_xlat0.x * _HeigtFogRamp.x + _HeigtFogRamp.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat16_3 = u_xlat6 * u_xlat16_3;
    u_xlat16_3 = exp2((-u_xlat16_3));
    u_xlat16_3 = min(u_xlat16_3, 1.0);
    u_xlat16_3 = (-u_xlat16_3) + 1.0;
    u_xlat16_9 = (-u_xlat0.x) + 2.0;
    u_xlat16_9 = u_xlat0.x * u_xlat16_9;
    u_xlat0.x = u_xlat16_9 * _HeigtFogRamp.z + (-_HeigtFogRamp.z);
    u_xlat0.x = u_xlat0.x + 1.0;
    u_xlat16_3 = u_xlat0.x * u_xlat16_3;
    u_xlat0.x = min(u_xlat16_3, _HeigtFogColBase.w);
    u_xlat6 = (-u_xlat0.x) + 1.0;
    u_xlat1.xyz = vec3(u_xlat6) * u_xlat1.xyz;
    u_xlat2.w = u_xlat6 * u_xlat12.x;
    u_xlat2.xyz = _Mihoyo_FogColor.xyz * u_xlat0.xxx + u_xlat1.xyz;
    vs_COLOR1 = u_xlat2;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform mediump sampler2D unity_Lightmap;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
ivec2 u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp float u_xlat10_2;
bool u_xlatb2;
mediump vec4 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
lowp vec3 u_xlat10_9;
ivec2 u_xlati9;
bool u_xlatb9;
vec3 u_xlat10;
lowp vec3 u_xlat10_10;
vec3 u_xlat13;
lowp vec3 u_xlat10_13;
mediump float u_xlat16_16;
lowp float u_xlat10_17;
bool u_xlatb17;
mediump float u_xlat16_24;
float u_xlat25;
void main()
{
    u_xlat16_0.x = (-_UMin) + _UMax;
    u_xlat16_8 = u_xlat16_0.x * 0.0250000004;
    u_xlat16_1 = u_xlat16_0.x * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_8 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb9 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb9 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1.x = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb9) * 0xffffffffu);
    if(u_xlati1.x != 0) {
        u_xlat10_9.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_2 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
        u_xlat10_10.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_2.xyz = vec3(u_xlat10_2) * u_xlat10_10.xyz;
        u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Reflectivity);
        u_xlat16_9.xyz = u_xlat10_9.xyz * _Color.xyz + u_xlat16_2.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb2 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb2 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat10.x = _Time.y * _Speed;
        u_xlat10.x = fract(u_xlat10.x);
        u_xlat10.x = u_xlat10.x + -0.5;
        u_xlat10.x = abs(u_xlat10.x) * _Magnitude + _MinValue;
        u_xlat10.xyz = u_xlat16_9.xyz * u_xlat10.xxx;
        u_xlat9.xyz = u_xlat16_9.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb2)) ? u_xlat10.xyz : u_xlat9.xyz;
        u_xlat16_9.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
        u_xlat16_4.xyz = u_xlat16_9.xyz * unity_Lightmap_HDR.xxx;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;
        u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
        u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
        u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
        u_xlat16_2.xyz = u_xlat16_3.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
        u_xlat16_2.w = _BloomFactor;
        u_xlat16_3 = u_xlat16_2;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1.x == 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.0500000007 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.100000001 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.150000006 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.200000003 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.25 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.300000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.349999994 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.400000006 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.450000018 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.5 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.550000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.600000024 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.650000036 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.699999988 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.75 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.800000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.850000024 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.900000036 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.949999988 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.x = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.x != 0) {
            u_xlat10_9.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_5.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_0.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_0.x = u_xlat16_0.x + u_xlat16_0.x;
            u_xlat16_0.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_0.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_13.xyz = texture(_EnvTex, u_xlat16_0.xyz).xyz;
            u_xlat16_5.xyz = u_xlat10_5.xxx * u_xlat10_13.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Reflectivity);
            u_xlat16_9.xyz = u_xlat10_9.xyz * _Color.xyz + u_xlat16_5.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat13.x = _Time.y * _Speed;
            u_xlat13.x = fract(u_xlat13.x);
            u_xlat13.x = u_xlat13.x + -0.5;
            u_xlat13.x = abs(u_xlat13.x) * _Magnitude + _MinValue;
            u_xlat13.xyz = u_xlat16_9.xyz * u_xlat13.xxx;
            u_xlat9.xyz = u_xlat16_9.xyz * vec3(_LightMapIntensity);
            u_xlat16_0.xyz = (bool(u_xlatb5)) ? u_xlat13.xyz : u_xlat9.xyz;
            u_xlat16_9.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_9.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
            u_xlat16_24 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_24 = min(max(u_xlat16_24, 0.0), 1.0);
#else
            u_xlat16_24 = clamp(u_xlat16_24, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(u_xlat16_24) + vs_COLOR1.xyz;
            SV_Target0.w = _BloomFactor;
            SV_Target0.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1.x != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_HEIGHT" "FOG_LERP" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	mediump float _LerpFactor;
uniform 	vec4 _HeigtFogParams2;
uniform 	vec4 _HeigtFogParams3;
uniform 	vec4 _HeigtFogRamp2;
uniform 	vec4 _HeigtFogRamp3;
uniform 	vec4 _HeigtFogColBase2;
uniform 	vec4 _HeigtFogColBase3;
uniform 	vec4 _HeigtFogColDelta2;
uniform 	vec4 _HeigtFogColDelta3;
uniform 	vec4 _HeigtFogColParams2;
uniform 	vec4 _HeigtFogColParams3;
uniform 	vec4 _HeigtFogRadialCol2;
uniform 	vec4 _HeigtFogRadialCol3;
uniform 	vec4 _Mihoyo_FogColor2;
uniform 	vec4 _Mihoyo_FogColor3;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
bool u_xlatb2;
vec4 u_xlat3;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec2 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat8;
mediump float u_xlat16_9;
mediump float u_xlat16_10;
float u_xlat12;
bool u_xlatb12;
float u_xlat18;
float u_xlat19;
bool u_xlatb19;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD1.xy = u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat2.y = u_xlat1.y;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat5.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat2.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat5.y = u_xlat16_4.x;
    u_xlat2.z = dot(u_xlat5.xy, u_xlat1.xz);
    vs_TEXCOORD3.xyz = u_xlat2.xyz;
    u_xlat18 = u_xlat0.y * _HeigtFogColParams3.x + _HeigtFogColParams3.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat16_3 = (-u_xlat18) + 2.0;
    u_xlat16_3 = u_xlat18 * u_xlat16_3;
    u_xlat1.xyz = vec3(u_xlat16_3) * _HeigtFogColDelta3.xyz + _HeigtFogColBase3.xyz;
    u_xlat2.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol3.xyz;
    u_xlat0.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
    u_xlat6.x = u_xlat0.y * _HeigtFogColParams2.x + _HeigtFogColParams2.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat0.x = dot(u_xlat0.xzw, u_xlat0.xzw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat18 = u_xlat0.x + (-_HeigtFogRamp3.w);
    u_xlat18 = u_xlat18 * _HeigtFogColParams3.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat18 = u_xlat0.x * _HeigtFogParams3.z + _HeigtFogParams3.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat19 = (-u_xlat18) + 2.0;
    u_xlat18 = u_xlat18 * u_xlat19;
    u_xlat19 = u_xlat18 * _HeigtFogColDelta3.w;
    u_xlat2.x = _ProjectionParams.z * 0.999899983;
#ifdef UNITY_ADRENO_ES3
    u_xlatb2 = !!(u_xlat0.x>=u_xlat2.x);
#else
    u_xlatb2 = u_xlat0.x>=u_xlat2.x;
#endif
    u_xlat18 = (u_xlatb2) ? u_xlat19 : u_xlat18;
    u_xlat18 = log2(u_xlat18);
    u_xlat18 = u_xlat18 * _Mihoyo_FogColor3.w;
    u_xlat18 = exp2(u_xlat18);
    u_xlat18 = min(u_xlat18, _HeigtFogColBase3.w);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat18 = (-u_xlat18) + 1.0;
    u_xlat19 = u_xlat0.z * _HeigtFogParams3.x;
    u_xlat12 = u_xlat0.z * _HeigtFogParams2.x;
    u_xlat8.x = u_xlat19 * -1.44269502;
    u_xlat8.x = exp2(u_xlat8.x);
    u_xlat8.x = (-u_xlat8.x) + 1.0;
    u_xlat8.x = u_xlat8.x / u_xlat19;
#ifdef UNITY_ADRENO_ES3
    u_xlatb19 = !!(0.00999999978<abs(u_xlat19));
#else
    u_xlatb19 = 0.00999999978<abs(u_xlat19);
#endif
    u_xlat16_3 = (u_xlatb19) ? u_xlat8.x : 1.0;
    u_xlat19 = u_xlat0.x * _HeigtFogParams3.y;
    u_xlat16_3 = u_xlat19 * u_xlat16_3;
    u_xlat16_3 = exp2((-u_xlat16_3));
    u_xlat16_3 = min(u_xlat16_3, 1.0);
    u_xlat16_3 = (-u_xlat16_3) + 1.0;
    u_xlat19 = u_xlat0.x * _HeigtFogRamp3.x + _HeigtFogRamp3.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat19 = min(max(u_xlat19, 0.0), 1.0);
#else
    u_xlat19 = clamp(u_xlat19, 0.0, 1.0);
#endif
    u_xlat16_9 = (-u_xlat19) + 2.0;
    u_xlat16_9 = u_xlat19 * u_xlat16_9;
    u_xlat19 = u_xlat16_9 * _HeigtFogRamp3.z + (-_HeigtFogRamp3.z);
    u_xlat19 = u_xlat19 + 1.0;
    u_xlat16_3 = u_xlat19 * u_xlat16_3;
    u_xlat19 = min(u_xlat16_3, _HeigtFogColBase3.w);
    u_xlat8.x = (-u_xlat19) + 1.0;
    u_xlat1.xyz = u_xlat1.xyz * u_xlat8.xxx;
    u_xlat3.w = u_xlat18 * u_xlat8.x;
    u_xlat3.xyz = _Mihoyo_FogColor3.xyz * vec3(u_xlat19) + u_xlat1.xyz;
    u_xlat16_4.x = (-u_xlat6.x) + 2.0;
    u_xlat16_4.x = u_xlat6.x * u_xlat16_4.x;
    u_xlat1.xyz = u_xlat16_4.xxx * _HeigtFogColDelta2.xyz + _HeigtFogColBase2.xyz;
    u_xlat8.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol2.xyz;
    u_xlat6.x = u_xlat0.x + (-_HeigtFogRamp2.w);
    u_xlat6.x = u_xlat6.x * _HeigtFogColParams2.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat1.xyz = u_xlat6.xxx * u_xlat8.xyz + u_xlat1.xyz;
    u_xlat6.x = u_xlat0.x * _HeigtFogParams2.z + _HeigtFogParams2.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat18 = (-u_xlat6.x) + 2.0;
    u_xlat6.x = u_xlat18 * u_xlat6.x;
    u_xlat18 = u_xlat6.x * _HeigtFogColDelta2.w;
    u_xlat6.x = (u_xlatb2) ? u_xlat18 : u_xlat6.x;
    u_xlat6.x = log2(u_xlat6.x);
    u_xlat6.x = u_xlat6.x * _Mihoyo_FogColor2.w;
    u_xlat6.x = exp2(u_xlat6.x);
    u_xlat6.x = min(u_xlat6.x, _HeigtFogColBase2.w);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat18 = u_xlat12 * -1.44269502;
    u_xlat6.z = exp2(u_xlat18);
    u_xlat6.xz = (-u_xlat6.xz) + vec2(1.0, 1.0);
    u_xlat18 = u_xlat6.z / u_xlat12;
#ifdef UNITY_ADRENO_ES3
    u_xlatb12 = !!(0.00999999978<abs(u_xlat12));
#else
    u_xlatb12 = 0.00999999978<abs(u_xlat12);
#endif
    u_xlat16_4.x = (u_xlatb12) ? u_xlat18 : 1.0;
    u_xlat12 = u_xlat0.x * _HeigtFogParams2.y;
    u_xlat0.x = u_xlat0.x * _HeigtFogRamp2.x + _HeigtFogRamp2.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat16_4.x = u_xlat12 * u_xlat16_4.x;
    u_xlat16_4.x = exp2((-u_xlat16_4.x));
    u_xlat16_4.x = min(u_xlat16_4.x, 1.0);
    u_xlat16_4.x = (-u_xlat16_4.x) + 1.0;
    u_xlat16_10 = (-u_xlat0.x) + 2.0;
    u_xlat16_10 = u_xlat0.x * u_xlat16_10;
    u_xlat0.x = u_xlat16_10 * _HeigtFogRamp2.z + (-_HeigtFogRamp2.z);
    u_xlat0.x = u_xlat0.x + 1.0;
    u_xlat16_4.x = u_xlat0.x * u_xlat16_4.x;
    u_xlat0.x = min(u_xlat16_4.x, _HeigtFogColBase2.w);
    u_xlat12 = (-u_xlat0.x) + 1.0;
    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
    u_xlat2.w = u_xlat12 * u_xlat6.x;
    u_xlat2.xyz = _Mihoyo_FogColor2.xyz * u_xlat0.xxx + u_xlat1.xyz;
    u_xlat0 = (-u_xlat2) + u_xlat3;
    u_xlat0 = vec4(vec4(_LerpFactor, _LerpFactor, _LerpFactor, _LerpFactor)) * u_xlat0 + u_xlat2;
    vs_COLOR1 = u_xlat0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform mediump sampler2D unity_Lightmap;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
ivec2 u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp float u_xlat10_2;
bool u_xlatb2;
mediump vec4 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
lowp vec3 u_xlat10_9;
ivec2 u_xlati9;
bool u_xlatb9;
vec3 u_xlat10;
lowp vec3 u_xlat10_10;
vec3 u_xlat13;
lowp vec3 u_xlat10_13;
mediump float u_xlat16_16;
lowp float u_xlat10_17;
bool u_xlatb17;
mediump float u_xlat16_24;
float u_xlat25;
void main()
{
    u_xlat16_0.x = (-_UMin) + _UMax;
    u_xlat16_8 = u_xlat16_0.x * 0.0250000004;
    u_xlat16_1 = u_xlat16_0.x * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_8 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb9 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb9 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1.x = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb9) * 0xffffffffu);
    if(u_xlati1.x != 0) {
        u_xlat10_9.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_2 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
        u_xlat10_10.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_2.xyz = vec3(u_xlat10_2) * u_xlat10_10.xyz;
        u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Reflectivity);
        u_xlat16_9.xyz = u_xlat10_9.xyz * _Color.xyz + u_xlat16_2.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb2 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb2 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat10.x = _Time.y * _Speed;
        u_xlat10.x = fract(u_xlat10.x);
        u_xlat10.x = u_xlat10.x + -0.5;
        u_xlat10.x = abs(u_xlat10.x) * _Magnitude + _MinValue;
        u_xlat10.xyz = u_xlat16_9.xyz * u_xlat10.xxx;
        u_xlat9.xyz = u_xlat16_9.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb2)) ? u_xlat10.xyz : u_xlat9.xyz;
        u_xlat16_9.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
        u_xlat16_4.xyz = u_xlat16_9.xyz * unity_Lightmap_HDR.xxx;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;
        u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
        u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
        u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
        u_xlat16_2.xyz = u_xlat16_3.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
        u_xlat16_2.w = _BloomFactor;
        u_xlat16_3 = u_xlat16_2;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1.x == 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.0500000007 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.100000001 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.150000006 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.200000003 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.25 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.300000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.349999994 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.400000006 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.450000018 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.5 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.550000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.600000024 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.650000036 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.699999988 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.75 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.800000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.850000024 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.900000036 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.949999988 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.x = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.x != 0) {
            u_xlat10_9.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_5.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_0.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_0.x = u_xlat16_0.x + u_xlat16_0.x;
            u_xlat16_0.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_0.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_13.xyz = texture(_EnvTex, u_xlat16_0.xyz).xyz;
            u_xlat16_5.xyz = u_xlat10_5.xxx * u_xlat10_13.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Reflectivity);
            u_xlat16_9.xyz = u_xlat10_9.xyz * _Color.xyz + u_xlat16_5.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat13.x = _Time.y * _Speed;
            u_xlat13.x = fract(u_xlat13.x);
            u_xlat13.x = u_xlat13.x + -0.5;
            u_xlat13.x = abs(u_xlat13.x) * _Magnitude + _MinValue;
            u_xlat13.xyz = u_xlat16_9.xyz * u_xlat13.xxx;
            u_xlat9.xyz = u_xlat16_9.xyz * vec3(_LightMapIntensity);
            u_xlat16_0.xyz = (bool(u_xlatb5)) ? u_xlat13.xyz : u_xlat9.xyz;
            u_xlat16_9.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_9.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
            u_xlat16_24 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_24 = min(max(u_xlat16_24, 0.0), 1.0);
#else
            u_xlat16_24 = clamp(u_xlat16_24, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(u_xlat16_24) + vs_COLOR1.xyz;
            SV_Target0.w = _BloomFactor;
            SV_Target0.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1.x != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_HEIGHT" "FOG_LERP" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	mediump float _LerpFactor;
uniform 	vec4 _HeigtFogParams2;
uniform 	vec4 _HeigtFogParams3;
uniform 	vec4 _HeigtFogRamp2;
uniform 	vec4 _HeigtFogRamp3;
uniform 	vec4 _HeigtFogColBase2;
uniform 	vec4 _HeigtFogColBase3;
uniform 	vec4 _HeigtFogColDelta2;
uniform 	vec4 _HeigtFogColDelta3;
uniform 	vec4 _HeigtFogColParams2;
uniform 	vec4 _HeigtFogColParams3;
uniform 	vec4 _HeigtFogRadialCol2;
uniform 	vec4 _HeigtFogRadialCol3;
uniform 	vec4 _Mihoyo_FogColor2;
uniform 	vec4 _Mihoyo_FogColor3;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
bool u_xlatb2;
vec4 u_xlat3;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec2 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat8;
mediump float u_xlat16_9;
mediump float u_xlat16_10;
float u_xlat12;
bool u_xlatb12;
float u_xlat18;
float u_xlat19;
bool u_xlatb19;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD1.xy = u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat2.y = u_xlat1.y;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat5.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat2.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat5.y = u_xlat16_4.x;
    u_xlat2.z = dot(u_xlat5.xy, u_xlat1.xz);
    vs_TEXCOORD3.xyz = u_xlat2.xyz;
    u_xlat18 = u_xlat0.y * _HeigtFogColParams3.x + _HeigtFogColParams3.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat16_3 = (-u_xlat18) + 2.0;
    u_xlat16_3 = u_xlat18 * u_xlat16_3;
    u_xlat1.xyz = vec3(u_xlat16_3) * _HeigtFogColDelta3.xyz + _HeigtFogColBase3.xyz;
    u_xlat2.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol3.xyz;
    u_xlat0.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
    u_xlat6.x = u_xlat0.y * _HeigtFogColParams2.x + _HeigtFogColParams2.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat0.x = dot(u_xlat0.xzw, u_xlat0.xzw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat18 = u_xlat0.x + (-_HeigtFogRamp3.w);
    u_xlat18 = u_xlat18 * _HeigtFogColParams3.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat18 = u_xlat0.x * _HeigtFogParams3.z + _HeigtFogParams3.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat19 = (-u_xlat18) + 2.0;
    u_xlat18 = u_xlat18 * u_xlat19;
    u_xlat19 = u_xlat18 * _HeigtFogColDelta3.w;
    u_xlat2.x = _ProjectionParams.z * 0.999899983;
#ifdef UNITY_ADRENO_ES3
    u_xlatb2 = !!(u_xlat0.x>=u_xlat2.x);
#else
    u_xlatb2 = u_xlat0.x>=u_xlat2.x;
#endif
    u_xlat18 = (u_xlatb2) ? u_xlat19 : u_xlat18;
    u_xlat18 = log2(u_xlat18);
    u_xlat18 = u_xlat18 * _Mihoyo_FogColor3.w;
    u_xlat18 = exp2(u_xlat18);
    u_xlat18 = min(u_xlat18, _HeigtFogColBase3.w);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat18 = (-u_xlat18) + 1.0;
    u_xlat19 = u_xlat0.z * _HeigtFogParams3.x;
    u_xlat12 = u_xlat0.z * _HeigtFogParams2.x;
    u_xlat8.x = u_xlat19 * -1.44269502;
    u_xlat8.x = exp2(u_xlat8.x);
    u_xlat8.x = (-u_xlat8.x) + 1.0;
    u_xlat8.x = u_xlat8.x / u_xlat19;
#ifdef UNITY_ADRENO_ES3
    u_xlatb19 = !!(0.00999999978<abs(u_xlat19));
#else
    u_xlatb19 = 0.00999999978<abs(u_xlat19);
#endif
    u_xlat16_3 = (u_xlatb19) ? u_xlat8.x : 1.0;
    u_xlat19 = u_xlat0.x * _HeigtFogParams3.y;
    u_xlat16_3 = u_xlat19 * u_xlat16_3;
    u_xlat16_3 = exp2((-u_xlat16_3));
    u_xlat16_3 = min(u_xlat16_3, 1.0);
    u_xlat16_3 = (-u_xlat16_3) + 1.0;
    u_xlat19 = u_xlat0.x * _HeigtFogRamp3.x + _HeigtFogRamp3.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat19 = min(max(u_xlat19, 0.0), 1.0);
#else
    u_xlat19 = clamp(u_xlat19, 0.0, 1.0);
#endif
    u_xlat16_9 = (-u_xlat19) + 2.0;
    u_xlat16_9 = u_xlat19 * u_xlat16_9;
    u_xlat19 = u_xlat16_9 * _HeigtFogRamp3.z + (-_HeigtFogRamp3.z);
    u_xlat19 = u_xlat19 + 1.0;
    u_xlat16_3 = u_xlat19 * u_xlat16_3;
    u_xlat19 = min(u_xlat16_3, _HeigtFogColBase3.w);
    u_xlat8.x = (-u_xlat19) + 1.0;
    u_xlat1.xyz = u_xlat1.xyz * u_xlat8.xxx;
    u_xlat3.w = u_xlat18 * u_xlat8.x;
    u_xlat3.xyz = _Mihoyo_FogColor3.xyz * vec3(u_xlat19) + u_xlat1.xyz;
    u_xlat16_4.x = (-u_xlat6.x) + 2.0;
    u_xlat16_4.x = u_xlat6.x * u_xlat16_4.x;
    u_xlat1.xyz = u_xlat16_4.xxx * _HeigtFogColDelta2.xyz + _HeigtFogColBase2.xyz;
    u_xlat8.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol2.xyz;
    u_xlat6.x = u_xlat0.x + (-_HeigtFogRamp2.w);
    u_xlat6.x = u_xlat6.x * _HeigtFogColParams2.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat1.xyz = u_xlat6.xxx * u_xlat8.xyz + u_xlat1.xyz;
    u_xlat6.x = u_xlat0.x * _HeigtFogParams2.z + _HeigtFogParams2.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat18 = (-u_xlat6.x) + 2.0;
    u_xlat6.x = u_xlat18 * u_xlat6.x;
    u_xlat18 = u_xlat6.x * _HeigtFogColDelta2.w;
    u_xlat6.x = (u_xlatb2) ? u_xlat18 : u_xlat6.x;
    u_xlat6.x = log2(u_xlat6.x);
    u_xlat6.x = u_xlat6.x * _Mihoyo_FogColor2.w;
    u_xlat6.x = exp2(u_xlat6.x);
    u_xlat6.x = min(u_xlat6.x, _HeigtFogColBase2.w);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat18 = u_xlat12 * -1.44269502;
    u_xlat6.z = exp2(u_xlat18);
    u_xlat6.xz = (-u_xlat6.xz) + vec2(1.0, 1.0);
    u_xlat18 = u_xlat6.z / u_xlat12;
#ifdef UNITY_ADRENO_ES3
    u_xlatb12 = !!(0.00999999978<abs(u_xlat12));
#else
    u_xlatb12 = 0.00999999978<abs(u_xlat12);
#endif
    u_xlat16_4.x = (u_xlatb12) ? u_xlat18 : 1.0;
    u_xlat12 = u_xlat0.x * _HeigtFogParams2.y;
    u_xlat0.x = u_xlat0.x * _HeigtFogRamp2.x + _HeigtFogRamp2.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat16_4.x = u_xlat12 * u_xlat16_4.x;
    u_xlat16_4.x = exp2((-u_xlat16_4.x));
    u_xlat16_4.x = min(u_xlat16_4.x, 1.0);
    u_xlat16_4.x = (-u_xlat16_4.x) + 1.0;
    u_xlat16_10 = (-u_xlat0.x) + 2.0;
    u_xlat16_10 = u_xlat0.x * u_xlat16_10;
    u_xlat0.x = u_xlat16_10 * _HeigtFogRamp2.z + (-_HeigtFogRamp2.z);
    u_xlat0.x = u_xlat0.x + 1.0;
    u_xlat16_4.x = u_xlat0.x * u_xlat16_4.x;
    u_xlat0.x = min(u_xlat16_4.x, _HeigtFogColBase2.w);
    u_xlat12 = (-u_xlat0.x) + 1.0;
    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
    u_xlat2.w = u_xlat12 * u_xlat6.x;
    u_xlat2.xyz = _Mihoyo_FogColor2.xyz * u_xlat0.xxx + u_xlat1.xyz;
    u_xlat0 = (-u_xlat2) + u_xlat3;
    u_xlat0 = vec4(vec4(_LerpFactor, _LerpFactor, _LerpFactor, _LerpFactor)) * u_xlat0 + u_xlat2;
    vs_COLOR1 = u_xlat0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform mediump sampler2D unity_Lightmap;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
ivec2 u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp float u_xlat10_2;
bool u_xlatb2;
mediump vec4 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
lowp vec3 u_xlat10_9;
ivec2 u_xlati9;
bool u_xlatb9;
vec3 u_xlat10;
lowp vec3 u_xlat10_10;
vec3 u_xlat13;
lowp vec3 u_xlat10_13;
mediump float u_xlat16_16;
lowp float u_xlat10_17;
bool u_xlatb17;
mediump float u_xlat16_24;
float u_xlat25;
void main()
{
    u_xlat16_0.x = (-_UMin) + _UMax;
    u_xlat16_8 = u_xlat16_0.x * 0.0250000004;
    u_xlat16_1 = u_xlat16_0.x * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_8 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb9 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb9 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1.x = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb9) * 0xffffffffu);
    if(u_xlati1.x != 0) {
        u_xlat10_9.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_2 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
        u_xlat10_10.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_2.xyz = vec3(u_xlat10_2) * u_xlat10_10.xyz;
        u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Reflectivity);
        u_xlat16_9.xyz = u_xlat10_9.xyz * _Color.xyz + u_xlat16_2.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb2 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb2 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat10.x = _Time.y * _Speed;
        u_xlat10.x = fract(u_xlat10.x);
        u_xlat10.x = u_xlat10.x + -0.5;
        u_xlat10.x = abs(u_xlat10.x) * _Magnitude + _MinValue;
        u_xlat10.xyz = u_xlat16_9.xyz * u_xlat10.xxx;
        u_xlat9.xyz = u_xlat16_9.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb2)) ? u_xlat10.xyz : u_xlat9.xyz;
        u_xlat16_9.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
        u_xlat16_4.xyz = u_xlat16_9.xyz * unity_Lightmap_HDR.xxx;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;
        u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
        u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
        u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
        u_xlat16_2.xyz = u_xlat16_3.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
        u_xlat16_2.w = _BloomFactor;
        u_xlat16_3 = u_xlat16_2;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1.x == 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.0500000007 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.100000001 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.150000006 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.200000003 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.25 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.300000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.349999994 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.400000006 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.450000018 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.5 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.550000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.600000024 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.650000036 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.699999988 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.75 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.800000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.850000024 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.900000036 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.949999988 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.x = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.x != 0) {
            u_xlat10_9.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_5.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_0.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_0.x = u_xlat16_0.x + u_xlat16_0.x;
            u_xlat16_0.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_0.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_13.xyz = texture(_EnvTex, u_xlat16_0.xyz).xyz;
            u_xlat16_5.xyz = u_xlat10_5.xxx * u_xlat10_13.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Reflectivity);
            u_xlat16_9.xyz = u_xlat10_9.xyz * _Color.xyz + u_xlat16_5.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat13.x = _Time.y * _Speed;
            u_xlat13.x = fract(u_xlat13.x);
            u_xlat13.x = u_xlat13.x + -0.5;
            u_xlat13.x = abs(u_xlat13.x) * _Magnitude + _MinValue;
            u_xlat13.xyz = u_xlat16_9.xyz * u_xlat13.xxx;
            u_xlat9.xyz = u_xlat16_9.xyz * vec3(_LightMapIntensity);
            u_xlat16_0.xyz = (bool(u_xlatb5)) ? u_xlat13.xyz : u_xlat9.xyz;
            u_xlat16_9.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_9.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
            u_xlat16_24 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_24 = min(max(u_xlat16_24, 0.0), 1.0);
#else
            u_xlat16_24 = clamp(u_xlat16_24, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(u_xlat16_24) + vs_COLOR1.xyz;
            SV_Target0.w = _BloomFactor;
            SV_Target0.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1.x != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_HEIGHT" "FOG_LERP" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	mediump float _LerpFactor;
uniform 	vec4 _HeigtFogParams2;
uniform 	vec4 _HeigtFogParams3;
uniform 	vec4 _HeigtFogRamp2;
uniform 	vec4 _HeigtFogRamp3;
uniform 	vec4 _HeigtFogColBase2;
uniform 	vec4 _HeigtFogColBase3;
uniform 	vec4 _HeigtFogColDelta2;
uniform 	vec4 _HeigtFogColDelta3;
uniform 	vec4 _HeigtFogColParams2;
uniform 	vec4 _HeigtFogColParams3;
uniform 	vec4 _HeigtFogRadialCol2;
uniform 	vec4 _HeigtFogRadialCol3;
uniform 	vec4 _Mihoyo_FogColor2;
uniform 	vec4 _Mihoyo_FogColor3;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
bool u_xlatb2;
vec4 u_xlat3;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec2 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat8;
mediump float u_xlat16_9;
mediump float u_xlat16_10;
float u_xlat12;
bool u_xlatb12;
float u_xlat18;
float u_xlat19;
bool u_xlatb19;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD1.xy = u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat2.y = u_xlat1.y;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat5.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat2.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat5.y = u_xlat16_4.x;
    u_xlat2.z = dot(u_xlat5.xy, u_xlat1.xz);
    vs_TEXCOORD3.xyz = u_xlat2.xyz;
    u_xlat18 = u_xlat0.y * _HeigtFogColParams3.x + _HeigtFogColParams3.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat16_3 = (-u_xlat18) + 2.0;
    u_xlat16_3 = u_xlat18 * u_xlat16_3;
    u_xlat1.xyz = vec3(u_xlat16_3) * _HeigtFogColDelta3.xyz + _HeigtFogColBase3.xyz;
    u_xlat2.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol3.xyz;
    u_xlat0.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
    u_xlat6.x = u_xlat0.y * _HeigtFogColParams2.x + _HeigtFogColParams2.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat0.x = dot(u_xlat0.xzw, u_xlat0.xzw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat18 = u_xlat0.x + (-_HeigtFogRamp3.w);
    u_xlat18 = u_xlat18 * _HeigtFogColParams3.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat18 = u_xlat0.x * _HeigtFogParams3.z + _HeigtFogParams3.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat19 = (-u_xlat18) + 2.0;
    u_xlat18 = u_xlat18 * u_xlat19;
    u_xlat19 = u_xlat18 * _HeigtFogColDelta3.w;
    u_xlat2.x = _ProjectionParams.z * 0.999899983;
#ifdef UNITY_ADRENO_ES3
    u_xlatb2 = !!(u_xlat0.x>=u_xlat2.x);
#else
    u_xlatb2 = u_xlat0.x>=u_xlat2.x;
#endif
    u_xlat18 = (u_xlatb2) ? u_xlat19 : u_xlat18;
    u_xlat18 = log2(u_xlat18);
    u_xlat18 = u_xlat18 * _Mihoyo_FogColor3.w;
    u_xlat18 = exp2(u_xlat18);
    u_xlat18 = min(u_xlat18, _HeigtFogColBase3.w);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat18 = (-u_xlat18) + 1.0;
    u_xlat19 = u_xlat0.z * _HeigtFogParams3.x;
    u_xlat12 = u_xlat0.z * _HeigtFogParams2.x;
    u_xlat8.x = u_xlat19 * -1.44269502;
    u_xlat8.x = exp2(u_xlat8.x);
    u_xlat8.x = (-u_xlat8.x) + 1.0;
    u_xlat8.x = u_xlat8.x / u_xlat19;
#ifdef UNITY_ADRENO_ES3
    u_xlatb19 = !!(0.00999999978<abs(u_xlat19));
#else
    u_xlatb19 = 0.00999999978<abs(u_xlat19);
#endif
    u_xlat16_3 = (u_xlatb19) ? u_xlat8.x : 1.0;
    u_xlat19 = u_xlat0.x * _HeigtFogParams3.y;
    u_xlat16_3 = u_xlat19 * u_xlat16_3;
    u_xlat16_3 = exp2((-u_xlat16_3));
    u_xlat16_3 = min(u_xlat16_3, 1.0);
    u_xlat16_3 = (-u_xlat16_3) + 1.0;
    u_xlat19 = u_xlat0.x * _HeigtFogRamp3.x + _HeigtFogRamp3.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat19 = min(max(u_xlat19, 0.0), 1.0);
#else
    u_xlat19 = clamp(u_xlat19, 0.0, 1.0);
#endif
    u_xlat16_9 = (-u_xlat19) + 2.0;
    u_xlat16_9 = u_xlat19 * u_xlat16_9;
    u_xlat19 = u_xlat16_9 * _HeigtFogRamp3.z + (-_HeigtFogRamp3.z);
    u_xlat19 = u_xlat19 + 1.0;
    u_xlat16_3 = u_xlat19 * u_xlat16_3;
    u_xlat19 = min(u_xlat16_3, _HeigtFogColBase3.w);
    u_xlat8.x = (-u_xlat19) + 1.0;
    u_xlat1.xyz = u_xlat1.xyz * u_xlat8.xxx;
    u_xlat3.w = u_xlat18 * u_xlat8.x;
    u_xlat3.xyz = _Mihoyo_FogColor3.xyz * vec3(u_xlat19) + u_xlat1.xyz;
    u_xlat16_4.x = (-u_xlat6.x) + 2.0;
    u_xlat16_4.x = u_xlat6.x * u_xlat16_4.x;
    u_xlat1.xyz = u_xlat16_4.xxx * _HeigtFogColDelta2.xyz + _HeigtFogColBase2.xyz;
    u_xlat8.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol2.xyz;
    u_xlat6.x = u_xlat0.x + (-_HeigtFogRamp2.w);
    u_xlat6.x = u_xlat6.x * _HeigtFogColParams2.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat1.xyz = u_xlat6.xxx * u_xlat8.xyz + u_xlat1.xyz;
    u_xlat6.x = u_xlat0.x * _HeigtFogParams2.z + _HeigtFogParams2.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat18 = (-u_xlat6.x) + 2.0;
    u_xlat6.x = u_xlat18 * u_xlat6.x;
    u_xlat18 = u_xlat6.x * _HeigtFogColDelta2.w;
    u_xlat6.x = (u_xlatb2) ? u_xlat18 : u_xlat6.x;
    u_xlat6.x = log2(u_xlat6.x);
    u_xlat6.x = u_xlat6.x * _Mihoyo_FogColor2.w;
    u_xlat6.x = exp2(u_xlat6.x);
    u_xlat6.x = min(u_xlat6.x, _HeigtFogColBase2.w);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat18 = u_xlat12 * -1.44269502;
    u_xlat6.z = exp2(u_xlat18);
    u_xlat6.xz = (-u_xlat6.xz) + vec2(1.0, 1.0);
    u_xlat18 = u_xlat6.z / u_xlat12;
#ifdef UNITY_ADRENO_ES3
    u_xlatb12 = !!(0.00999999978<abs(u_xlat12));
#else
    u_xlatb12 = 0.00999999978<abs(u_xlat12);
#endif
    u_xlat16_4.x = (u_xlatb12) ? u_xlat18 : 1.0;
    u_xlat12 = u_xlat0.x * _HeigtFogParams2.y;
    u_xlat0.x = u_xlat0.x * _HeigtFogRamp2.x + _HeigtFogRamp2.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat16_4.x = u_xlat12 * u_xlat16_4.x;
    u_xlat16_4.x = exp2((-u_xlat16_4.x));
    u_xlat16_4.x = min(u_xlat16_4.x, 1.0);
    u_xlat16_4.x = (-u_xlat16_4.x) + 1.0;
    u_xlat16_10 = (-u_xlat0.x) + 2.0;
    u_xlat16_10 = u_xlat0.x * u_xlat16_10;
    u_xlat0.x = u_xlat16_10 * _HeigtFogRamp2.z + (-_HeigtFogRamp2.z);
    u_xlat0.x = u_xlat0.x + 1.0;
    u_xlat16_4.x = u_xlat0.x * u_xlat16_4.x;
    u_xlat0.x = min(u_xlat16_4.x, _HeigtFogColBase2.w);
    u_xlat12 = (-u_xlat0.x) + 1.0;
    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
    u_xlat2.w = u_xlat12 * u_xlat6.x;
    u_xlat2.xyz = _Mihoyo_FogColor2.xyz * u_xlat0.xxx + u_xlat1.xyz;
    u_xlat0 = (-u_xlat2) + u_xlat3;
    u_xlat0 = vec4(vec4(_LerpFactor, _LerpFactor, _LerpFactor, _LerpFactor)) * u_xlat0 + u_xlat2;
    vs_COLOR1 = u_xlat0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform mediump sampler2D unity_Lightmap;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
ivec2 u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp float u_xlat10_2;
bool u_xlatb2;
mediump vec4 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
lowp vec3 u_xlat10_9;
ivec2 u_xlati9;
bool u_xlatb9;
vec3 u_xlat10;
lowp vec3 u_xlat10_10;
vec3 u_xlat13;
lowp vec3 u_xlat10_13;
mediump float u_xlat16_16;
lowp float u_xlat10_17;
bool u_xlatb17;
mediump float u_xlat16_24;
float u_xlat25;
void main()
{
    u_xlat16_0.x = (-_UMin) + _UMax;
    u_xlat16_8 = u_xlat16_0.x * 0.0250000004;
    u_xlat16_1 = u_xlat16_0.x * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_8 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb9 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb9 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1.x = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb9) * 0xffffffffu);
    if(u_xlati1.x != 0) {
        u_xlat10_9.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_2 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
        u_xlat10_10.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_2.xyz = vec3(u_xlat10_2) * u_xlat10_10.xyz;
        u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Reflectivity);
        u_xlat16_9.xyz = u_xlat10_9.xyz * _Color.xyz + u_xlat16_2.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb2 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb2 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat10.x = _Time.y * _Speed;
        u_xlat10.x = fract(u_xlat10.x);
        u_xlat10.x = u_xlat10.x + -0.5;
        u_xlat10.x = abs(u_xlat10.x) * _Magnitude + _MinValue;
        u_xlat10.xyz = u_xlat16_9.xyz * u_xlat10.xxx;
        u_xlat9.xyz = u_xlat16_9.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb2)) ? u_xlat10.xyz : u_xlat9.xyz;
        u_xlat16_9.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
        u_xlat16_4.xyz = u_xlat16_9.xyz * unity_Lightmap_HDR.xxx;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;
        u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
        u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
        u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
        u_xlat16_2.xyz = u_xlat16_3.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
        u_xlat16_2.w = _BloomFactor;
        u_xlat16_3 = u_xlat16_2;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1.x == 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.0500000007 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.100000001 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.150000006 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.200000003 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.25 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.300000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.349999994 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.400000006 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.450000018 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.5 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.550000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.600000024 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.650000036 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.699999988 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.75 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.800000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.850000024 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.900000036 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_5.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.949999988 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.x = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.x != 0) {
            u_xlat10_9.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_5.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_0.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_0.x = u_xlat16_0.x + u_xlat16_0.x;
            u_xlat16_0.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_0.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_13.xyz = texture(_EnvTex, u_xlat16_0.xyz).xyz;
            u_xlat16_5.xyz = u_xlat10_5.xxx * u_xlat10_13.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Reflectivity);
            u_xlat16_9.xyz = u_xlat10_9.xyz * _Color.xyz + u_xlat16_5.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat13.x = _Time.y * _Speed;
            u_xlat13.x = fract(u_xlat13.x);
            u_xlat13.x = u_xlat13.x + -0.5;
            u_xlat13.x = abs(u_xlat13.x) * _Magnitude + _MinValue;
            u_xlat13.xyz = u_xlat16_9.xyz * u_xlat13.xxx;
            u_xlat9.xyz = u_xlat16_9.xyz * vec3(_LightMapIntensity);
            u_xlat16_0.xyz = (bool(u_xlatb5)) ? u_xlat13.xyz : u_xlat9.xyz;
            u_xlat16_9.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_9.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
            u_xlat16_24 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_24 = min(max(u_xlat16_24, 0.0), 1.0);
#else
            u_xlat16_24 = clamp(u_xlat16_24, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(u_xlat16_24) + vs_COLOR1.xyz;
            SV_Target0.w = _BloomFactor;
            SV_Target0.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1.x != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LUMINANCE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 _FogColorNear;
uniform 	vec4 _FogColorFar;
uniform 	float _FogColorIntensity;
uniform 	float _FogIntensity;
uniform 	float _FogEffectStart;
uniform 	float _FogEffectLimit;
uniform 	float _FogStartDistance;
uniform 	float _FogEndDistance;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec3 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat2.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat5.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat2.y = u_xlat16_4.x;
    u_xlat5.z = dot(u_xlat2.xy, u_xlat1.xz);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
#ifdef UNITY_ADRENO_ES3
    u_xlatb21 = !!(0.5<_FogColorNear.w);
#else
    u_xlatb21 = 0.5<_FogColorNear.w;
#endif
    if(u_xlatb21){
        u_xlat1.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat21 = dot(u_xlat1.xzw, u_xlat1.xzw);
        u_xlat21 = sqrt(u_xlat21);
        u_xlat21 = u_xlat21 + (-_FogStartDistance);
        u_xlat21 = max(u_xlat21, 0.0);
        u_xlat1.xz = vec2(u_xlat21) * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat1.xz = u_xlat1.xz * (-u_xlat1.xz);
        u_xlat1.xz = u_xlat1.xz * vec2(1.44269502, 1.44269502);
        u_xlat1.xz = exp2(u_xlat1.xz);
        u_xlat21 = (-u_xlat1.x) + 1.0;
        u_xlat21 = u_xlat21 * _FogEffectLimit;
        u_xlat21 = max(u_xlat21, _FogEffectStart);
        u_xlat2.w = min(u_xlat21, _FogEffectLimit);
        u_xlat6.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat1.zzz * u_xlat6.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    } else {
        u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
        u_xlat0.x = sqrt(u_xlat0.x);
        u_xlat0.x = u_xlat0.x + (-_FogStartDistance);
        u_xlat0.x = max(u_xlat0.x, 0.0);
        u_xlat0.xy = u_xlat0.xx * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat0.xy = u_xlat0.xy * vec2(500.0, 1000.0);
        u_xlat14 = (-_FogStartDistance) + _FogEndDistance;
        u_xlat14 = max(u_xlat14, 0.100000001);
        u_xlat0.xy = u_xlat0.yx / vec2(u_xlat14);
        u_xlat7.x = u_xlat0.y * _FogEffectLimit;
        u_xlat7.x = max(u_xlat7.x, _FogEffectStart);
        u_xlat2.w = min(u_xlat7.x, _FogEffectLimit);
        u_xlat0.x = u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
        u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
        u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
        u_xlat0.x = (-u_xlat0.x) + 1.0;
        u_xlat7.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat0.xxx * u_xlat7.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    //ENDIF
    }
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat5.y = u_xlat1.y;
    vs_TEXCOORD3.xyz = u_xlat5.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform 	mediump float _LumiFactor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform mediump sampler2D unity_Lightmap;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump float u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
int u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp vec3 u_xlat10_2;
mediump vec4 u_xlat16_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
int u_xlati4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp float u_xlat10_5;
int u_xlati5;
bool u_xlatb5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
vec2 u_xlat9;
mediump vec3 u_xlat16_9;
lowp float u_xlat10_9;
int u_xlati9;
bool u_xlatb9;
mediump vec3 u_xlat16_10;
mediump vec3 u_xlat16_11;
vec2 u_xlat12;
mediump vec3 u_xlat16_12;
lowp float u_xlat10_12;
int u_xlati12;
bool u_xlatb12;
mediump vec3 u_xlat16_13;
mediump vec3 u_xlat16_14;
vec3 u_xlat15;
mediump vec3 u_xlat16_15;
lowp vec3 u_xlat10_15;
int u_xlati15;
bool u_xlatb15;
mediump vec3 u_xlat16_16;
mediump vec3 u_xlat16_17;
vec3 u_xlat18;
mediump vec3 u_xlat16_18;
lowp vec3 u_xlat10_18;
bool u_xlatb18;
mediump vec3 u_xlat16_19;
mediump float u_xlat16_20;
bool u_xlatb21;
vec3 u_xlat24;
mediump vec3 u_xlat16_24;
lowp vec3 u_xlat10_24;
int u_xlati24;
bool u_xlatb24;
vec3 u_xlat25;
mediump vec3 u_xlat16_25;
lowp vec3 u_xlat10_25;
int u_xlati25;
bool u_xlatb25;
vec3 u_xlat29;
mediump vec3 u_xlat16_29;
lowp vec3 u_xlat10_29;
int u_xlati29;
bool u_xlatb29;
vec3 u_xlat32;
mediump vec3 u_xlat16_32;
lowp vec3 u_xlat10_32;
int u_xlati32;
bool u_xlatb32;
vec3 u_xlat35;
mediump vec3 u_xlat16_35;
lowp vec3 u_xlat10_35;
int u_xlati35;
bool u_xlatb35;
vec3 u_xlat38;
lowp vec3 u_xlat10_38;
mediump float u_xlat16_40;
lowp float u_xlat10_62;
lowp float u_xlat10_75;
bool u_xlatb75;
void main()
{
    u_xlat16_0 = (-_UMin) + _UMax;
    u_xlat16_20 = u_xlat16_0 * 0.0250000004;
    u_xlat16_1 = u_xlat16_0 * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_20 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb21 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb21 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1 = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb21) * 0xffffffffu);
    if(u_xlati1 != 0) {
        u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_62 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_40 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_40 = u_xlat16_40 + u_xlat16_40;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_40)) + vs_TEXCOORD3.xyz;
        u_xlat10_4.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_4.xyz = vec3(u_xlat10_62) * u_xlat10_4.xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_Reflectivity);
        u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz + u_xlat16_4.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb4 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat24.x = _Time.y * _Speed;
        u_xlat24.x = fract(u_xlat24.x);
        u_xlat24.x = u_xlat24.x + -0.5;
        u_xlat24.x = abs(u_xlat24.x) * _Magnitude + _MinValue;
        u_xlat24.xyz = u_xlat16_2.xyz * u_xlat24.xxx;
        u_xlat5.xyz = u_xlat16_2.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb4)) ? u_xlat24.xyz : u_xlat5.xyz;
        u_xlat16_4.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
        u_xlat16_6.xyz = u_xlat16_4.xyz * unity_Lightmap_HDR.xxx;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_7.xyz = u_xlat16_3.xyz * u_xlat16_6.xyz;
        u_xlat16_6.xyz = (-u_xlat16_3.xyz) * u_xlat16_6.xyz + vs_COLOR1.xyz;
        u_xlat16_6.xyz = vs_COLOR1.www * u_xlat16_6.xyz + u_xlat16_7.xyz;
        u_xlat16_4.x = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
        u_xlat16_4.xyz = (-u_xlat16_6.xyz) + u_xlat16_4.xxx;
        u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_4.xyz + u_xlat16_6.xyz;
        u_xlat16_3.xyz = u_xlat16_2.xyz;
        u_xlat16_3.w = _BloomFactor;
        u_xlat16_2.xyz = u_xlat16_2.xyz;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1 == 0) {
        u_xlat16_4.x = u_xlat16_0 * 0.0500000007 + _UMin;
        u_xlat16_4.x = u_xlat16_0 * 0.0250000004 + u_xlat16_4.x;
        u_xlat4.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_4.x;
        u_xlat4.x = u_xlat16_20 * _ScaleTime + u_xlat16_4.x;
        u_xlat4.xy = u_xlat4.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb24 = !!(vs_TEXCOORD0.x>=u_xlat4.y);
#else
        u_xlatb24 = vs_TEXCOORD0.x>=u_xlat4.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(u_xlat4.x>=vs_TEXCOORD0.x);
#else
        u_xlatb4 = u_xlat4.x>=vs_TEXCOORD0.x;
#endif
        u_xlati4 = int(uint(u_xlatb4) * 0xffffffffu & uint(u_xlatb24) * 0xffffffffu);
        if(u_xlati4 != 0) {
            u_xlat10_24.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_5 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_40 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_6.x = u_xlat16_40 + u_xlat16_40;
            u_xlat16_6.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_6.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_25.xyz = texture(_EnvTex, u_xlat16_6.xyz).xyz;
            u_xlat16_5.xyz = vec3(u_xlat10_5) * u_xlat10_25.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Reflectivity);
            u_xlat16_24.xyz = u_xlat10_24.xyz * _Color.xyz + u_xlat16_5.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25.x = _Time.y * _Speed;
            u_xlat25.x = fract(u_xlat25.x);
            u_xlat25.x = u_xlat25.x + -0.5;
            u_xlat25.x = abs(u_xlat25.x) * _Magnitude + _MinValue;
            u_xlat25.xyz = u_xlat16_24.xyz * u_xlat25.xxx;
            u_xlat24.xyz = u_xlat16_24.xyz * vec3(_LightMapIntensity);
            u_xlat16_6.xyz = (bool(u_xlatb5)) ? u_xlat25.xyz : u_xlat24.xyz;
            u_xlat16_24.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_24.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_6.xyz = u_xlat16_6.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_6.xyz * u_xlat16_7.xyz;
            u_xlat16_6.xyz = (-u_xlat16_6.xyz) * u_xlat16_7.xyz + vs_COLOR1.xyz;
            u_xlat16_6.xyz = vs_COLOR1.www * u_xlat16_6.xyz + u_xlat16_8.xyz;
            u_xlat16_24.x = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_24.xyz = (-u_xlat16_6.xyz) + u_xlat16_24.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_24.xyz + u_xlat16_6.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati4;
    } else {
        u_xlati4 = -1;
    //ENDIF
    }
    u_xlati4 = ~u_xlati4;
    u_xlati24 = ~u_xlati1;
    u_xlati4 = int(uint(u_xlati24) & uint(u_xlati4));
    if(u_xlati4 != 0) {
        u_xlat16_5.x = u_xlat16_0 * 0.100000001 + _UMin;
        u_xlat16_5.x = u_xlat16_0 * 0.0250000004 + u_xlat16_5.x;
        u_xlat5.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_5.x;
        u_xlat5.x = u_xlat16_20 * _ScaleTime + u_xlat16_5.x;
        u_xlat5.xy = u_xlat5.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb25 = !!(vs_TEXCOORD0.x>=u_xlat5.y);
#else
        u_xlatb25 = vs_TEXCOORD0.x>=u_xlat5.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb5 = !!(u_xlat5.x>=vs_TEXCOORD0.x);
#else
        u_xlatb5 = u_xlat5.x>=vs_TEXCOORD0.x;
#endif
        u_xlati5 = int(uint(u_xlatb5) * 0xffffffffu & uint(u_xlatb25) * 0xffffffffu);
        if(u_xlati5 != 0) {
            u_xlat10_25.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_9 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_7.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_8.x = u_xlat16_7.x + u_xlat16_7.x;
            u_xlat16_8.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_8.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_29.xyz = texture(_EnvTex, u_xlat16_8.xyz).xyz;
            u_xlat16_9.xyz = vec3(u_xlat10_9) * u_xlat10_29.xyz;
            u_xlat16_9.xyz = u_xlat16_9.xyz * vec3(_Reflectivity);
            u_xlat16_25.xyz = u_xlat10_25.xyz * _Color.xyz + u_xlat16_9.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb9 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb9 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat29.x = _Time.y * _Speed;
            u_xlat29.x = fract(u_xlat29.x);
            u_xlat29.x = u_xlat29.x + -0.5;
            u_xlat29.x = abs(u_xlat29.x) * _Magnitude + _MinValue;
            u_xlat29.xyz = u_xlat16_25.xyz * u_xlat29.xxx;
            u_xlat25.xyz = u_xlat16_25.xyz * vec3(_LightMapIntensity);
            u_xlat16_8.xyz = (bool(u_xlatb9)) ? u_xlat29.xyz : u_xlat25.xyz;
            u_xlat16_25.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_10.xyz = u_xlat16_25.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_8.xyz = u_xlat16_8.xyz * _Color.xyz;
            u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_11.xyz = u_xlat16_8.xyz * u_xlat16_10.xyz;
            u_xlat16_8.xyz = (-u_xlat16_8.xyz) * u_xlat16_10.xyz + vs_COLOR1.xyz;
            u_xlat16_8.xyz = vs_COLOR1.www * u_xlat16_8.xyz + u_xlat16_11.xyz;
            u_xlat16_25.x = dot(u_xlat16_8.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_25.xyz = (-u_xlat16_8.xyz) + u_xlat16_25.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_25.xyz + u_xlat16_8.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati5;
    } else {
        u_xlati5 = -1;
    //ENDIF
    }
    u_xlati5 = ~u_xlati5;
    u_xlati25 = ~u_xlati1;
    u_xlati5 = int(uint(u_xlati25) & uint(u_xlati5));
    if(u_xlati5 != 0) {
        u_xlat16_9.x = u_xlat16_0 * 0.150000006 + _UMin;
        u_xlat16_9.x = u_xlat16_0 * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_20 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb29 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb29 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati9 = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb29) * 0xffffffffu);
        if(u_xlati9 != 0) {
            u_xlat10_29.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_12 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_10.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_11.x = u_xlat16_10.x + u_xlat16_10.x;
            u_xlat16_11.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_11.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_32.xyz = texture(_EnvTex, u_xlat16_11.xyz).xyz;
            u_xlat16_12.xyz = vec3(u_xlat10_12) * u_xlat10_32.xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(_Reflectivity);
            u_xlat16_29.xyz = u_xlat10_29.xyz * _Color.xyz + u_xlat16_12.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb12 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb12 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat32.x = _Time.y * _Speed;
            u_xlat32.x = fract(u_xlat32.x);
            u_xlat32.x = u_xlat32.x + -0.5;
            u_xlat32.x = abs(u_xlat32.x) * _Magnitude + _MinValue;
            u_xlat32.xyz = u_xlat16_29.xyz * u_xlat32.xxx;
            u_xlat29.xyz = u_xlat16_29.xyz * vec3(_LightMapIntensity);
            u_xlat16_11.xyz = (bool(u_xlatb12)) ? u_xlat32.xyz : u_xlat29.xyz;
            u_xlat16_29.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_29.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_11.xyz = u_xlat16_11.xyz * _Color.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_14.xyz = u_xlat16_11.xyz * u_xlat16_13.xyz;
            u_xlat16_11.xyz = (-u_xlat16_11.xyz) * u_xlat16_13.xyz + vs_COLOR1.xyz;
            u_xlat16_11.xyz = vs_COLOR1.www * u_xlat16_11.xyz + u_xlat16_14.xyz;
            u_xlat16_29.x = dot(u_xlat16_11.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_29.xyz = (-u_xlat16_11.xyz) + u_xlat16_29.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_29.xyz + u_xlat16_11.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati9;
    } else {
        u_xlati9 = -1;
    //ENDIF
    }
    u_xlati9 = ~u_xlati9;
    u_xlati29 = ~u_xlati1;
    u_xlati9 = int(uint(u_xlati29) & uint(u_xlati9));
    if(u_xlati9 != 0) {
        u_xlat16_12.x = u_xlat16_0 * 0.200000003 + _UMin;
        u_xlat16_12.x = u_xlat16_0 * 0.0250000004 + u_xlat16_12.x;
        u_xlat12.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_12.x;
        u_xlat12.x = u_xlat16_20 * _ScaleTime + u_xlat16_12.x;
        u_xlat12.xy = u_xlat12.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb32 = !!(vs_TEXCOORD0.x>=u_xlat12.y);
#else
        u_xlatb32 = vs_TEXCOORD0.x>=u_xlat12.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb12 = !!(u_xlat12.x>=vs_TEXCOORD0.x);
#else
        u_xlatb12 = u_xlat12.x>=vs_TEXCOORD0.x;
#endif
        u_xlati12 = int(uint(u_xlatb12) * 0xffffffffu & uint(u_xlatb32) * 0xffffffffu);
        if(u_xlati12 != 0) {
            u_xlat10_32.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_15.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_14.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_14.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_14.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_35.xyz = texture(_EnvTex, u_xlat16_14.xyz).xyz;
            u_xlat16_15.xyz = u_xlat10_15.xxx * u_xlat10_35.xyz;
            u_xlat16_15.xyz = u_xlat16_15.xyz * vec3(_Reflectivity);
            u_xlat16_32.xyz = u_xlat10_32.xyz * _Color.xyz + u_xlat16_15.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb15 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb15 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat35.x = _Time.y * _Speed;
            u_xlat35.x = fract(u_xlat35.x);
            u_xlat35.x = u_xlat35.x + -0.5;
            u_xlat35.x = abs(u_xlat35.x) * _Magnitude + _MinValue;
            u_xlat35.xyz = u_xlat16_32.xyz * u_xlat35.xxx;
            u_xlat32.xyz = u_xlat16_32.xyz * vec3(_LightMapIntensity);
            u_xlat16_14.xyz = (bool(u_xlatb15)) ? u_xlat35.xyz : u_xlat32.xyz;
            u_xlat16_32.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_32.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_14.xyz = u_xlat16_14.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_17.xyz = u_xlat16_14.xyz * u_xlat16_16.xyz;
            u_xlat16_14.xyz = (-u_xlat16_14.xyz) * u_xlat16_16.xyz + vs_COLOR1.xyz;
            u_xlat16_14.xyz = vs_COLOR1.www * u_xlat16_14.xyz + u_xlat16_17.xyz;
            u_xlat16_32.x = dot(u_xlat16_14.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_32.xyz = (-u_xlat16_14.xyz) + u_xlat16_32.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_32.xyz + u_xlat16_14.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati12;
    } else {
        u_xlati12 = -1;
    //ENDIF
    }
    u_xlati12 = ~u_xlati12;
    u_xlati32 = ~u_xlati1;
    u_xlati12 = int(uint(u_xlati32) & uint(u_xlati12));
    if(u_xlati12 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.25 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.300000012 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.349999994 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.400000006 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.450000018 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.5 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.550000012 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.600000024 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.650000036 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.699999988 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.75 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.800000012 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.850000024 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.900000036 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.949999988 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati1 != 0) {
            u_xlat10_15.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_75 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_18.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = vec3(u_xlat10_75) * u_xlat10_18.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_15.xyz = u_xlat10_15.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb75 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb75 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat18.x = _Time.y * _Speed;
            u_xlat18.x = fract(u_xlat18.x);
            u_xlat18.x = u_xlat18.x + -0.5;
            u_xlat18.x = abs(u_xlat18.x) * _Magnitude + _MinValue;
            u_xlat18.xyz = u_xlat16_15.xyz * u_xlat18.xxx;
            u_xlat15.xyz = u_xlat16_15.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb75)) ? u_xlat18.xyz : u_xlat15.xyz;
            u_xlat16_15.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_15.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_15.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_15.xyz = (-u_xlat16_16.xyz) + u_xlat16_15.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_15.xyz + u_xlat16_16.xyz;
            SV_Target0.xyz = u_xlat16_2.xyz;
            SV_Target0.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1 != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LUMINANCE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 _FogColorNear;
uniform 	vec4 _FogColorFar;
uniform 	float _FogColorIntensity;
uniform 	float _FogIntensity;
uniform 	float _FogEffectStart;
uniform 	float _FogEffectLimit;
uniform 	float _FogStartDistance;
uniform 	float _FogEndDistance;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec3 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat2.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat5.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat2.y = u_xlat16_4.x;
    u_xlat5.z = dot(u_xlat2.xy, u_xlat1.xz);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
#ifdef UNITY_ADRENO_ES3
    u_xlatb21 = !!(0.5<_FogColorNear.w);
#else
    u_xlatb21 = 0.5<_FogColorNear.w;
#endif
    if(u_xlatb21){
        u_xlat1.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat21 = dot(u_xlat1.xzw, u_xlat1.xzw);
        u_xlat21 = sqrt(u_xlat21);
        u_xlat21 = u_xlat21 + (-_FogStartDistance);
        u_xlat21 = max(u_xlat21, 0.0);
        u_xlat1.xz = vec2(u_xlat21) * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat1.xz = u_xlat1.xz * (-u_xlat1.xz);
        u_xlat1.xz = u_xlat1.xz * vec2(1.44269502, 1.44269502);
        u_xlat1.xz = exp2(u_xlat1.xz);
        u_xlat21 = (-u_xlat1.x) + 1.0;
        u_xlat21 = u_xlat21 * _FogEffectLimit;
        u_xlat21 = max(u_xlat21, _FogEffectStart);
        u_xlat2.w = min(u_xlat21, _FogEffectLimit);
        u_xlat6.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat1.zzz * u_xlat6.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    } else {
        u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
        u_xlat0.x = sqrt(u_xlat0.x);
        u_xlat0.x = u_xlat0.x + (-_FogStartDistance);
        u_xlat0.x = max(u_xlat0.x, 0.0);
        u_xlat0.xy = u_xlat0.xx * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat0.xy = u_xlat0.xy * vec2(500.0, 1000.0);
        u_xlat14 = (-_FogStartDistance) + _FogEndDistance;
        u_xlat14 = max(u_xlat14, 0.100000001);
        u_xlat0.xy = u_xlat0.yx / vec2(u_xlat14);
        u_xlat7.x = u_xlat0.y * _FogEffectLimit;
        u_xlat7.x = max(u_xlat7.x, _FogEffectStart);
        u_xlat2.w = min(u_xlat7.x, _FogEffectLimit);
        u_xlat0.x = u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
        u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
        u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
        u_xlat0.x = (-u_xlat0.x) + 1.0;
        u_xlat7.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat0.xxx * u_xlat7.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    //ENDIF
    }
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat5.y = u_xlat1.y;
    vs_TEXCOORD3.xyz = u_xlat5.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform 	mediump float _LumiFactor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform mediump sampler2D unity_Lightmap;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump float u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
int u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp vec3 u_xlat10_2;
mediump vec4 u_xlat16_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
int u_xlati4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp float u_xlat10_5;
int u_xlati5;
bool u_xlatb5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
vec2 u_xlat9;
mediump vec3 u_xlat16_9;
lowp float u_xlat10_9;
int u_xlati9;
bool u_xlatb9;
mediump vec3 u_xlat16_10;
mediump vec3 u_xlat16_11;
vec2 u_xlat12;
mediump vec3 u_xlat16_12;
lowp float u_xlat10_12;
int u_xlati12;
bool u_xlatb12;
mediump vec3 u_xlat16_13;
mediump vec3 u_xlat16_14;
vec3 u_xlat15;
mediump vec3 u_xlat16_15;
lowp vec3 u_xlat10_15;
int u_xlati15;
bool u_xlatb15;
mediump vec3 u_xlat16_16;
mediump vec3 u_xlat16_17;
vec3 u_xlat18;
mediump vec3 u_xlat16_18;
lowp vec3 u_xlat10_18;
bool u_xlatb18;
mediump vec3 u_xlat16_19;
mediump float u_xlat16_20;
bool u_xlatb21;
vec3 u_xlat24;
mediump vec3 u_xlat16_24;
lowp vec3 u_xlat10_24;
int u_xlati24;
bool u_xlatb24;
vec3 u_xlat25;
mediump vec3 u_xlat16_25;
lowp vec3 u_xlat10_25;
int u_xlati25;
bool u_xlatb25;
vec3 u_xlat29;
mediump vec3 u_xlat16_29;
lowp vec3 u_xlat10_29;
int u_xlati29;
bool u_xlatb29;
vec3 u_xlat32;
mediump vec3 u_xlat16_32;
lowp vec3 u_xlat10_32;
int u_xlati32;
bool u_xlatb32;
vec3 u_xlat35;
mediump vec3 u_xlat16_35;
lowp vec3 u_xlat10_35;
int u_xlati35;
bool u_xlatb35;
vec3 u_xlat38;
lowp vec3 u_xlat10_38;
mediump float u_xlat16_40;
lowp float u_xlat10_62;
lowp float u_xlat10_75;
bool u_xlatb75;
void main()
{
    u_xlat16_0 = (-_UMin) + _UMax;
    u_xlat16_20 = u_xlat16_0 * 0.0250000004;
    u_xlat16_1 = u_xlat16_0 * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_20 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb21 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb21 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1 = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb21) * 0xffffffffu);
    if(u_xlati1 != 0) {
        u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_62 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_40 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_40 = u_xlat16_40 + u_xlat16_40;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_40)) + vs_TEXCOORD3.xyz;
        u_xlat10_4.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_4.xyz = vec3(u_xlat10_62) * u_xlat10_4.xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_Reflectivity);
        u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz + u_xlat16_4.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb4 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat24.x = _Time.y * _Speed;
        u_xlat24.x = fract(u_xlat24.x);
        u_xlat24.x = u_xlat24.x + -0.5;
        u_xlat24.x = abs(u_xlat24.x) * _Magnitude + _MinValue;
        u_xlat24.xyz = u_xlat16_2.xyz * u_xlat24.xxx;
        u_xlat5.xyz = u_xlat16_2.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb4)) ? u_xlat24.xyz : u_xlat5.xyz;
        u_xlat16_4.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
        u_xlat16_6.xyz = u_xlat16_4.xyz * unity_Lightmap_HDR.xxx;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_7.xyz = u_xlat16_3.xyz * u_xlat16_6.xyz;
        u_xlat16_6.xyz = (-u_xlat16_3.xyz) * u_xlat16_6.xyz + vs_COLOR1.xyz;
        u_xlat16_6.xyz = vs_COLOR1.www * u_xlat16_6.xyz + u_xlat16_7.xyz;
        u_xlat16_4.x = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
        u_xlat16_4.xyz = (-u_xlat16_6.xyz) + u_xlat16_4.xxx;
        u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_4.xyz + u_xlat16_6.xyz;
        u_xlat16_3.xyz = u_xlat16_2.xyz;
        u_xlat16_3.w = _BloomFactor;
        u_xlat16_2.xyz = u_xlat16_2.xyz;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1 == 0) {
        u_xlat16_4.x = u_xlat16_0 * 0.0500000007 + _UMin;
        u_xlat16_4.x = u_xlat16_0 * 0.0250000004 + u_xlat16_4.x;
        u_xlat4.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_4.x;
        u_xlat4.x = u_xlat16_20 * _ScaleTime + u_xlat16_4.x;
        u_xlat4.xy = u_xlat4.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb24 = !!(vs_TEXCOORD0.x>=u_xlat4.y);
#else
        u_xlatb24 = vs_TEXCOORD0.x>=u_xlat4.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(u_xlat4.x>=vs_TEXCOORD0.x);
#else
        u_xlatb4 = u_xlat4.x>=vs_TEXCOORD0.x;
#endif
        u_xlati4 = int(uint(u_xlatb4) * 0xffffffffu & uint(u_xlatb24) * 0xffffffffu);
        if(u_xlati4 != 0) {
            u_xlat10_24.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_5 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_40 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_6.x = u_xlat16_40 + u_xlat16_40;
            u_xlat16_6.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_6.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_25.xyz = texture(_EnvTex, u_xlat16_6.xyz).xyz;
            u_xlat16_5.xyz = vec3(u_xlat10_5) * u_xlat10_25.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Reflectivity);
            u_xlat16_24.xyz = u_xlat10_24.xyz * _Color.xyz + u_xlat16_5.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25.x = _Time.y * _Speed;
            u_xlat25.x = fract(u_xlat25.x);
            u_xlat25.x = u_xlat25.x + -0.5;
            u_xlat25.x = abs(u_xlat25.x) * _Magnitude + _MinValue;
            u_xlat25.xyz = u_xlat16_24.xyz * u_xlat25.xxx;
            u_xlat24.xyz = u_xlat16_24.xyz * vec3(_LightMapIntensity);
            u_xlat16_6.xyz = (bool(u_xlatb5)) ? u_xlat25.xyz : u_xlat24.xyz;
            u_xlat16_24.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_24.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_6.xyz = u_xlat16_6.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_6.xyz * u_xlat16_7.xyz;
            u_xlat16_6.xyz = (-u_xlat16_6.xyz) * u_xlat16_7.xyz + vs_COLOR1.xyz;
            u_xlat16_6.xyz = vs_COLOR1.www * u_xlat16_6.xyz + u_xlat16_8.xyz;
            u_xlat16_24.x = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_24.xyz = (-u_xlat16_6.xyz) + u_xlat16_24.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_24.xyz + u_xlat16_6.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati4;
    } else {
        u_xlati4 = -1;
    //ENDIF
    }
    u_xlati4 = ~u_xlati4;
    u_xlati24 = ~u_xlati1;
    u_xlati4 = int(uint(u_xlati24) & uint(u_xlati4));
    if(u_xlati4 != 0) {
        u_xlat16_5.x = u_xlat16_0 * 0.100000001 + _UMin;
        u_xlat16_5.x = u_xlat16_0 * 0.0250000004 + u_xlat16_5.x;
        u_xlat5.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_5.x;
        u_xlat5.x = u_xlat16_20 * _ScaleTime + u_xlat16_5.x;
        u_xlat5.xy = u_xlat5.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb25 = !!(vs_TEXCOORD0.x>=u_xlat5.y);
#else
        u_xlatb25 = vs_TEXCOORD0.x>=u_xlat5.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb5 = !!(u_xlat5.x>=vs_TEXCOORD0.x);
#else
        u_xlatb5 = u_xlat5.x>=vs_TEXCOORD0.x;
#endif
        u_xlati5 = int(uint(u_xlatb5) * 0xffffffffu & uint(u_xlatb25) * 0xffffffffu);
        if(u_xlati5 != 0) {
            u_xlat10_25.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_9 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_7.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_8.x = u_xlat16_7.x + u_xlat16_7.x;
            u_xlat16_8.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_8.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_29.xyz = texture(_EnvTex, u_xlat16_8.xyz).xyz;
            u_xlat16_9.xyz = vec3(u_xlat10_9) * u_xlat10_29.xyz;
            u_xlat16_9.xyz = u_xlat16_9.xyz * vec3(_Reflectivity);
            u_xlat16_25.xyz = u_xlat10_25.xyz * _Color.xyz + u_xlat16_9.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb9 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb9 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat29.x = _Time.y * _Speed;
            u_xlat29.x = fract(u_xlat29.x);
            u_xlat29.x = u_xlat29.x + -0.5;
            u_xlat29.x = abs(u_xlat29.x) * _Magnitude + _MinValue;
            u_xlat29.xyz = u_xlat16_25.xyz * u_xlat29.xxx;
            u_xlat25.xyz = u_xlat16_25.xyz * vec3(_LightMapIntensity);
            u_xlat16_8.xyz = (bool(u_xlatb9)) ? u_xlat29.xyz : u_xlat25.xyz;
            u_xlat16_25.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_10.xyz = u_xlat16_25.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_8.xyz = u_xlat16_8.xyz * _Color.xyz;
            u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_11.xyz = u_xlat16_8.xyz * u_xlat16_10.xyz;
            u_xlat16_8.xyz = (-u_xlat16_8.xyz) * u_xlat16_10.xyz + vs_COLOR1.xyz;
            u_xlat16_8.xyz = vs_COLOR1.www * u_xlat16_8.xyz + u_xlat16_11.xyz;
            u_xlat16_25.x = dot(u_xlat16_8.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_25.xyz = (-u_xlat16_8.xyz) + u_xlat16_25.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_25.xyz + u_xlat16_8.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati5;
    } else {
        u_xlati5 = -1;
    //ENDIF
    }
    u_xlati5 = ~u_xlati5;
    u_xlati25 = ~u_xlati1;
    u_xlati5 = int(uint(u_xlati25) & uint(u_xlati5));
    if(u_xlati5 != 0) {
        u_xlat16_9.x = u_xlat16_0 * 0.150000006 + _UMin;
        u_xlat16_9.x = u_xlat16_0 * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_20 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb29 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb29 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati9 = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb29) * 0xffffffffu);
        if(u_xlati9 != 0) {
            u_xlat10_29.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_12 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_10.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_11.x = u_xlat16_10.x + u_xlat16_10.x;
            u_xlat16_11.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_11.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_32.xyz = texture(_EnvTex, u_xlat16_11.xyz).xyz;
            u_xlat16_12.xyz = vec3(u_xlat10_12) * u_xlat10_32.xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(_Reflectivity);
            u_xlat16_29.xyz = u_xlat10_29.xyz * _Color.xyz + u_xlat16_12.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb12 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb12 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat32.x = _Time.y * _Speed;
            u_xlat32.x = fract(u_xlat32.x);
            u_xlat32.x = u_xlat32.x + -0.5;
            u_xlat32.x = abs(u_xlat32.x) * _Magnitude + _MinValue;
            u_xlat32.xyz = u_xlat16_29.xyz * u_xlat32.xxx;
            u_xlat29.xyz = u_xlat16_29.xyz * vec3(_LightMapIntensity);
            u_xlat16_11.xyz = (bool(u_xlatb12)) ? u_xlat32.xyz : u_xlat29.xyz;
            u_xlat16_29.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_29.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_11.xyz = u_xlat16_11.xyz * _Color.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_14.xyz = u_xlat16_11.xyz * u_xlat16_13.xyz;
            u_xlat16_11.xyz = (-u_xlat16_11.xyz) * u_xlat16_13.xyz + vs_COLOR1.xyz;
            u_xlat16_11.xyz = vs_COLOR1.www * u_xlat16_11.xyz + u_xlat16_14.xyz;
            u_xlat16_29.x = dot(u_xlat16_11.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_29.xyz = (-u_xlat16_11.xyz) + u_xlat16_29.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_29.xyz + u_xlat16_11.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati9;
    } else {
        u_xlati9 = -1;
    //ENDIF
    }
    u_xlati9 = ~u_xlati9;
    u_xlati29 = ~u_xlati1;
    u_xlati9 = int(uint(u_xlati29) & uint(u_xlati9));
    if(u_xlati9 != 0) {
        u_xlat16_12.x = u_xlat16_0 * 0.200000003 + _UMin;
        u_xlat16_12.x = u_xlat16_0 * 0.0250000004 + u_xlat16_12.x;
        u_xlat12.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_12.x;
        u_xlat12.x = u_xlat16_20 * _ScaleTime + u_xlat16_12.x;
        u_xlat12.xy = u_xlat12.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb32 = !!(vs_TEXCOORD0.x>=u_xlat12.y);
#else
        u_xlatb32 = vs_TEXCOORD0.x>=u_xlat12.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb12 = !!(u_xlat12.x>=vs_TEXCOORD0.x);
#else
        u_xlatb12 = u_xlat12.x>=vs_TEXCOORD0.x;
#endif
        u_xlati12 = int(uint(u_xlatb12) * 0xffffffffu & uint(u_xlatb32) * 0xffffffffu);
        if(u_xlati12 != 0) {
            u_xlat10_32.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_15.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_14.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_14.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_14.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_35.xyz = texture(_EnvTex, u_xlat16_14.xyz).xyz;
            u_xlat16_15.xyz = u_xlat10_15.xxx * u_xlat10_35.xyz;
            u_xlat16_15.xyz = u_xlat16_15.xyz * vec3(_Reflectivity);
            u_xlat16_32.xyz = u_xlat10_32.xyz * _Color.xyz + u_xlat16_15.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb15 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb15 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat35.x = _Time.y * _Speed;
            u_xlat35.x = fract(u_xlat35.x);
            u_xlat35.x = u_xlat35.x + -0.5;
            u_xlat35.x = abs(u_xlat35.x) * _Magnitude + _MinValue;
            u_xlat35.xyz = u_xlat16_32.xyz * u_xlat35.xxx;
            u_xlat32.xyz = u_xlat16_32.xyz * vec3(_LightMapIntensity);
            u_xlat16_14.xyz = (bool(u_xlatb15)) ? u_xlat35.xyz : u_xlat32.xyz;
            u_xlat16_32.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_32.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_14.xyz = u_xlat16_14.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_17.xyz = u_xlat16_14.xyz * u_xlat16_16.xyz;
            u_xlat16_14.xyz = (-u_xlat16_14.xyz) * u_xlat16_16.xyz + vs_COLOR1.xyz;
            u_xlat16_14.xyz = vs_COLOR1.www * u_xlat16_14.xyz + u_xlat16_17.xyz;
            u_xlat16_32.x = dot(u_xlat16_14.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_32.xyz = (-u_xlat16_14.xyz) + u_xlat16_32.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_32.xyz + u_xlat16_14.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati12;
    } else {
        u_xlati12 = -1;
    //ENDIF
    }
    u_xlati12 = ~u_xlati12;
    u_xlati32 = ~u_xlati1;
    u_xlati12 = int(uint(u_xlati32) & uint(u_xlati12));
    if(u_xlati12 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.25 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.300000012 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.349999994 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.400000006 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.450000018 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.5 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.550000012 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.600000024 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.650000036 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.699999988 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.75 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.800000012 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.850000024 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.900000036 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.949999988 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati1 != 0) {
            u_xlat10_15.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_75 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_18.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = vec3(u_xlat10_75) * u_xlat10_18.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_15.xyz = u_xlat10_15.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb75 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb75 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat18.x = _Time.y * _Speed;
            u_xlat18.x = fract(u_xlat18.x);
            u_xlat18.x = u_xlat18.x + -0.5;
            u_xlat18.x = abs(u_xlat18.x) * _Magnitude + _MinValue;
            u_xlat18.xyz = u_xlat16_15.xyz * u_xlat18.xxx;
            u_xlat15.xyz = u_xlat16_15.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb75)) ? u_xlat18.xyz : u_xlat15.xyz;
            u_xlat16_15.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_15.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_15.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_15.xyz = (-u_xlat16_16.xyz) + u_xlat16_15.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_15.xyz + u_xlat16_16.xyz;
            SV_Target0.xyz = u_xlat16_2.xyz;
            SV_Target0.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1 != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LUMINANCE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 _FogColorNear;
uniform 	vec4 _FogColorFar;
uniform 	float _FogColorIntensity;
uniform 	float _FogIntensity;
uniform 	float _FogEffectStart;
uniform 	float _FogEffectLimit;
uniform 	float _FogStartDistance;
uniform 	float _FogEndDistance;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec3 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat2.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat5.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat2.y = u_xlat16_4.x;
    u_xlat5.z = dot(u_xlat2.xy, u_xlat1.xz);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
#ifdef UNITY_ADRENO_ES3
    u_xlatb21 = !!(0.5<_FogColorNear.w);
#else
    u_xlatb21 = 0.5<_FogColorNear.w;
#endif
    if(u_xlatb21){
        u_xlat1.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat21 = dot(u_xlat1.xzw, u_xlat1.xzw);
        u_xlat21 = sqrt(u_xlat21);
        u_xlat21 = u_xlat21 + (-_FogStartDistance);
        u_xlat21 = max(u_xlat21, 0.0);
        u_xlat1.xz = vec2(u_xlat21) * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat1.xz = u_xlat1.xz * (-u_xlat1.xz);
        u_xlat1.xz = u_xlat1.xz * vec2(1.44269502, 1.44269502);
        u_xlat1.xz = exp2(u_xlat1.xz);
        u_xlat21 = (-u_xlat1.x) + 1.0;
        u_xlat21 = u_xlat21 * _FogEffectLimit;
        u_xlat21 = max(u_xlat21, _FogEffectStart);
        u_xlat2.w = min(u_xlat21, _FogEffectLimit);
        u_xlat6.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat1.zzz * u_xlat6.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    } else {
        u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
        u_xlat0.x = sqrt(u_xlat0.x);
        u_xlat0.x = u_xlat0.x + (-_FogStartDistance);
        u_xlat0.x = max(u_xlat0.x, 0.0);
        u_xlat0.xy = u_xlat0.xx * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat0.xy = u_xlat0.xy * vec2(500.0, 1000.0);
        u_xlat14 = (-_FogStartDistance) + _FogEndDistance;
        u_xlat14 = max(u_xlat14, 0.100000001);
        u_xlat0.xy = u_xlat0.yx / vec2(u_xlat14);
        u_xlat7.x = u_xlat0.y * _FogEffectLimit;
        u_xlat7.x = max(u_xlat7.x, _FogEffectStart);
        u_xlat2.w = min(u_xlat7.x, _FogEffectLimit);
        u_xlat0.x = u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
        u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
        u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
        u_xlat0.x = (-u_xlat0.x) + 1.0;
        u_xlat7.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat0.xxx * u_xlat7.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    //ENDIF
    }
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat5.y = u_xlat1.y;
    vs_TEXCOORD3.xyz = u_xlat5.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform 	mediump float _LumiFactor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform mediump sampler2D unity_Lightmap;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump float u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
int u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp vec3 u_xlat10_2;
mediump vec4 u_xlat16_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
int u_xlati4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp float u_xlat10_5;
int u_xlati5;
bool u_xlatb5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
vec2 u_xlat9;
mediump vec3 u_xlat16_9;
lowp float u_xlat10_9;
int u_xlati9;
bool u_xlatb9;
mediump vec3 u_xlat16_10;
mediump vec3 u_xlat16_11;
vec2 u_xlat12;
mediump vec3 u_xlat16_12;
lowp float u_xlat10_12;
int u_xlati12;
bool u_xlatb12;
mediump vec3 u_xlat16_13;
mediump vec3 u_xlat16_14;
vec3 u_xlat15;
mediump vec3 u_xlat16_15;
lowp vec3 u_xlat10_15;
int u_xlati15;
bool u_xlatb15;
mediump vec3 u_xlat16_16;
mediump vec3 u_xlat16_17;
vec3 u_xlat18;
mediump vec3 u_xlat16_18;
lowp vec3 u_xlat10_18;
bool u_xlatb18;
mediump vec3 u_xlat16_19;
mediump float u_xlat16_20;
bool u_xlatb21;
vec3 u_xlat24;
mediump vec3 u_xlat16_24;
lowp vec3 u_xlat10_24;
int u_xlati24;
bool u_xlatb24;
vec3 u_xlat25;
mediump vec3 u_xlat16_25;
lowp vec3 u_xlat10_25;
int u_xlati25;
bool u_xlatb25;
vec3 u_xlat29;
mediump vec3 u_xlat16_29;
lowp vec3 u_xlat10_29;
int u_xlati29;
bool u_xlatb29;
vec3 u_xlat32;
mediump vec3 u_xlat16_32;
lowp vec3 u_xlat10_32;
int u_xlati32;
bool u_xlatb32;
vec3 u_xlat35;
mediump vec3 u_xlat16_35;
lowp vec3 u_xlat10_35;
int u_xlati35;
bool u_xlatb35;
vec3 u_xlat38;
lowp vec3 u_xlat10_38;
mediump float u_xlat16_40;
lowp float u_xlat10_62;
lowp float u_xlat10_75;
bool u_xlatb75;
void main()
{
    u_xlat16_0 = (-_UMin) + _UMax;
    u_xlat16_20 = u_xlat16_0 * 0.0250000004;
    u_xlat16_1 = u_xlat16_0 * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_20 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb21 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb21 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1 = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb21) * 0xffffffffu);
    if(u_xlati1 != 0) {
        u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_62 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_40 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_40 = u_xlat16_40 + u_xlat16_40;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_40)) + vs_TEXCOORD3.xyz;
        u_xlat10_4.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_4.xyz = vec3(u_xlat10_62) * u_xlat10_4.xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_Reflectivity);
        u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz + u_xlat16_4.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb4 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat24.x = _Time.y * _Speed;
        u_xlat24.x = fract(u_xlat24.x);
        u_xlat24.x = u_xlat24.x + -0.5;
        u_xlat24.x = abs(u_xlat24.x) * _Magnitude + _MinValue;
        u_xlat24.xyz = u_xlat16_2.xyz * u_xlat24.xxx;
        u_xlat5.xyz = u_xlat16_2.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb4)) ? u_xlat24.xyz : u_xlat5.xyz;
        u_xlat16_4.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
        u_xlat16_6.xyz = u_xlat16_4.xyz * unity_Lightmap_HDR.xxx;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_7.xyz = u_xlat16_3.xyz * u_xlat16_6.xyz;
        u_xlat16_6.xyz = (-u_xlat16_3.xyz) * u_xlat16_6.xyz + vs_COLOR1.xyz;
        u_xlat16_6.xyz = vs_COLOR1.www * u_xlat16_6.xyz + u_xlat16_7.xyz;
        u_xlat16_4.x = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
        u_xlat16_4.xyz = (-u_xlat16_6.xyz) + u_xlat16_4.xxx;
        u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_4.xyz + u_xlat16_6.xyz;
        u_xlat16_3.xyz = u_xlat16_2.xyz;
        u_xlat16_3.w = _BloomFactor;
        u_xlat16_2.xyz = u_xlat16_2.xyz;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1 == 0) {
        u_xlat16_4.x = u_xlat16_0 * 0.0500000007 + _UMin;
        u_xlat16_4.x = u_xlat16_0 * 0.0250000004 + u_xlat16_4.x;
        u_xlat4.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_4.x;
        u_xlat4.x = u_xlat16_20 * _ScaleTime + u_xlat16_4.x;
        u_xlat4.xy = u_xlat4.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb24 = !!(vs_TEXCOORD0.x>=u_xlat4.y);
#else
        u_xlatb24 = vs_TEXCOORD0.x>=u_xlat4.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(u_xlat4.x>=vs_TEXCOORD0.x);
#else
        u_xlatb4 = u_xlat4.x>=vs_TEXCOORD0.x;
#endif
        u_xlati4 = int(uint(u_xlatb4) * 0xffffffffu & uint(u_xlatb24) * 0xffffffffu);
        if(u_xlati4 != 0) {
            u_xlat10_24.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_5 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_40 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_6.x = u_xlat16_40 + u_xlat16_40;
            u_xlat16_6.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_6.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_25.xyz = texture(_EnvTex, u_xlat16_6.xyz).xyz;
            u_xlat16_5.xyz = vec3(u_xlat10_5) * u_xlat10_25.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Reflectivity);
            u_xlat16_24.xyz = u_xlat10_24.xyz * _Color.xyz + u_xlat16_5.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25.x = _Time.y * _Speed;
            u_xlat25.x = fract(u_xlat25.x);
            u_xlat25.x = u_xlat25.x + -0.5;
            u_xlat25.x = abs(u_xlat25.x) * _Magnitude + _MinValue;
            u_xlat25.xyz = u_xlat16_24.xyz * u_xlat25.xxx;
            u_xlat24.xyz = u_xlat16_24.xyz * vec3(_LightMapIntensity);
            u_xlat16_6.xyz = (bool(u_xlatb5)) ? u_xlat25.xyz : u_xlat24.xyz;
            u_xlat16_24.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_24.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_6.xyz = u_xlat16_6.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_6.xyz * u_xlat16_7.xyz;
            u_xlat16_6.xyz = (-u_xlat16_6.xyz) * u_xlat16_7.xyz + vs_COLOR1.xyz;
            u_xlat16_6.xyz = vs_COLOR1.www * u_xlat16_6.xyz + u_xlat16_8.xyz;
            u_xlat16_24.x = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_24.xyz = (-u_xlat16_6.xyz) + u_xlat16_24.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_24.xyz + u_xlat16_6.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati4;
    } else {
        u_xlati4 = -1;
    //ENDIF
    }
    u_xlati4 = ~u_xlati4;
    u_xlati24 = ~u_xlati1;
    u_xlati4 = int(uint(u_xlati24) & uint(u_xlati4));
    if(u_xlati4 != 0) {
        u_xlat16_5.x = u_xlat16_0 * 0.100000001 + _UMin;
        u_xlat16_5.x = u_xlat16_0 * 0.0250000004 + u_xlat16_5.x;
        u_xlat5.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_5.x;
        u_xlat5.x = u_xlat16_20 * _ScaleTime + u_xlat16_5.x;
        u_xlat5.xy = u_xlat5.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb25 = !!(vs_TEXCOORD0.x>=u_xlat5.y);
#else
        u_xlatb25 = vs_TEXCOORD0.x>=u_xlat5.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb5 = !!(u_xlat5.x>=vs_TEXCOORD0.x);
#else
        u_xlatb5 = u_xlat5.x>=vs_TEXCOORD0.x;
#endif
        u_xlati5 = int(uint(u_xlatb5) * 0xffffffffu & uint(u_xlatb25) * 0xffffffffu);
        if(u_xlati5 != 0) {
            u_xlat10_25.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_9 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_7.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_8.x = u_xlat16_7.x + u_xlat16_7.x;
            u_xlat16_8.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_8.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_29.xyz = texture(_EnvTex, u_xlat16_8.xyz).xyz;
            u_xlat16_9.xyz = vec3(u_xlat10_9) * u_xlat10_29.xyz;
            u_xlat16_9.xyz = u_xlat16_9.xyz * vec3(_Reflectivity);
            u_xlat16_25.xyz = u_xlat10_25.xyz * _Color.xyz + u_xlat16_9.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb9 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb9 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat29.x = _Time.y * _Speed;
            u_xlat29.x = fract(u_xlat29.x);
            u_xlat29.x = u_xlat29.x + -0.5;
            u_xlat29.x = abs(u_xlat29.x) * _Magnitude + _MinValue;
            u_xlat29.xyz = u_xlat16_25.xyz * u_xlat29.xxx;
            u_xlat25.xyz = u_xlat16_25.xyz * vec3(_LightMapIntensity);
            u_xlat16_8.xyz = (bool(u_xlatb9)) ? u_xlat29.xyz : u_xlat25.xyz;
            u_xlat16_25.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_10.xyz = u_xlat16_25.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_8.xyz = u_xlat16_8.xyz * _Color.xyz;
            u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_11.xyz = u_xlat16_8.xyz * u_xlat16_10.xyz;
            u_xlat16_8.xyz = (-u_xlat16_8.xyz) * u_xlat16_10.xyz + vs_COLOR1.xyz;
            u_xlat16_8.xyz = vs_COLOR1.www * u_xlat16_8.xyz + u_xlat16_11.xyz;
            u_xlat16_25.x = dot(u_xlat16_8.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_25.xyz = (-u_xlat16_8.xyz) + u_xlat16_25.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_25.xyz + u_xlat16_8.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati5;
    } else {
        u_xlati5 = -1;
    //ENDIF
    }
    u_xlati5 = ~u_xlati5;
    u_xlati25 = ~u_xlati1;
    u_xlati5 = int(uint(u_xlati25) & uint(u_xlati5));
    if(u_xlati5 != 0) {
        u_xlat16_9.x = u_xlat16_0 * 0.150000006 + _UMin;
        u_xlat16_9.x = u_xlat16_0 * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_20 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb29 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb29 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati9 = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb29) * 0xffffffffu);
        if(u_xlati9 != 0) {
            u_xlat10_29.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_12 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_10.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_11.x = u_xlat16_10.x + u_xlat16_10.x;
            u_xlat16_11.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_11.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_32.xyz = texture(_EnvTex, u_xlat16_11.xyz).xyz;
            u_xlat16_12.xyz = vec3(u_xlat10_12) * u_xlat10_32.xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(_Reflectivity);
            u_xlat16_29.xyz = u_xlat10_29.xyz * _Color.xyz + u_xlat16_12.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb12 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb12 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat32.x = _Time.y * _Speed;
            u_xlat32.x = fract(u_xlat32.x);
            u_xlat32.x = u_xlat32.x + -0.5;
            u_xlat32.x = abs(u_xlat32.x) * _Magnitude + _MinValue;
            u_xlat32.xyz = u_xlat16_29.xyz * u_xlat32.xxx;
            u_xlat29.xyz = u_xlat16_29.xyz * vec3(_LightMapIntensity);
            u_xlat16_11.xyz = (bool(u_xlatb12)) ? u_xlat32.xyz : u_xlat29.xyz;
            u_xlat16_29.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_29.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_11.xyz = u_xlat16_11.xyz * _Color.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_14.xyz = u_xlat16_11.xyz * u_xlat16_13.xyz;
            u_xlat16_11.xyz = (-u_xlat16_11.xyz) * u_xlat16_13.xyz + vs_COLOR1.xyz;
            u_xlat16_11.xyz = vs_COLOR1.www * u_xlat16_11.xyz + u_xlat16_14.xyz;
            u_xlat16_29.x = dot(u_xlat16_11.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_29.xyz = (-u_xlat16_11.xyz) + u_xlat16_29.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_29.xyz + u_xlat16_11.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati9;
    } else {
        u_xlati9 = -1;
    //ENDIF
    }
    u_xlati9 = ~u_xlati9;
    u_xlati29 = ~u_xlati1;
    u_xlati9 = int(uint(u_xlati29) & uint(u_xlati9));
    if(u_xlati9 != 0) {
        u_xlat16_12.x = u_xlat16_0 * 0.200000003 + _UMin;
        u_xlat16_12.x = u_xlat16_0 * 0.0250000004 + u_xlat16_12.x;
        u_xlat12.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_12.x;
        u_xlat12.x = u_xlat16_20 * _ScaleTime + u_xlat16_12.x;
        u_xlat12.xy = u_xlat12.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb32 = !!(vs_TEXCOORD0.x>=u_xlat12.y);
#else
        u_xlatb32 = vs_TEXCOORD0.x>=u_xlat12.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb12 = !!(u_xlat12.x>=vs_TEXCOORD0.x);
#else
        u_xlatb12 = u_xlat12.x>=vs_TEXCOORD0.x;
#endif
        u_xlati12 = int(uint(u_xlatb12) * 0xffffffffu & uint(u_xlatb32) * 0xffffffffu);
        if(u_xlati12 != 0) {
            u_xlat10_32.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_15.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_14.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_14.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_14.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_35.xyz = texture(_EnvTex, u_xlat16_14.xyz).xyz;
            u_xlat16_15.xyz = u_xlat10_15.xxx * u_xlat10_35.xyz;
            u_xlat16_15.xyz = u_xlat16_15.xyz * vec3(_Reflectivity);
            u_xlat16_32.xyz = u_xlat10_32.xyz * _Color.xyz + u_xlat16_15.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb15 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb15 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat35.x = _Time.y * _Speed;
            u_xlat35.x = fract(u_xlat35.x);
            u_xlat35.x = u_xlat35.x + -0.5;
            u_xlat35.x = abs(u_xlat35.x) * _Magnitude + _MinValue;
            u_xlat35.xyz = u_xlat16_32.xyz * u_xlat35.xxx;
            u_xlat32.xyz = u_xlat16_32.xyz * vec3(_LightMapIntensity);
            u_xlat16_14.xyz = (bool(u_xlatb15)) ? u_xlat35.xyz : u_xlat32.xyz;
            u_xlat16_32.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_32.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_14.xyz = u_xlat16_14.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_17.xyz = u_xlat16_14.xyz * u_xlat16_16.xyz;
            u_xlat16_14.xyz = (-u_xlat16_14.xyz) * u_xlat16_16.xyz + vs_COLOR1.xyz;
            u_xlat16_14.xyz = vs_COLOR1.www * u_xlat16_14.xyz + u_xlat16_17.xyz;
            u_xlat16_32.x = dot(u_xlat16_14.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_32.xyz = (-u_xlat16_14.xyz) + u_xlat16_32.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_32.xyz + u_xlat16_14.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati12;
    } else {
        u_xlati12 = -1;
    //ENDIF
    }
    u_xlati12 = ~u_xlati12;
    u_xlati32 = ~u_xlati1;
    u_xlati12 = int(uint(u_xlati32) & uint(u_xlati12));
    if(u_xlati12 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.25 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.300000012 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.349999994 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.400000006 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.450000018 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.5 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.550000012 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.600000024 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.650000036 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.699999988 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.75 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.800000012 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.850000024 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.900000036 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.949999988 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati1 != 0) {
            u_xlat10_15.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_75 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_18.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = vec3(u_xlat10_75) * u_xlat10_18.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_15.xyz = u_xlat10_15.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb75 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb75 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat18.x = _Time.y * _Speed;
            u_xlat18.x = fract(u_xlat18.x);
            u_xlat18.x = u_xlat18.x + -0.5;
            u_xlat18.x = abs(u_xlat18.x) * _Magnitude + _MinValue;
            u_xlat18.xyz = u_xlat16_15.xyz * u_xlat18.xxx;
            u_xlat15.xyz = u_xlat16_15.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb75)) ? u_xlat18.xyz : u_xlat15.xyz;
            u_xlat16_15.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_15.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_15.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_15.xyz = (-u_xlat16_16.xyz) + u_xlat16_15.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_15.xyz + u_xlat16_16.xyz;
            SV_Target0.xyz = u_xlat16_2.xyz;
            SV_Target0.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1 != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LUMINANCE" "FOG_LERP" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 _FogColorNear;
uniform 	vec4 _FogColorFar;
uniform 	float _FogColorIntensity;
uniform 	float _FogIntensity;
uniform 	float _FogEffectStart;
uniform 	float _FogEffectLimit;
uniform 	float _FogStartDistance;
uniform 	float _FogEndDistance;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec3 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat2.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat5.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat2.y = u_xlat16_4.x;
    u_xlat5.z = dot(u_xlat2.xy, u_xlat1.xz);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
#ifdef UNITY_ADRENO_ES3
    u_xlatb21 = !!(0.5<_FogColorNear.w);
#else
    u_xlatb21 = 0.5<_FogColorNear.w;
#endif
    if(u_xlatb21){
        u_xlat1.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat21 = dot(u_xlat1.xzw, u_xlat1.xzw);
        u_xlat21 = sqrt(u_xlat21);
        u_xlat21 = u_xlat21 + (-_FogStartDistance);
        u_xlat21 = max(u_xlat21, 0.0);
        u_xlat1.xz = vec2(u_xlat21) * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat1.xz = u_xlat1.xz * (-u_xlat1.xz);
        u_xlat1.xz = u_xlat1.xz * vec2(1.44269502, 1.44269502);
        u_xlat1.xz = exp2(u_xlat1.xz);
        u_xlat21 = (-u_xlat1.x) + 1.0;
        u_xlat21 = u_xlat21 * _FogEffectLimit;
        u_xlat21 = max(u_xlat21, _FogEffectStart);
        u_xlat2.w = min(u_xlat21, _FogEffectLimit);
        u_xlat6.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat1.zzz * u_xlat6.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    } else {
        u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
        u_xlat0.x = sqrt(u_xlat0.x);
        u_xlat0.x = u_xlat0.x + (-_FogStartDistance);
        u_xlat0.x = max(u_xlat0.x, 0.0);
        u_xlat0.xy = u_xlat0.xx * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat0.xy = u_xlat0.xy * vec2(500.0, 1000.0);
        u_xlat14 = (-_FogStartDistance) + _FogEndDistance;
        u_xlat14 = max(u_xlat14, 0.100000001);
        u_xlat0.xy = u_xlat0.yx / vec2(u_xlat14);
        u_xlat7.x = u_xlat0.y * _FogEffectLimit;
        u_xlat7.x = max(u_xlat7.x, _FogEffectStart);
        u_xlat2.w = min(u_xlat7.x, _FogEffectLimit);
        u_xlat0.x = u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
        u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
        u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
        u_xlat0.x = (-u_xlat0.x) + 1.0;
        u_xlat7.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat0.xxx * u_xlat7.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    //ENDIF
    }
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat5.y = u_xlat1.y;
    vs_TEXCOORD3.xyz = u_xlat5.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform 	mediump float _LumiFactor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform mediump sampler2D unity_Lightmap;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump float u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
int u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp vec3 u_xlat10_2;
mediump vec4 u_xlat16_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
int u_xlati4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp float u_xlat10_5;
int u_xlati5;
bool u_xlatb5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
vec2 u_xlat9;
mediump vec3 u_xlat16_9;
lowp float u_xlat10_9;
int u_xlati9;
bool u_xlatb9;
mediump vec3 u_xlat16_10;
mediump vec3 u_xlat16_11;
vec2 u_xlat12;
mediump vec3 u_xlat16_12;
lowp float u_xlat10_12;
int u_xlati12;
bool u_xlatb12;
mediump vec3 u_xlat16_13;
mediump vec3 u_xlat16_14;
vec3 u_xlat15;
mediump vec3 u_xlat16_15;
lowp vec3 u_xlat10_15;
int u_xlati15;
bool u_xlatb15;
mediump vec3 u_xlat16_16;
mediump vec3 u_xlat16_17;
vec3 u_xlat18;
mediump vec3 u_xlat16_18;
lowp vec3 u_xlat10_18;
bool u_xlatb18;
mediump vec3 u_xlat16_19;
mediump float u_xlat16_20;
bool u_xlatb21;
vec3 u_xlat24;
mediump vec3 u_xlat16_24;
lowp vec3 u_xlat10_24;
int u_xlati24;
bool u_xlatb24;
vec3 u_xlat25;
mediump vec3 u_xlat16_25;
lowp vec3 u_xlat10_25;
int u_xlati25;
bool u_xlatb25;
vec3 u_xlat29;
mediump vec3 u_xlat16_29;
lowp vec3 u_xlat10_29;
int u_xlati29;
bool u_xlatb29;
vec3 u_xlat32;
mediump vec3 u_xlat16_32;
lowp vec3 u_xlat10_32;
int u_xlati32;
bool u_xlatb32;
vec3 u_xlat35;
mediump vec3 u_xlat16_35;
lowp vec3 u_xlat10_35;
int u_xlati35;
bool u_xlatb35;
vec3 u_xlat38;
lowp vec3 u_xlat10_38;
mediump float u_xlat16_40;
lowp float u_xlat10_62;
lowp float u_xlat10_75;
bool u_xlatb75;
void main()
{
    u_xlat16_0 = (-_UMin) + _UMax;
    u_xlat16_20 = u_xlat16_0 * 0.0250000004;
    u_xlat16_1 = u_xlat16_0 * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_20 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb21 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb21 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1 = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb21) * 0xffffffffu);
    if(u_xlati1 != 0) {
        u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_62 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_40 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_40 = u_xlat16_40 + u_xlat16_40;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_40)) + vs_TEXCOORD3.xyz;
        u_xlat10_4.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_4.xyz = vec3(u_xlat10_62) * u_xlat10_4.xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_Reflectivity);
        u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz + u_xlat16_4.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb4 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat24.x = _Time.y * _Speed;
        u_xlat24.x = fract(u_xlat24.x);
        u_xlat24.x = u_xlat24.x + -0.5;
        u_xlat24.x = abs(u_xlat24.x) * _Magnitude + _MinValue;
        u_xlat24.xyz = u_xlat16_2.xyz * u_xlat24.xxx;
        u_xlat5.xyz = u_xlat16_2.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb4)) ? u_xlat24.xyz : u_xlat5.xyz;
        u_xlat16_4.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
        u_xlat16_6.xyz = u_xlat16_4.xyz * unity_Lightmap_HDR.xxx;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_7.xyz = u_xlat16_3.xyz * u_xlat16_6.xyz;
        u_xlat16_6.xyz = (-u_xlat16_3.xyz) * u_xlat16_6.xyz + vs_COLOR1.xyz;
        u_xlat16_6.xyz = vs_COLOR1.www * u_xlat16_6.xyz + u_xlat16_7.xyz;
        u_xlat16_4.x = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
        u_xlat16_4.xyz = (-u_xlat16_6.xyz) + u_xlat16_4.xxx;
        u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_4.xyz + u_xlat16_6.xyz;
        u_xlat16_3.xyz = u_xlat16_2.xyz;
        u_xlat16_3.w = _BloomFactor;
        u_xlat16_2.xyz = u_xlat16_2.xyz;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1 == 0) {
        u_xlat16_4.x = u_xlat16_0 * 0.0500000007 + _UMin;
        u_xlat16_4.x = u_xlat16_0 * 0.0250000004 + u_xlat16_4.x;
        u_xlat4.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_4.x;
        u_xlat4.x = u_xlat16_20 * _ScaleTime + u_xlat16_4.x;
        u_xlat4.xy = u_xlat4.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb24 = !!(vs_TEXCOORD0.x>=u_xlat4.y);
#else
        u_xlatb24 = vs_TEXCOORD0.x>=u_xlat4.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(u_xlat4.x>=vs_TEXCOORD0.x);
#else
        u_xlatb4 = u_xlat4.x>=vs_TEXCOORD0.x;
#endif
        u_xlati4 = int(uint(u_xlatb4) * 0xffffffffu & uint(u_xlatb24) * 0xffffffffu);
        if(u_xlati4 != 0) {
            u_xlat10_24.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_5 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_40 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_6.x = u_xlat16_40 + u_xlat16_40;
            u_xlat16_6.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_6.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_25.xyz = texture(_EnvTex, u_xlat16_6.xyz).xyz;
            u_xlat16_5.xyz = vec3(u_xlat10_5) * u_xlat10_25.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Reflectivity);
            u_xlat16_24.xyz = u_xlat10_24.xyz * _Color.xyz + u_xlat16_5.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25.x = _Time.y * _Speed;
            u_xlat25.x = fract(u_xlat25.x);
            u_xlat25.x = u_xlat25.x + -0.5;
            u_xlat25.x = abs(u_xlat25.x) * _Magnitude + _MinValue;
            u_xlat25.xyz = u_xlat16_24.xyz * u_xlat25.xxx;
            u_xlat24.xyz = u_xlat16_24.xyz * vec3(_LightMapIntensity);
            u_xlat16_6.xyz = (bool(u_xlatb5)) ? u_xlat25.xyz : u_xlat24.xyz;
            u_xlat16_24.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_24.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_6.xyz = u_xlat16_6.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_6.xyz * u_xlat16_7.xyz;
            u_xlat16_6.xyz = (-u_xlat16_6.xyz) * u_xlat16_7.xyz + vs_COLOR1.xyz;
            u_xlat16_6.xyz = vs_COLOR1.www * u_xlat16_6.xyz + u_xlat16_8.xyz;
            u_xlat16_24.x = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_24.xyz = (-u_xlat16_6.xyz) + u_xlat16_24.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_24.xyz + u_xlat16_6.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati4;
    } else {
        u_xlati4 = -1;
    //ENDIF
    }
    u_xlati4 = ~u_xlati4;
    u_xlati24 = ~u_xlati1;
    u_xlati4 = int(uint(u_xlati24) & uint(u_xlati4));
    if(u_xlati4 != 0) {
        u_xlat16_5.x = u_xlat16_0 * 0.100000001 + _UMin;
        u_xlat16_5.x = u_xlat16_0 * 0.0250000004 + u_xlat16_5.x;
        u_xlat5.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_5.x;
        u_xlat5.x = u_xlat16_20 * _ScaleTime + u_xlat16_5.x;
        u_xlat5.xy = u_xlat5.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb25 = !!(vs_TEXCOORD0.x>=u_xlat5.y);
#else
        u_xlatb25 = vs_TEXCOORD0.x>=u_xlat5.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb5 = !!(u_xlat5.x>=vs_TEXCOORD0.x);
#else
        u_xlatb5 = u_xlat5.x>=vs_TEXCOORD0.x;
#endif
        u_xlati5 = int(uint(u_xlatb5) * 0xffffffffu & uint(u_xlatb25) * 0xffffffffu);
        if(u_xlati5 != 0) {
            u_xlat10_25.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_9 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_7.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_8.x = u_xlat16_7.x + u_xlat16_7.x;
            u_xlat16_8.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_8.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_29.xyz = texture(_EnvTex, u_xlat16_8.xyz).xyz;
            u_xlat16_9.xyz = vec3(u_xlat10_9) * u_xlat10_29.xyz;
            u_xlat16_9.xyz = u_xlat16_9.xyz * vec3(_Reflectivity);
            u_xlat16_25.xyz = u_xlat10_25.xyz * _Color.xyz + u_xlat16_9.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb9 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb9 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat29.x = _Time.y * _Speed;
            u_xlat29.x = fract(u_xlat29.x);
            u_xlat29.x = u_xlat29.x + -0.5;
            u_xlat29.x = abs(u_xlat29.x) * _Magnitude + _MinValue;
            u_xlat29.xyz = u_xlat16_25.xyz * u_xlat29.xxx;
            u_xlat25.xyz = u_xlat16_25.xyz * vec3(_LightMapIntensity);
            u_xlat16_8.xyz = (bool(u_xlatb9)) ? u_xlat29.xyz : u_xlat25.xyz;
            u_xlat16_25.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_10.xyz = u_xlat16_25.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_8.xyz = u_xlat16_8.xyz * _Color.xyz;
            u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_11.xyz = u_xlat16_8.xyz * u_xlat16_10.xyz;
            u_xlat16_8.xyz = (-u_xlat16_8.xyz) * u_xlat16_10.xyz + vs_COLOR1.xyz;
            u_xlat16_8.xyz = vs_COLOR1.www * u_xlat16_8.xyz + u_xlat16_11.xyz;
            u_xlat16_25.x = dot(u_xlat16_8.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_25.xyz = (-u_xlat16_8.xyz) + u_xlat16_25.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_25.xyz + u_xlat16_8.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati5;
    } else {
        u_xlati5 = -1;
    //ENDIF
    }
    u_xlati5 = ~u_xlati5;
    u_xlati25 = ~u_xlati1;
    u_xlati5 = int(uint(u_xlati25) & uint(u_xlati5));
    if(u_xlati5 != 0) {
        u_xlat16_9.x = u_xlat16_0 * 0.150000006 + _UMin;
        u_xlat16_9.x = u_xlat16_0 * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_20 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb29 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb29 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati9 = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb29) * 0xffffffffu);
        if(u_xlati9 != 0) {
            u_xlat10_29.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_12 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_10.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_11.x = u_xlat16_10.x + u_xlat16_10.x;
            u_xlat16_11.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_11.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_32.xyz = texture(_EnvTex, u_xlat16_11.xyz).xyz;
            u_xlat16_12.xyz = vec3(u_xlat10_12) * u_xlat10_32.xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(_Reflectivity);
            u_xlat16_29.xyz = u_xlat10_29.xyz * _Color.xyz + u_xlat16_12.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb12 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb12 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat32.x = _Time.y * _Speed;
            u_xlat32.x = fract(u_xlat32.x);
            u_xlat32.x = u_xlat32.x + -0.5;
            u_xlat32.x = abs(u_xlat32.x) * _Magnitude + _MinValue;
            u_xlat32.xyz = u_xlat16_29.xyz * u_xlat32.xxx;
            u_xlat29.xyz = u_xlat16_29.xyz * vec3(_LightMapIntensity);
            u_xlat16_11.xyz = (bool(u_xlatb12)) ? u_xlat32.xyz : u_xlat29.xyz;
            u_xlat16_29.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_29.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_11.xyz = u_xlat16_11.xyz * _Color.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_14.xyz = u_xlat16_11.xyz * u_xlat16_13.xyz;
            u_xlat16_11.xyz = (-u_xlat16_11.xyz) * u_xlat16_13.xyz + vs_COLOR1.xyz;
            u_xlat16_11.xyz = vs_COLOR1.www * u_xlat16_11.xyz + u_xlat16_14.xyz;
            u_xlat16_29.x = dot(u_xlat16_11.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_29.xyz = (-u_xlat16_11.xyz) + u_xlat16_29.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_29.xyz + u_xlat16_11.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati9;
    } else {
        u_xlati9 = -1;
    //ENDIF
    }
    u_xlati9 = ~u_xlati9;
    u_xlati29 = ~u_xlati1;
    u_xlati9 = int(uint(u_xlati29) & uint(u_xlati9));
    if(u_xlati9 != 0) {
        u_xlat16_12.x = u_xlat16_0 * 0.200000003 + _UMin;
        u_xlat16_12.x = u_xlat16_0 * 0.0250000004 + u_xlat16_12.x;
        u_xlat12.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_12.x;
        u_xlat12.x = u_xlat16_20 * _ScaleTime + u_xlat16_12.x;
        u_xlat12.xy = u_xlat12.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb32 = !!(vs_TEXCOORD0.x>=u_xlat12.y);
#else
        u_xlatb32 = vs_TEXCOORD0.x>=u_xlat12.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb12 = !!(u_xlat12.x>=vs_TEXCOORD0.x);
#else
        u_xlatb12 = u_xlat12.x>=vs_TEXCOORD0.x;
#endif
        u_xlati12 = int(uint(u_xlatb12) * 0xffffffffu & uint(u_xlatb32) * 0xffffffffu);
        if(u_xlati12 != 0) {
            u_xlat10_32.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_15.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_14.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_14.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_14.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_35.xyz = texture(_EnvTex, u_xlat16_14.xyz).xyz;
            u_xlat16_15.xyz = u_xlat10_15.xxx * u_xlat10_35.xyz;
            u_xlat16_15.xyz = u_xlat16_15.xyz * vec3(_Reflectivity);
            u_xlat16_32.xyz = u_xlat10_32.xyz * _Color.xyz + u_xlat16_15.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb15 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb15 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat35.x = _Time.y * _Speed;
            u_xlat35.x = fract(u_xlat35.x);
            u_xlat35.x = u_xlat35.x + -0.5;
            u_xlat35.x = abs(u_xlat35.x) * _Magnitude + _MinValue;
            u_xlat35.xyz = u_xlat16_32.xyz * u_xlat35.xxx;
            u_xlat32.xyz = u_xlat16_32.xyz * vec3(_LightMapIntensity);
            u_xlat16_14.xyz = (bool(u_xlatb15)) ? u_xlat35.xyz : u_xlat32.xyz;
            u_xlat16_32.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_32.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_14.xyz = u_xlat16_14.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_17.xyz = u_xlat16_14.xyz * u_xlat16_16.xyz;
            u_xlat16_14.xyz = (-u_xlat16_14.xyz) * u_xlat16_16.xyz + vs_COLOR1.xyz;
            u_xlat16_14.xyz = vs_COLOR1.www * u_xlat16_14.xyz + u_xlat16_17.xyz;
            u_xlat16_32.x = dot(u_xlat16_14.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_32.xyz = (-u_xlat16_14.xyz) + u_xlat16_32.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_32.xyz + u_xlat16_14.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati12;
    } else {
        u_xlati12 = -1;
    //ENDIF
    }
    u_xlati12 = ~u_xlati12;
    u_xlati32 = ~u_xlati1;
    u_xlati12 = int(uint(u_xlati32) & uint(u_xlati12));
    if(u_xlati12 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.25 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.300000012 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.349999994 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.400000006 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.450000018 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.5 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.550000012 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.600000024 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.650000036 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.699999988 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.75 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.800000012 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.850000024 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.900000036 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.949999988 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati1 != 0) {
            u_xlat10_15.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_75 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_18.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = vec3(u_xlat10_75) * u_xlat10_18.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_15.xyz = u_xlat10_15.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb75 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb75 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat18.x = _Time.y * _Speed;
            u_xlat18.x = fract(u_xlat18.x);
            u_xlat18.x = u_xlat18.x + -0.5;
            u_xlat18.x = abs(u_xlat18.x) * _Magnitude + _MinValue;
            u_xlat18.xyz = u_xlat16_15.xyz * u_xlat18.xxx;
            u_xlat15.xyz = u_xlat16_15.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb75)) ? u_xlat18.xyz : u_xlat15.xyz;
            u_xlat16_15.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_15.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_15.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_15.xyz = (-u_xlat16_16.xyz) + u_xlat16_15.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_15.xyz + u_xlat16_16.xyz;
            SV_Target0.xyz = u_xlat16_2.xyz;
            SV_Target0.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1 != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LUMINANCE" "FOG_LERP" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 _FogColorNear;
uniform 	vec4 _FogColorFar;
uniform 	float _FogColorIntensity;
uniform 	float _FogIntensity;
uniform 	float _FogEffectStart;
uniform 	float _FogEffectLimit;
uniform 	float _FogStartDistance;
uniform 	float _FogEndDistance;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec3 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat2.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat5.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat2.y = u_xlat16_4.x;
    u_xlat5.z = dot(u_xlat2.xy, u_xlat1.xz);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
#ifdef UNITY_ADRENO_ES3
    u_xlatb21 = !!(0.5<_FogColorNear.w);
#else
    u_xlatb21 = 0.5<_FogColorNear.w;
#endif
    if(u_xlatb21){
        u_xlat1.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat21 = dot(u_xlat1.xzw, u_xlat1.xzw);
        u_xlat21 = sqrt(u_xlat21);
        u_xlat21 = u_xlat21 + (-_FogStartDistance);
        u_xlat21 = max(u_xlat21, 0.0);
        u_xlat1.xz = vec2(u_xlat21) * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat1.xz = u_xlat1.xz * (-u_xlat1.xz);
        u_xlat1.xz = u_xlat1.xz * vec2(1.44269502, 1.44269502);
        u_xlat1.xz = exp2(u_xlat1.xz);
        u_xlat21 = (-u_xlat1.x) + 1.0;
        u_xlat21 = u_xlat21 * _FogEffectLimit;
        u_xlat21 = max(u_xlat21, _FogEffectStart);
        u_xlat2.w = min(u_xlat21, _FogEffectLimit);
        u_xlat6.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat1.zzz * u_xlat6.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    } else {
        u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
        u_xlat0.x = sqrt(u_xlat0.x);
        u_xlat0.x = u_xlat0.x + (-_FogStartDistance);
        u_xlat0.x = max(u_xlat0.x, 0.0);
        u_xlat0.xy = u_xlat0.xx * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat0.xy = u_xlat0.xy * vec2(500.0, 1000.0);
        u_xlat14 = (-_FogStartDistance) + _FogEndDistance;
        u_xlat14 = max(u_xlat14, 0.100000001);
        u_xlat0.xy = u_xlat0.yx / vec2(u_xlat14);
        u_xlat7.x = u_xlat0.y * _FogEffectLimit;
        u_xlat7.x = max(u_xlat7.x, _FogEffectStart);
        u_xlat2.w = min(u_xlat7.x, _FogEffectLimit);
        u_xlat0.x = u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
        u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
        u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
        u_xlat0.x = (-u_xlat0.x) + 1.0;
        u_xlat7.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat0.xxx * u_xlat7.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    //ENDIF
    }
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat5.y = u_xlat1.y;
    vs_TEXCOORD3.xyz = u_xlat5.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform 	mediump float _LumiFactor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform mediump sampler2D unity_Lightmap;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump float u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
int u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp vec3 u_xlat10_2;
mediump vec4 u_xlat16_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
int u_xlati4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp float u_xlat10_5;
int u_xlati5;
bool u_xlatb5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
vec2 u_xlat9;
mediump vec3 u_xlat16_9;
lowp float u_xlat10_9;
int u_xlati9;
bool u_xlatb9;
mediump vec3 u_xlat16_10;
mediump vec3 u_xlat16_11;
vec2 u_xlat12;
mediump vec3 u_xlat16_12;
lowp float u_xlat10_12;
int u_xlati12;
bool u_xlatb12;
mediump vec3 u_xlat16_13;
mediump vec3 u_xlat16_14;
vec3 u_xlat15;
mediump vec3 u_xlat16_15;
lowp vec3 u_xlat10_15;
int u_xlati15;
bool u_xlatb15;
mediump vec3 u_xlat16_16;
mediump vec3 u_xlat16_17;
vec3 u_xlat18;
mediump vec3 u_xlat16_18;
lowp vec3 u_xlat10_18;
bool u_xlatb18;
mediump vec3 u_xlat16_19;
mediump float u_xlat16_20;
bool u_xlatb21;
vec3 u_xlat24;
mediump vec3 u_xlat16_24;
lowp vec3 u_xlat10_24;
int u_xlati24;
bool u_xlatb24;
vec3 u_xlat25;
mediump vec3 u_xlat16_25;
lowp vec3 u_xlat10_25;
int u_xlati25;
bool u_xlatb25;
vec3 u_xlat29;
mediump vec3 u_xlat16_29;
lowp vec3 u_xlat10_29;
int u_xlati29;
bool u_xlatb29;
vec3 u_xlat32;
mediump vec3 u_xlat16_32;
lowp vec3 u_xlat10_32;
int u_xlati32;
bool u_xlatb32;
vec3 u_xlat35;
mediump vec3 u_xlat16_35;
lowp vec3 u_xlat10_35;
int u_xlati35;
bool u_xlatb35;
vec3 u_xlat38;
lowp vec3 u_xlat10_38;
mediump float u_xlat16_40;
lowp float u_xlat10_62;
lowp float u_xlat10_75;
bool u_xlatb75;
void main()
{
    u_xlat16_0 = (-_UMin) + _UMax;
    u_xlat16_20 = u_xlat16_0 * 0.0250000004;
    u_xlat16_1 = u_xlat16_0 * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_20 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb21 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb21 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1 = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb21) * 0xffffffffu);
    if(u_xlati1 != 0) {
        u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_62 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_40 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_40 = u_xlat16_40 + u_xlat16_40;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_40)) + vs_TEXCOORD3.xyz;
        u_xlat10_4.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_4.xyz = vec3(u_xlat10_62) * u_xlat10_4.xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_Reflectivity);
        u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz + u_xlat16_4.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb4 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat24.x = _Time.y * _Speed;
        u_xlat24.x = fract(u_xlat24.x);
        u_xlat24.x = u_xlat24.x + -0.5;
        u_xlat24.x = abs(u_xlat24.x) * _Magnitude + _MinValue;
        u_xlat24.xyz = u_xlat16_2.xyz * u_xlat24.xxx;
        u_xlat5.xyz = u_xlat16_2.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb4)) ? u_xlat24.xyz : u_xlat5.xyz;
        u_xlat16_4.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
        u_xlat16_6.xyz = u_xlat16_4.xyz * unity_Lightmap_HDR.xxx;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_7.xyz = u_xlat16_3.xyz * u_xlat16_6.xyz;
        u_xlat16_6.xyz = (-u_xlat16_3.xyz) * u_xlat16_6.xyz + vs_COLOR1.xyz;
        u_xlat16_6.xyz = vs_COLOR1.www * u_xlat16_6.xyz + u_xlat16_7.xyz;
        u_xlat16_4.x = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
        u_xlat16_4.xyz = (-u_xlat16_6.xyz) + u_xlat16_4.xxx;
        u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_4.xyz + u_xlat16_6.xyz;
        u_xlat16_3.xyz = u_xlat16_2.xyz;
        u_xlat16_3.w = _BloomFactor;
        u_xlat16_2.xyz = u_xlat16_2.xyz;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1 == 0) {
        u_xlat16_4.x = u_xlat16_0 * 0.0500000007 + _UMin;
        u_xlat16_4.x = u_xlat16_0 * 0.0250000004 + u_xlat16_4.x;
        u_xlat4.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_4.x;
        u_xlat4.x = u_xlat16_20 * _ScaleTime + u_xlat16_4.x;
        u_xlat4.xy = u_xlat4.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb24 = !!(vs_TEXCOORD0.x>=u_xlat4.y);
#else
        u_xlatb24 = vs_TEXCOORD0.x>=u_xlat4.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(u_xlat4.x>=vs_TEXCOORD0.x);
#else
        u_xlatb4 = u_xlat4.x>=vs_TEXCOORD0.x;
#endif
        u_xlati4 = int(uint(u_xlatb4) * 0xffffffffu & uint(u_xlatb24) * 0xffffffffu);
        if(u_xlati4 != 0) {
            u_xlat10_24.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_5 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_40 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_6.x = u_xlat16_40 + u_xlat16_40;
            u_xlat16_6.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_6.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_25.xyz = texture(_EnvTex, u_xlat16_6.xyz).xyz;
            u_xlat16_5.xyz = vec3(u_xlat10_5) * u_xlat10_25.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Reflectivity);
            u_xlat16_24.xyz = u_xlat10_24.xyz * _Color.xyz + u_xlat16_5.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25.x = _Time.y * _Speed;
            u_xlat25.x = fract(u_xlat25.x);
            u_xlat25.x = u_xlat25.x + -0.5;
            u_xlat25.x = abs(u_xlat25.x) * _Magnitude + _MinValue;
            u_xlat25.xyz = u_xlat16_24.xyz * u_xlat25.xxx;
            u_xlat24.xyz = u_xlat16_24.xyz * vec3(_LightMapIntensity);
            u_xlat16_6.xyz = (bool(u_xlatb5)) ? u_xlat25.xyz : u_xlat24.xyz;
            u_xlat16_24.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_24.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_6.xyz = u_xlat16_6.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_6.xyz * u_xlat16_7.xyz;
            u_xlat16_6.xyz = (-u_xlat16_6.xyz) * u_xlat16_7.xyz + vs_COLOR1.xyz;
            u_xlat16_6.xyz = vs_COLOR1.www * u_xlat16_6.xyz + u_xlat16_8.xyz;
            u_xlat16_24.x = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_24.xyz = (-u_xlat16_6.xyz) + u_xlat16_24.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_24.xyz + u_xlat16_6.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati4;
    } else {
        u_xlati4 = -1;
    //ENDIF
    }
    u_xlati4 = ~u_xlati4;
    u_xlati24 = ~u_xlati1;
    u_xlati4 = int(uint(u_xlati24) & uint(u_xlati4));
    if(u_xlati4 != 0) {
        u_xlat16_5.x = u_xlat16_0 * 0.100000001 + _UMin;
        u_xlat16_5.x = u_xlat16_0 * 0.0250000004 + u_xlat16_5.x;
        u_xlat5.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_5.x;
        u_xlat5.x = u_xlat16_20 * _ScaleTime + u_xlat16_5.x;
        u_xlat5.xy = u_xlat5.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb25 = !!(vs_TEXCOORD0.x>=u_xlat5.y);
#else
        u_xlatb25 = vs_TEXCOORD0.x>=u_xlat5.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb5 = !!(u_xlat5.x>=vs_TEXCOORD0.x);
#else
        u_xlatb5 = u_xlat5.x>=vs_TEXCOORD0.x;
#endif
        u_xlati5 = int(uint(u_xlatb5) * 0xffffffffu & uint(u_xlatb25) * 0xffffffffu);
        if(u_xlati5 != 0) {
            u_xlat10_25.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_9 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_7.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_8.x = u_xlat16_7.x + u_xlat16_7.x;
            u_xlat16_8.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_8.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_29.xyz = texture(_EnvTex, u_xlat16_8.xyz).xyz;
            u_xlat16_9.xyz = vec3(u_xlat10_9) * u_xlat10_29.xyz;
            u_xlat16_9.xyz = u_xlat16_9.xyz * vec3(_Reflectivity);
            u_xlat16_25.xyz = u_xlat10_25.xyz * _Color.xyz + u_xlat16_9.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb9 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb9 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat29.x = _Time.y * _Speed;
            u_xlat29.x = fract(u_xlat29.x);
            u_xlat29.x = u_xlat29.x + -0.5;
            u_xlat29.x = abs(u_xlat29.x) * _Magnitude + _MinValue;
            u_xlat29.xyz = u_xlat16_25.xyz * u_xlat29.xxx;
            u_xlat25.xyz = u_xlat16_25.xyz * vec3(_LightMapIntensity);
            u_xlat16_8.xyz = (bool(u_xlatb9)) ? u_xlat29.xyz : u_xlat25.xyz;
            u_xlat16_25.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_10.xyz = u_xlat16_25.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_8.xyz = u_xlat16_8.xyz * _Color.xyz;
            u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_11.xyz = u_xlat16_8.xyz * u_xlat16_10.xyz;
            u_xlat16_8.xyz = (-u_xlat16_8.xyz) * u_xlat16_10.xyz + vs_COLOR1.xyz;
            u_xlat16_8.xyz = vs_COLOR1.www * u_xlat16_8.xyz + u_xlat16_11.xyz;
            u_xlat16_25.x = dot(u_xlat16_8.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_25.xyz = (-u_xlat16_8.xyz) + u_xlat16_25.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_25.xyz + u_xlat16_8.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati5;
    } else {
        u_xlati5 = -1;
    //ENDIF
    }
    u_xlati5 = ~u_xlati5;
    u_xlati25 = ~u_xlati1;
    u_xlati5 = int(uint(u_xlati25) & uint(u_xlati5));
    if(u_xlati5 != 0) {
        u_xlat16_9.x = u_xlat16_0 * 0.150000006 + _UMin;
        u_xlat16_9.x = u_xlat16_0 * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_20 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb29 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb29 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati9 = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb29) * 0xffffffffu);
        if(u_xlati9 != 0) {
            u_xlat10_29.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_12 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_10.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_11.x = u_xlat16_10.x + u_xlat16_10.x;
            u_xlat16_11.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_11.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_32.xyz = texture(_EnvTex, u_xlat16_11.xyz).xyz;
            u_xlat16_12.xyz = vec3(u_xlat10_12) * u_xlat10_32.xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(_Reflectivity);
            u_xlat16_29.xyz = u_xlat10_29.xyz * _Color.xyz + u_xlat16_12.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb12 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb12 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat32.x = _Time.y * _Speed;
            u_xlat32.x = fract(u_xlat32.x);
            u_xlat32.x = u_xlat32.x + -0.5;
            u_xlat32.x = abs(u_xlat32.x) * _Magnitude + _MinValue;
            u_xlat32.xyz = u_xlat16_29.xyz * u_xlat32.xxx;
            u_xlat29.xyz = u_xlat16_29.xyz * vec3(_LightMapIntensity);
            u_xlat16_11.xyz = (bool(u_xlatb12)) ? u_xlat32.xyz : u_xlat29.xyz;
            u_xlat16_29.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_29.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_11.xyz = u_xlat16_11.xyz * _Color.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_14.xyz = u_xlat16_11.xyz * u_xlat16_13.xyz;
            u_xlat16_11.xyz = (-u_xlat16_11.xyz) * u_xlat16_13.xyz + vs_COLOR1.xyz;
            u_xlat16_11.xyz = vs_COLOR1.www * u_xlat16_11.xyz + u_xlat16_14.xyz;
            u_xlat16_29.x = dot(u_xlat16_11.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_29.xyz = (-u_xlat16_11.xyz) + u_xlat16_29.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_29.xyz + u_xlat16_11.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati9;
    } else {
        u_xlati9 = -1;
    //ENDIF
    }
    u_xlati9 = ~u_xlati9;
    u_xlati29 = ~u_xlati1;
    u_xlati9 = int(uint(u_xlati29) & uint(u_xlati9));
    if(u_xlati9 != 0) {
        u_xlat16_12.x = u_xlat16_0 * 0.200000003 + _UMin;
        u_xlat16_12.x = u_xlat16_0 * 0.0250000004 + u_xlat16_12.x;
        u_xlat12.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_12.x;
        u_xlat12.x = u_xlat16_20 * _ScaleTime + u_xlat16_12.x;
        u_xlat12.xy = u_xlat12.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb32 = !!(vs_TEXCOORD0.x>=u_xlat12.y);
#else
        u_xlatb32 = vs_TEXCOORD0.x>=u_xlat12.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb12 = !!(u_xlat12.x>=vs_TEXCOORD0.x);
#else
        u_xlatb12 = u_xlat12.x>=vs_TEXCOORD0.x;
#endif
        u_xlati12 = int(uint(u_xlatb12) * 0xffffffffu & uint(u_xlatb32) * 0xffffffffu);
        if(u_xlati12 != 0) {
            u_xlat10_32.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_15.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_14.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_14.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_14.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_35.xyz = texture(_EnvTex, u_xlat16_14.xyz).xyz;
            u_xlat16_15.xyz = u_xlat10_15.xxx * u_xlat10_35.xyz;
            u_xlat16_15.xyz = u_xlat16_15.xyz * vec3(_Reflectivity);
            u_xlat16_32.xyz = u_xlat10_32.xyz * _Color.xyz + u_xlat16_15.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb15 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb15 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat35.x = _Time.y * _Speed;
            u_xlat35.x = fract(u_xlat35.x);
            u_xlat35.x = u_xlat35.x + -0.5;
            u_xlat35.x = abs(u_xlat35.x) * _Magnitude + _MinValue;
            u_xlat35.xyz = u_xlat16_32.xyz * u_xlat35.xxx;
            u_xlat32.xyz = u_xlat16_32.xyz * vec3(_LightMapIntensity);
            u_xlat16_14.xyz = (bool(u_xlatb15)) ? u_xlat35.xyz : u_xlat32.xyz;
            u_xlat16_32.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_32.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_14.xyz = u_xlat16_14.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_17.xyz = u_xlat16_14.xyz * u_xlat16_16.xyz;
            u_xlat16_14.xyz = (-u_xlat16_14.xyz) * u_xlat16_16.xyz + vs_COLOR1.xyz;
            u_xlat16_14.xyz = vs_COLOR1.www * u_xlat16_14.xyz + u_xlat16_17.xyz;
            u_xlat16_32.x = dot(u_xlat16_14.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_32.xyz = (-u_xlat16_14.xyz) + u_xlat16_32.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_32.xyz + u_xlat16_14.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati12;
    } else {
        u_xlati12 = -1;
    //ENDIF
    }
    u_xlati12 = ~u_xlati12;
    u_xlati32 = ~u_xlati1;
    u_xlati12 = int(uint(u_xlati32) & uint(u_xlati12));
    if(u_xlati12 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.25 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.300000012 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.349999994 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.400000006 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.450000018 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.5 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.550000012 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.600000024 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.650000036 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.699999988 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.75 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.800000012 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.850000024 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.900000036 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.949999988 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati1 != 0) {
            u_xlat10_15.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_75 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_18.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = vec3(u_xlat10_75) * u_xlat10_18.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_15.xyz = u_xlat10_15.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb75 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb75 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat18.x = _Time.y * _Speed;
            u_xlat18.x = fract(u_xlat18.x);
            u_xlat18.x = u_xlat18.x + -0.5;
            u_xlat18.x = abs(u_xlat18.x) * _Magnitude + _MinValue;
            u_xlat18.xyz = u_xlat16_15.xyz * u_xlat18.xxx;
            u_xlat15.xyz = u_xlat16_15.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb75)) ? u_xlat18.xyz : u_xlat15.xyz;
            u_xlat16_15.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_15.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_15.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_15.xyz = (-u_xlat16_16.xyz) + u_xlat16_15.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_15.xyz + u_xlat16_16.xyz;
            SV_Target0.xyz = u_xlat16_2.xyz;
            SV_Target0.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1 != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LUMINANCE" "FOG_LERP" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 _FogColorNear;
uniform 	vec4 _FogColorFar;
uniform 	float _FogColorIntensity;
uniform 	float _FogIntensity;
uniform 	float _FogEffectStart;
uniform 	float _FogEffectLimit;
uniform 	float _FogStartDistance;
uniform 	float _FogEndDistance;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec3 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat2.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat5.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat2.y = u_xlat16_4.x;
    u_xlat5.z = dot(u_xlat2.xy, u_xlat1.xz);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
#ifdef UNITY_ADRENO_ES3
    u_xlatb21 = !!(0.5<_FogColorNear.w);
#else
    u_xlatb21 = 0.5<_FogColorNear.w;
#endif
    if(u_xlatb21){
        u_xlat1.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat21 = dot(u_xlat1.xzw, u_xlat1.xzw);
        u_xlat21 = sqrt(u_xlat21);
        u_xlat21 = u_xlat21 + (-_FogStartDistance);
        u_xlat21 = max(u_xlat21, 0.0);
        u_xlat1.xz = vec2(u_xlat21) * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat1.xz = u_xlat1.xz * (-u_xlat1.xz);
        u_xlat1.xz = u_xlat1.xz * vec2(1.44269502, 1.44269502);
        u_xlat1.xz = exp2(u_xlat1.xz);
        u_xlat21 = (-u_xlat1.x) + 1.0;
        u_xlat21 = u_xlat21 * _FogEffectLimit;
        u_xlat21 = max(u_xlat21, _FogEffectStart);
        u_xlat2.w = min(u_xlat21, _FogEffectLimit);
        u_xlat6.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat1.zzz * u_xlat6.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    } else {
        u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
        u_xlat0.x = sqrt(u_xlat0.x);
        u_xlat0.x = u_xlat0.x + (-_FogStartDistance);
        u_xlat0.x = max(u_xlat0.x, 0.0);
        u_xlat0.xy = u_xlat0.xx * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat0.xy = u_xlat0.xy * vec2(500.0, 1000.0);
        u_xlat14 = (-_FogStartDistance) + _FogEndDistance;
        u_xlat14 = max(u_xlat14, 0.100000001);
        u_xlat0.xy = u_xlat0.yx / vec2(u_xlat14);
        u_xlat7.x = u_xlat0.y * _FogEffectLimit;
        u_xlat7.x = max(u_xlat7.x, _FogEffectStart);
        u_xlat2.w = min(u_xlat7.x, _FogEffectLimit);
        u_xlat0.x = u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
        u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
        u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
        u_xlat0.x = (-u_xlat0.x) + 1.0;
        u_xlat7.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat0.xxx * u_xlat7.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    //ENDIF
    }
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat5.y = u_xlat1.y;
    vs_TEXCOORD3.xyz = u_xlat5.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform 	mediump float _LumiFactor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform mediump sampler2D unity_Lightmap;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump float u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
int u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp vec3 u_xlat10_2;
mediump vec4 u_xlat16_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
int u_xlati4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp float u_xlat10_5;
int u_xlati5;
bool u_xlatb5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
vec2 u_xlat9;
mediump vec3 u_xlat16_9;
lowp float u_xlat10_9;
int u_xlati9;
bool u_xlatb9;
mediump vec3 u_xlat16_10;
mediump vec3 u_xlat16_11;
vec2 u_xlat12;
mediump vec3 u_xlat16_12;
lowp float u_xlat10_12;
int u_xlati12;
bool u_xlatb12;
mediump vec3 u_xlat16_13;
mediump vec3 u_xlat16_14;
vec3 u_xlat15;
mediump vec3 u_xlat16_15;
lowp vec3 u_xlat10_15;
int u_xlati15;
bool u_xlatb15;
mediump vec3 u_xlat16_16;
mediump vec3 u_xlat16_17;
vec3 u_xlat18;
mediump vec3 u_xlat16_18;
lowp vec3 u_xlat10_18;
bool u_xlatb18;
mediump vec3 u_xlat16_19;
mediump float u_xlat16_20;
bool u_xlatb21;
vec3 u_xlat24;
mediump vec3 u_xlat16_24;
lowp vec3 u_xlat10_24;
int u_xlati24;
bool u_xlatb24;
vec3 u_xlat25;
mediump vec3 u_xlat16_25;
lowp vec3 u_xlat10_25;
int u_xlati25;
bool u_xlatb25;
vec3 u_xlat29;
mediump vec3 u_xlat16_29;
lowp vec3 u_xlat10_29;
int u_xlati29;
bool u_xlatb29;
vec3 u_xlat32;
mediump vec3 u_xlat16_32;
lowp vec3 u_xlat10_32;
int u_xlati32;
bool u_xlatb32;
vec3 u_xlat35;
mediump vec3 u_xlat16_35;
lowp vec3 u_xlat10_35;
int u_xlati35;
bool u_xlatb35;
vec3 u_xlat38;
lowp vec3 u_xlat10_38;
mediump float u_xlat16_40;
lowp float u_xlat10_62;
lowp float u_xlat10_75;
bool u_xlatb75;
void main()
{
    u_xlat16_0 = (-_UMin) + _UMax;
    u_xlat16_20 = u_xlat16_0 * 0.0250000004;
    u_xlat16_1 = u_xlat16_0 * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_20 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb21 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb21 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1 = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb21) * 0xffffffffu);
    if(u_xlati1 != 0) {
        u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_62 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_40 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_40 = u_xlat16_40 + u_xlat16_40;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_40)) + vs_TEXCOORD3.xyz;
        u_xlat10_4.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_4.xyz = vec3(u_xlat10_62) * u_xlat10_4.xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_Reflectivity);
        u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz + u_xlat16_4.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb4 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat24.x = _Time.y * _Speed;
        u_xlat24.x = fract(u_xlat24.x);
        u_xlat24.x = u_xlat24.x + -0.5;
        u_xlat24.x = abs(u_xlat24.x) * _Magnitude + _MinValue;
        u_xlat24.xyz = u_xlat16_2.xyz * u_xlat24.xxx;
        u_xlat5.xyz = u_xlat16_2.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb4)) ? u_xlat24.xyz : u_xlat5.xyz;
        u_xlat16_4.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
        u_xlat16_6.xyz = u_xlat16_4.xyz * unity_Lightmap_HDR.xxx;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_7.xyz = u_xlat16_3.xyz * u_xlat16_6.xyz;
        u_xlat16_6.xyz = (-u_xlat16_3.xyz) * u_xlat16_6.xyz + vs_COLOR1.xyz;
        u_xlat16_6.xyz = vs_COLOR1.www * u_xlat16_6.xyz + u_xlat16_7.xyz;
        u_xlat16_4.x = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
        u_xlat16_4.xyz = (-u_xlat16_6.xyz) + u_xlat16_4.xxx;
        u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_4.xyz + u_xlat16_6.xyz;
        u_xlat16_3.xyz = u_xlat16_2.xyz;
        u_xlat16_3.w = _BloomFactor;
        u_xlat16_2.xyz = u_xlat16_2.xyz;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1 == 0) {
        u_xlat16_4.x = u_xlat16_0 * 0.0500000007 + _UMin;
        u_xlat16_4.x = u_xlat16_0 * 0.0250000004 + u_xlat16_4.x;
        u_xlat4.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_4.x;
        u_xlat4.x = u_xlat16_20 * _ScaleTime + u_xlat16_4.x;
        u_xlat4.xy = u_xlat4.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb24 = !!(vs_TEXCOORD0.x>=u_xlat4.y);
#else
        u_xlatb24 = vs_TEXCOORD0.x>=u_xlat4.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(u_xlat4.x>=vs_TEXCOORD0.x);
#else
        u_xlatb4 = u_xlat4.x>=vs_TEXCOORD0.x;
#endif
        u_xlati4 = int(uint(u_xlatb4) * 0xffffffffu & uint(u_xlatb24) * 0xffffffffu);
        if(u_xlati4 != 0) {
            u_xlat10_24.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_5 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_40 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_6.x = u_xlat16_40 + u_xlat16_40;
            u_xlat16_6.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_6.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_25.xyz = texture(_EnvTex, u_xlat16_6.xyz).xyz;
            u_xlat16_5.xyz = vec3(u_xlat10_5) * u_xlat10_25.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Reflectivity);
            u_xlat16_24.xyz = u_xlat10_24.xyz * _Color.xyz + u_xlat16_5.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25.x = _Time.y * _Speed;
            u_xlat25.x = fract(u_xlat25.x);
            u_xlat25.x = u_xlat25.x + -0.5;
            u_xlat25.x = abs(u_xlat25.x) * _Magnitude + _MinValue;
            u_xlat25.xyz = u_xlat16_24.xyz * u_xlat25.xxx;
            u_xlat24.xyz = u_xlat16_24.xyz * vec3(_LightMapIntensity);
            u_xlat16_6.xyz = (bool(u_xlatb5)) ? u_xlat25.xyz : u_xlat24.xyz;
            u_xlat16_24.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_24.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_6.xyz = u_xlat16_6.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_6.xyz * u_xlat16_7.xyz;
            u_xlat16_6.xyz = (-u_xlat16_6.xyz) * u_xlat16_7.xyz + vs_COLOR1.xyz;
            u_xlat16_6.xyz = vs_COLOR1.www * u_xlat16_6.xyz + u_xlat16_8.xyz;
            u_xlat16_24.x = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_24.xyz = (-u_xlat16_6.xyz) + u_xlat16_24.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_24.xyz + u_xlat16_6.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati4;
    } else {
        u_xlati4 = -1;
    //ENDIF
    }
    u_xlati4 = ~u_xlati4;
    u_xlati24 = ~u_xlati1;
    u_xlati4 = int(uint(u_xlati24) & uint(u_xlati4));
    if(u_xlati4 != 0) {
        u_xlat16_5.x = u_xlat16_0 * 0.100000001 + _UMin;
        u_xlat16_5.x = u_xlat16_0 * 0.0250000004 + u_xlat16_5.x;
        u_xlat5.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_5.x;
        u_xlat5.x = u_xlat16_20 * _ScaleTime + u_xlat16_5.x;
        u_xlat5.xy = u_xlat5.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb25 = !!(vs_TEXCOORD0.x>=u_xlat5.y);
#else
        u_xlatb25 = vs_TEXCOORD0.x>=u_xlat5.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb5 = !!(u_xlat5.x>=vs_TEXCOORD0.x);
#else
        u_xlatb5 = u_xlat5.x>=vs_TEXCOORD0.x;
#endif
        u_xlati5 = int(uint(u_xlatb5) * 0xffffffffu & uint(u_xlatb25) * 0xffffffffu);
        if(u_xlati5 != 0) {
            u_xlat10_25.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_9 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_7.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_8.x = u_xlat16_7.x + u_xlat16_7.x;
            u_xlat16_8.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_8.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_29.xyz = texture(_EnvTex, u_xlat16_8.xyz).xyz;
            u_xlat16_9.xyz = vec3(u_xlat10_9) * u_xlat10_29.xyz;
            u_xlat16_9.xyz = u_xlat16_9.xyz * vec3(_Reflectivity);
            u_xlat16_25.xyz = u_xlat10_25.xyz * _Color.xyz + u_xlat16_9.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb9 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb9 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat29.x = _Time.y * _Speed;
            u_xlat29.x = fract(u_xlat29.x);
            u_xlat29.x = u_xlat29.x + -0.5;
            u_xlat29.x = abs(u_xlat29.x) * _Magnitude + _MinValue;
            u_xlat29.xyz = u_xlat16_25.xyz * u_xlat29.xxx;
            u_xlat25.xyz = u_xlat16_25.xyz * vec3(_LightMapIntensity);
            u_xlat16_8.xyz = (bool(u_xlatb9)) ? u_xlat29.xyz : u_xlat25.xyz;
            u_xlat16_25.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_10.xyz = u_xlat16_25.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_8.xyz = u_xlat16_8.xyz * _Color.xyz;
            u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_11.xyz = u_xlat16_8.xyz * u_xlat16_10.xyz;
            u_xlat16_8.xyz = (-u_xlat16_8.xyz) * u_xlat16_10.xyz + vs_COLOR1.xyz;
            u_xlat16_8.xyz = vs_COLOR1.www * u_xlat16_8.xyz + u_xlat16_11.xyz;
            u_xlat16_25.x = dot(u_xlat16_8.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_25.xyz = (-u_xlat16_8.xyz) + u_xlat16_25.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_25.xyz + u_xlat16_8.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati5;
    } else {
        u_xlati5 = -1;
    //ENDIF
    }
    u_xlati5 = ~u_xlati5;
    u_xlati25 = ~u_xlati1;
    u_xlati5 = int(uint(u_xlati25) & uint(u_xlati5));
    if(u_xlati5 != 0) {
        u_xlat16_9.x = u_xlat16_0 * 0.150000006 + _UMin;
        u_xlat16_9.x = u_xlat16_0 * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_20 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb29 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb29 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati9 = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb29) * 0xffffffffu);
        if(u_xlati9 != 0) {
            u_xlat10_29.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_12 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_10.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_11.x = u_xlat16_10.x + u_xlat16_10.x;
            u_xlat16_11.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_11.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_32.xyz = texture(_EnvTex, u_xlat16_11.xyz).xyz;
            u_xlat16_12.xyz = vec3(u_xlat10_12) * u_xlat10_32.xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(_Reflectivity);
            u_xlat16_29.xyz = u_xlat10_29.xyz * _Color.xyz + u_xlat16_12.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb12 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb12 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat32.x = _Time.y * _Speed;
            u_xlat32.x = fract(u_xlat32.x);
            u_xlat32.x = u_xlat32.x + -0.5;
            u_xlat32.x = abs(u_xlat32.x) * _Magnitude + _MinValue;
            u_xlat32.xyz = u_xlat16_29.xyz * u_xlat32.xxx;
            u_xlat29.xyz = u_xlat16_29.xyz * vec3(_LightMapIntensity);
            u_xlat16_11.xyz = (bool(u_xlatb12)) ? u_xlat32.xyz : u_xlat29.xyz;
            u_xlat16_29.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_29.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_11.xyz = u_xlat16_11.xyz * _Color.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_14.xyz = u_xlat16_11.xyz * u_xlat16_13.xyz;
            u_xlat16_11.xyz = (-u_xlat16_11.xyz) * u_xlat16_13.xyz + vs_COLOR1.xyz;
            u_xlat16_11.xyz = vs_COLOR1.www * u_xlat16_11.xyz + u_xlat16_14.xyz;
            u_xlat16_29.x = dot(u_xlat16_11.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_29.xyz = (-u_xlat16_11.xyz) + u_xlat16_29.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_29.xyz + u_xlat16_11.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati9;
    } else {
        u_xlati9 = -1;
    //ENDIF
    }
    u_xlati9 = ~u_xlati9;
    u_xlati29 = ~u_xlati1;
    u_xlati9 = int(uint(u_xlati29) & uint(u_xlati9));
    if(u_xlati9 != 0) {
        u_xlat16_12.x = u_xlat16_0 * 0.200000003 + _UMin;
        u_xlat16_12.x = u_xlat16_0 * 0.0250000004 + u_xlat16_12.x;
        u_xlat12.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_12.x;
        u_xlat12.x = u_xlat16_20 * _ScaleTime + u_xlat16_12.x;
        u_xlat12.xy = u_xlat12.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb32 = !!(vs_TEXCOORD0.x>=u_xlat12.y);
#else
        u_xlatb32 = vs_TEXCOORD0.x>=u_xlat12.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb12 = !!(u_xlat12.x>=vs_TEXCOORD0.x);
#else
        u_xlatb12 = u_xlat12.x>=vs_TEXCOORD0.x;
#endif
        u_xlati12 = int(uint(u_xlatb12) * 0xffffffffu & uint(u_xlatb32) * 0xffffffffu);
        if(u_xlati12 != 0) {
            u_xlat10_32.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_15.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_14.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_14.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_14.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_35.xyz = texture(_EnvTex, u_xlat16_14.xyz).xyz;
            u_xlat16_15.xyz = u_xlat10_15.xxx * u_xlat10_35.xyz;
            u_xlat16_15.xyz = u_xlat16_15.xyz * vec3(_Reflectivity);
            u_xlat16_32.xyz = u_xlat10_32.xyz * _Color.xyz + u_xlat16_15.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb15 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb15 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat35.x = _Time.y * _Speed;
            u_xlat35.x = fract(u_xlat35.x);
            u_xlat35.x = u_xlat35.x + -0.5;
            u_xlat35.x = abs(u_xlat35.x) * _Magnitude + _MinValue;
            u_xlat35.xyz = u_xlat16_32.xyz * u_xlat35.xxx;
            u_xlat32.xyz = u_xlat16_32.xyz * vec3(_LightMapIntensity);
            u_xlat16_14.xyz = (bool(u_xlatb15)) ? u_xlat35.xyz : u_xlat32.xyz;
            u_xlat16_32.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_32.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_14.xyz = u_xlat16_14.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_17.xyz = u_xlat16_14.xyz * u_xlat16_16.xyz;
            u_xlat16_14.xyz = (-u_xlat16_14.xyz) * u_xlat16_16.xyz + vs_COLOR1.xyz;
            u_xlat16_14.xyz = vs_COLOR1.www * u_xlat16_14.xyz + u_xlat16_17.xyz;
            u_xlat16_32.x = dot(u_xlat16_14.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_32.xyz = (-u_xlat16_14.xyz) + u_xlat16_32.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_32.xyz + u_xlat16_14.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati12;
    } else {
        u_xlati12 = -1;
    //ENDIF
    }
    u_xlati12 = ~u_xlati12;
    u_xlati32 = ~u_xlati1;
    u_xlati12 = int(uint(u_xlati32) & uint(u_xlati12));
    if(u_xlati12 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.25 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.300000012 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.349999994 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.400000006 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.450000018 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.5 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.550000012 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.600000024 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.650000036 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.699999988 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.75 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.800000012 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.850000024 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.900000036 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati15 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati15 != 0) {
            u_xlat10_35.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_38.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_35.xyz = u_xlat10_35.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_35.xyz * u_xlat38.xxx;
            u_xlat35.xyz = u_xlat16_35.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb18)) ? u_xlat38.xyz : u_xlat35.xyz;
            u_xlat16_35.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_35.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_35.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_35.xyz = (-u_xlat16_16.xyz) + u_xlat16_35.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_35.xyz + u_xlat16_16.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati15;
    } else {
        u_xlati15 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati15;
    u_xlati35 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati35) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_15.x = u_xlat16_0 * 0.949999988 + _UMin;
        u_xlat16_15.x = u_xlat16_0 * 0.0250000004 + u_xlat16_15.x;
        u_xlat15.y = (-u_xlat16_20) * _ScaleTime + u_xlat16_15.x;
        u_xlat15.x = u_xlat16_20 * _ScaleTime + u_xlat16_15.x;
        u_xlat15.xy = u_xlat15.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb35 = !!(vs_TEXCOORD0.x>=u_xlat15.y);
#else
        u_xlatb35 = vs_TEXCOORD0.x>=u_xlat15.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb15 = !!(u_xlat15.x>=vs_TEXCOORD0.x);
#else
        u_xlatb15 = u_xlat15.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1 = int(uint(u_xlatb15) * 0xffffffffu & uint(u_xlatb35) * 0xffffffffu);
        if(u_xlati1 != 0) {
            u_xlat10_15.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_75 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;
            u_xlat16_16.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_16.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_18.xyz = texture(_EnvTex, u_xlat16_16.xyz).xyz;
            u_xlat16_18.xyz = vec3(u_xlat10_75) * u_xlat10_18.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_15.xyz = u_xlat10_15.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb75 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb75 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat18.x = _Time.y * _Speed;
            u_xlat18.x = fract(u_xlat18.x);
            u_xlat18.x = u_xlat18.x + -0.5;
            u_xlat18.x = abs(u_xlat18.x) * _Magnitude + _MinValue;
            u_xlat18.xyz = u_xlat16_15.xyz * u_xlat18.xxx;
            u_xlat15.xyz = u_xlat16_15.xyz * vec3(_LightMapIntensity);
            u_xlat16_16.xyz = (bool(u_xlatb75)) ? u_xlat18.xyz : u_xlat15.xyz;
            u_xlat16_15.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_17.xyz = u_xlat16_15.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_16.xyz = u_xlat16_16.xyz * _Color.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_19.xyz = u_xlat16_16.xyz * u_xlat16_17.xyz;
            u_xlat16_16.xyz = (-u_xlat16_16.xyz) * u_xlat16_17.xyz + vs_COLOR1.xyz;
            u_xlat16_16.xyz = vs_COLOR1.www * u_xlat16_16.xyz + u_xlat16_19.xyz;
            u_xlat16_15.x = dot(u_xlat16_16.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_15.xyz = (-u_xlat16_16.xyz) + u_xlat16_15.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_15.xyz + u_xlat16_16.xyz;
            SV_Target0.xyz = u_xlat16_2.xyz;
            SV_Target0.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1 != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LUMINANCE" "FOG_HEIGHT" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 _HeigtFogParams;
uniform 	vec4 _HeigtFogRamp;
uniform 	vec4 _HeigtFogColBase;
uniform 	vec4 _HeigtFogColDelta;
uniform 	vec4 _HeigtFogColParams;
uniform 	vec4 _HeigtFogRadialCol;
uniform 	vec4 _Mihoyo_FogColor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec2 u_xlat5;
float u_xlat6;
bool u_xlatb6;
mediump float u_xlat16_9;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat18;
float u_xlat19;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD1.xy = u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat2.y = u_xlat1.y;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat5.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat2.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat5.y = u_xlat16_4.x;
    u_xlat2.z = dot(u_xlat5.xy, u_xlat1.xz);
    vs_TEXCOORD3.xyz = u_xlat2.xyz;
    u_xlat18 = u_xlat0.y * _HeigtFogColParams.x + _HeigtFogColParams.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
    u_xlat16_3 = (-u_xlat18) + 2.0;
    u_xlat16_3 = u_xlat18 * u_xlat16_3;
    u_xlat1.xyz = vec3(u_xlat16_3) * _HeigtFogColDelta.xyz + _HeigtFogColBase.xyz;
    u_xlat2.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol.xyz;
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = u_xlat0.y * _HeigtFogParams.x;
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat12.x = u_xlat0.x + (-_HeigtFogRamp.w);
    u_xlat12.x = u_xlat12.x * _HeigtFogColParams.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat12.x = min(max(u_xlat12.x, 0.0), 1.0);
#else
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
#endif
    u_xlat1.xyz = u_xlat12.xxx * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat12.x = _ProjectionParams.z * 0.999899983;
#ifdef UNITY_ADRENO_ES3
    u_xlatb12 = !!(u_xlat0.x>=u_xlat12.x);
#else
    u_xlatb12 = u_xlat0.x>=u_xlat12.x;
#endif
    u_xlat18 = u_xlat0.x * _HeigtFogParams.z + _HeigtFogParams.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat19 = (-u_xlat18) + 2.0;
    u_xlat18 = u_xlat18 * u_xlat19;
    u_xlat19 = u_xlat18 * _HeigtFogColDelta.w;
    u_xlat12.x = (u_xlatb12) ? u_xlat19 : u_xlat18;
    u_xlat12.x = log2(u_xlat12.x);
    u_xlat12.x = u_xlat12.x * _Mihoyo_FogColor.w;
    u_xlat12.x = exp2(u_xlat12.x);
    u_xlat12.x = min(u_xlat12.x, _HeigtFogColBase.w);
    u_xlat1.xyz = u_xlat12.xxx * u_xlat1.xyz;
    u_xlat18 = u_xlat6 * -1.44269502;
    u_xlat12.y = exp2(u_xlat18);
    u_xlat12.xy = (-u_xlat12.xy) + vec2(1.0, 1.0);
    u_xlat18 = u_xlat12.y / u_xlat6;
#ifdef UNITY_ADRENO_ES3
    u_xlatb6 = !!(0.00999999978<abs(u_xlat6));
#else
    u_xlatb6 = 0.00999999978<abs(u_xlat6);
#endif
    u_xlat16_3 = (u_xlatb6) ? u_xlat18 : 1.0;
    u_xlat6 = u_xlat0.x * _HeigtFogParams.y;
    u_xlat0.x = u_xlat0.x * _HeigtFogRamp.x + _HeigtFogRamp.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat16_3 = u_xlat6 * u_xlat16_3;
    u_xlat16_3 = exp2((-u_xlat16_3));
    u_xlat16_3 = min(u_xlat16_3, 1.0);
    u_xlat16_3 = (-u_xlat16_3) + 1.0;
    u_xlat16_9 = (-u_xlat0.x) + 2.0;
    u_xlat16_9 = u_xlat0.x * u_xlat16_9;
    u_xlat0.x = u_xlat16_9 * _HeigtFogRamp.z + (-_HeigtFogRamp.z);
    u_xlat0.x = u_xlat0.x + 1.0;
    u_xlat16_3 = u_xlat0.x * u_xlat16_3;
    u_xlat0.x = min(u_xlat16_3, _HeigtFogColBase.w);
    u_xlat6 = (-u_xlat0.x) + 1.0;
    u_xlat1.xyz = vec3(u_xlat6) * u_xlat1.xyz;
    u_xlat2.w = u_xlat6 * u_xlat12.x;
    u_xlat2.xyz = _Mihoyo_FogColor.xyz * u_xlat0.xxx + u_xlat1.xyz;
    vs_COLOR1 = u_xlat2;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform 	mediump float _LumiFactor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform mediump sampler2D unity_Lightmap;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump float u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
int u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp vec3 u_xlat10_2;
mediump vec4 u_xlat16_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
int u_xlati4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp float u_xlat10_5;
int u_xlati5;
bool u_xlatb5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
vec2 u_xlat8;
mediump float u_xlat16_8;
int u_xlati8;
bool u_xlatb8;
mediump vec3 u_xlat16_9;
lowp float u_xlat10_9;
int u_xlati9;
bool u_xlatb9;
mediump vec3 u_xlat16_10;
vec2 u_xlat11;
mediump float u_xlat16_11;
int u_xlati11;
bool u_xlatb11;
mediump vec3 u_xlat16_12;
lowp float u_xlat10_12;
int u_xlati12;
bool u_xlatb12;
mediump vec3 u_xlat16_13;
vec2 u_xlat14;
mediump float u_xlat16_14;
int u_xlati14;
bool u_xlatb14;
mediump vec3 u_xlat16_15;
lowp float u_xlat10_15;
int u_xlati15;
bool u_xlatb15;
mediump vec3 u_xlat16_16;
vec3 u_xlat17;
mediump vec3 u_xlat16_17;
lowp vec3 u_xlat10_17;
int u_xlati17;
bool u_xlatb17;
vec3 u_xlat18;
mediump vec3 u_xlat16_18;
lowp vec3 u_xlat10_18;
bool u_xlatb18;
mediump float u_xlat16_19;
bool u_xlatb20;
vec3 u_xlat23;
mediump vec3 u_xlat16_23;
lowp vec3 u_xlat10_23;
bool u_xlatb23;
vec3 u_xlat24;
lowp vec3 u_xlat10_24;
int u_xlati24;
vec3 u_xlat27;
mediump vec3 u_xlat16_27;
lowp vec3 u_xlat10_27;
bool u_xlatb27;
vec3 u_xlat28;
lowp vec3 u_xlat10_28;
int u_xlati28;
vec3 u_xlat30;
mediump vec3 u_xlat16_30;
lowp vec3 u_xlat10_30;
bool u_xlatb30;
vec3 u_xlat31;
lowp vec3 u_xlat10_31;
int u_xlati31;
vec3 u_xlat33;
mediump vec3 u_xlat16_33;
lowp vec3 u_xlat10_33;
bool u_xlatb33;
vec3 u_xlat34;
lowp vec3 u_xlat10_34;
int u_xlati34;
vec3 u_xlat36;
mediump vec3 u_xlat16_36;
lowp vec3 u_xlat10_36;
int u_xlati36;
bool u_xlatb36;
vec3 u_xlat37;
lowp vec3 u_xlat10_37;
mediump float u_xlat16_38;
lowp float u_xlat10_59;
mediump float u_xlat16_63;
mediump float u_xlat16_64;
mediump float u_xlat16_67;
mediump float u_xlat16_70;
lowp float u_xlat10_74;
bool u_xlatb74;
void main()
{
    u_xlat16_0 = (-_UMin) + _UMax;
    u_xlat16_19 = u_xlat16_0 * 0.0250000004;
    u_xlat16_1 = u_xlat16_0 * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_19 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb20 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb20 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1 = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb20) * 0xffffffffu);
    if(u_xlati1 != 0) {
        u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_59 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_38 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_38 = u_xlat16_38 + u_xlat16_38;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_38)) + vs_TEXCOORD3.xyz;
        u_xlat10_4.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_4.xyz = vec3(u_xlat10_59) * u_xlat10_4.xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_Reflectivity);
        u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz + u_xlat16_4.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb4 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat23.x = _Time.y * _Speed;
        u_xlat23.x = fract(u_xlat23.x);
        u_xlat23.x = u_xlat23.x + -0.5;
        u_xlat23.x = abs(u_xlat23.x) * _Magnitude + _MinValue;
        u_xlat23.xyz = u_xlat16_2.xyz * u_xlat23.xxx;
        u_xlat5.xyz = u_xlat16_2.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb4)) ? u_xlat23.xyz : u_xlat5.xyz;
        u_xlat16_4.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
        u_xlat16_6.xyz = u_xlat16_4.xyz * unity_Lightmap_HDR.xxx;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_6.xyz = u_xlat16_3.xyz * u_xlat16_6.xyz;
        u_xlat16_38 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
        u_xlat16_38 = min(max(u_xlat16_38, 0.0), 1.0);
#else
        u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
#endif
        u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(u_xlat16_38) + vs_COLOR1.xyz;
        u_xlat16_4.x = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
        u_xlat16_4.xyz = (-u_xlat16_6.xyz) + u_xlat16_4.xxx;
        u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_4.xyz + u_xlat16_6.xyz;
        u_xlat16_3.xyz = u_xlat16_2.xyz;
        u_xlat16_3.w = _BloomFactor;
        u_xlat16_2.xyz = u_xlat16_2.xyz;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1 == 0) {
        u_xlat16_4.x = u_xlat16_0 * 0.0500000007 + _UMin;
        u_xlat16_4.x = u_xlat16_0 * 0.0250000004 + u_xlat16_4.x;
        u_xlat4.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_4.x;
        u_xlat4.x = u_xlat16_19 * _ScaleTime + u_xlat16_4.x;
        u_xlat4.xy = u_xlat4.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb23 = !!(vs_TEXCOORD0.x>=u_xlat4.y);
#else
        u_xlatb23 = vs_TEXCOORD0.x>=u_xlat4.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(u_xlat4.x>=vs_TEXCOORD0.x);
#else
        u_xlatb4 = u_xlat4.x>=vs_TEXCOORD0.x;
#endif
        u_xlati4 = int(uint(u_xlatb4) * 0xffffffffu & uint(u_xlatb23) * 0xffffffffu);
        if(u_xlati4 != 0) {
            u_xlat10_23.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_5 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_38 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_6.x = u_xlat16_38 + u_xlat16_38;
            u_xlat16_6.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_6.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_24.xyz = texture(_EnvTex, u_xlat16_6.xyz).xyz;
            u_xlat16_5.xyz = vec3(u_xlat10_5) * u_xlat10_24.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Reflectivity);
            u_xlat16_23.xyz = u_xlat10_23.xyz * _Color.xyz + u_xlat16_5.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat24.x = _Time.y * _Speed;
            u_xlat24.x = fract(u_xlat24.x);
            u_xlat24.x = u_xlat24.x + -0.5;
            u_xlat24.x = abs(u_xlat24.x) * _Magnitude + _MinValue;
            u_xlat24.xyz = u_xlat16_23.xyz * u_xlat24.xxx;
            u_xlat23.xyz = u_xlat16_23.xyz * vec3(_LightMapIntensity);
            u_xlat16_6.xyz = (bool(u_xlatb5)) ? u_xlat24.xyz : u_xlat23.xyz;
            u_xlat16_23.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_23.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_6.xyz = u_xlat16_6.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_7.xyz;
            u_xlat16_63 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_63 = min(max(u_xlat16_63, 0.0), 1.0);
#else
            u_xlat16_63 = clamp(u_xlat16_63, 0.0, 1.0);
#endif
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(u_xlat16_63) + vs_COLOR1.xyz;
            u_xlat16_23.x = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_5.xyz = (-u_xlat16_6.xyz) + u_xlat16_23.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_5.xyz + u_xlat16_6.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati4;
    } else {
        u_xlati4 = -1;
    //ENDIF
    }
    u_xlati5 = ~u_xlati4;
    u_xlati24 = ~u_xlati1;
    u_xlati5 = int(uint(u_xlati24) & uint(u_xlati5));
    if(u_xlati5 != 0) {
        u_xlat16_8 = u_xlat16_0 * 0.100000001 + _UMin;
        u_xlat16_8 = u_xlat16_0 * 0.0250000004 + u_xlat16_8;
        u_xlat8.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_8;
        u_xlat8.x = u_xlat16_19 * _ScaleTime + u_xlat16_8;
        u_xlat8.xy = u_xlat8.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb27 = !!(vs_TEXCOORD0.x>=u_xlat8.y);
#else
        u_xlatb27 = vs_TEXCOORD0.x>=u_xlat8.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb8 = !!(u_xlat8.x>=vs_TEXCOORD0.x);
#else
        u_xlatb8 = u_xlat8.x>=vs_TEXCOORD0.x;
#endif
        u_xlati8 = int(uint(u_xlatb8) * 0xffffffffu & uint(u_xlatb27) * 0xffffffffu);
        if(u_xlati8 != 0) {
            u_xlat10_27.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_9 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_6.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_7.x = u_xlat16_6.x + u_xlat16_6.x;
            u_xlat16_7.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_7.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_28.xyz = texture(_EnvTex, u_xlat16_7.xyz).xyz;
            u_xlat16_9.xyz = vec3(u_xlat10_9) * u_xlat10_28.xyz;
            u_xlat16_9.xyz = u_xlat16_9.xyz * vec3(_Reflectivity);
            u_xlat16_27.xyz = u_xlat10_27.xyz * _Color.xyz + u_xlat16_9.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb9 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb9 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28.x = _Time.y * _Speed;
            u_xlat28.x = fract(u_xlat28.x);
            u_xlat28.x = u_xlat28.x + -0.5;
            u_xlat28.x = abs(u_xlat28.x) * _Magnitude + _MinValue;
            u_xlat28.xyz = u_xlat16_27.xyz * u_xlat28.xxx;
            u_xlat27.xyz = u_xlat16_27.xyz * vec3(_LightMapIntensity);
            u_xlat16_7.xyz = (bool(u_xlatb9)) ? u_xlat28.xyz : u_xlat27.xyz;
            u_xlat16_27.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_10.xyz = u_xlat16_27.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_7.xyz = u_xlat16_7.xyz * _Color.xyz;
            u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat16_10.xyz;
            u_xlat16_64 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_64 = min(max(u_xlat16_64, 0.0), 1.0);
#else
            u_xlat16_64 = clamp(u_xlat16_64, 0.0, 1.0);
#endif
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(u_xlat16_64) + vs_COLOR1.xyz;
            u_xlat16_27.x = dot(u_xlat16_7.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_9.xyz = (-u_xlat16_7.xyz) + u_xlat16_27.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_9.xyz + u_xlat16_7.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati8;
    } else {
        u_xlati8 = -1;
    //ENDIF
    }
    u_xlati9 = ~u_xlati8;
    u_xlati28 = ~u_xlati1;
    u_xlati9 = int(uint(u_xlati28) & uint(u_xlati9));
    if(u_xlati9 != 0) {
        u_xlat16_11 = u_xlat16_0 * 0.150000006 + _UMin;
        u_xlat16_11 = u_xlat16_0 * 0.0250000004 + u_xlat16_11;
        u_xlat11.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_11;
        u_xlat11.x = u_xlat16_19 * _ScaleTime + u_xlat16_11;
        u_xlat11.xy = u_xlat11.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb30 = !!(vs_TEXCOORD0.x>=u_xlat11.y);
#else
        u_xlatb30 = vs_TEXCOORD0.x>=u_xlat11.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb11 = !!(u_xlat11.x>=vs_TEXCOORD0.x);
#else
        u_xlatb11 = u_xlat11.x>=vs_TEXCOORD0.x;
#endif
        u_xlati11 = int(uint(u_xlatb11) * 0xffffffffu & uint(u_xlatb30) * 0xffffffffu);
        if(u_xlati11 != 0) {
            u_xlat10_30.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_12 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_7.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_10.x = u_xlat16_7.x + u_xlat16_7.x;
            u_xlat16_10.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_10.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_31.xyz = texture(_EnvTex, u_xlat16_10.xyz).xyz;
            u_xlat16_12.xyz = vec3(u_xlat10_12) * u_xlat10_31.xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(_Reflectivity);
            u_xlat16_30.xyz = u_xlat10_30.xyz * _Color.xyz + u_xlat16_12.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb12 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb12 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat31.x = _Time.y * _Speed;
            u_xlat31.x = fract(u_xlat31.x);
            u_xlat31.x = u_xlat31.x + -0.5;
            u_xlat31.x = abs(u_xlat31.x) * _Magnitude + _MinValue;
            u_xlat31.xyz = u_xlat16_30.xyz * u_xlat31.xxx;
            u_xlat30.xyz = u_xlat16_30.xyz * vec3(_LightMapIntensity);
            u_xlat16_10.xyz = (bool(u_xlatb12)) ? u_xlat31.xyz : u_xlat30.xyz;
            u_xlat16_30.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_30.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_10.xyz = u_xlat16_10.xyz * _Color.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_10.xyz = u_xlat16_10.xyz * u_xlat16_13.xyz;
            u_xlat16_67 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_67 = min(max(u_xlat16_67, 0.0), 1.0);
#else
            u_xlat16_67 = clamp(u_xlat16_67, 0.0, 1.0);
#endif
            u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(u_xlat16_67) + vs_COLOR1.xyz;
            u_xlat16_30.x = dot(u_xlat16_10.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_12.xyz = (-u_xlat16_10.xyz) + u_xlat16_30.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_12.xyz + u_xlat16_10.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati11;
    } else {
        u_xlati11 = -1;
    //ENDIF
    }
    u_xlati12 = ~u_xlati11;
    u_xlati31 = ~u_xlati1;
    u_xlati12 = int(uint(u_xlati31) & uint(u_xlati12));
    if(u_xlati12 != 0) {
        u_xlat16_14 = u_xlat16_0 * 0.200000003 + _UMin;
        u_xlat16_14 = u_xlat16_0 * 0.0250000004 + u_xlat16_14;
        u_xlat14.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_14;
        u_xlat14.x = u_xlat16_19 * _ScaleTime + u_xlat16_14;
        u_xlat14.xy = u_xlat14.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb33 = !!(vs_TEXCOORD0.x>=u_xlat14.y);
#else
        u_xlatb33 = vs_TEXCOORD0.x>=u_xlat14.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb14 = !!(u_xlat14.x>=vs_TEXCOORD0.x);
#else
        u_xlatb14 = u_xlat14.x>=vs_TEXCOORD0.x;
#endif
        u_xlati14 = int(uint(u_xlatb14) * 0xffffffffu & uint(u_xlatb33) * 0xffffffffu);
        if(u_xlati14 != 0) {
            u_xlat10_33.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_15 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_10.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_10.x + u_xlat16_10.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_34.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_15.xyz = vec3(u_xlat10_15) * u_xlat10_34.xyz;
            u_xlat16_15.xyz = u_xlat16_15.xyz * vec3(_Reflectivity);
            u_xlat16_33.xyz = u_xlat10_33.xyz * _Color.xyz + u_xlat16_15.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb15 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb15 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat34.x = _Time.y * _Speed;
            u_xlat34.x = fract(u_xlat34.x);
            u_xlat34.x = u_xlat34.x + -0.5;
            u_xlat34.x = abs(u_xlat34.x) * _Magnitude + _MinValue;
            u_xlat34.xyz = u_xlat16_33.xyz * u_xlat34.xxx;
            u_xlat33.xyz = u_xlat16_33.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb15)) ? u_xlat34.xyz : u_xlat33.xyz;
            u_xlat16_33.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_33.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_33.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_15.xyz = (-u_xlat16_13.xyz) + u_xlat16_33.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_15.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati14;
    } else {
        u_xlati14 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati14;
    u_xlati34 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati34) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.25 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.300000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.349999994 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.400000006 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.450000018 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.5 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.550000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.600000024 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.650000036 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.699999988 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.75 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.800000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.850000024 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.900000036 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.949999988 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati1 != 0) {
            u_xlat10_17.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_74 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_18.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = vec3(u_xlat10_74) * u_xlat10_18.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_17.xyz = u_xlat10_17.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb74 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb74 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat18.x = _Time.y * _Speed;
            u_xlat18.x = fract(u_xlat18.x);
            u_xlat18.x = u_xlat18.x + -0.5;
            u_xlat18.x = abs(u_xlat18.x) * _Magnitude + _MinValue;
            u_xlat18.xyz = u_xlat16_17.xyz * u_xlat18.xxx;
            u_xlat17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb74)) ? u_xlat18.xyz : u_xlat17.xyz;
            u_xlat16_17.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_17.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_17.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_17.xyz = (-u_xlat16_13.xyz) + u_xlat16_17.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_17.xyz + u_xlat16_13.xyz;
            SV_Target0.xyz = u_xlat16_2.xyz;
            SV_Target0.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1 != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LUMINANCE" "FOG_HEIGHT" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 _HeigtFogParams;
uniform 	vec4 _HeigtFogRamp;
uniform 	vec4 _HeigtFogColBase;
uniform 	vec4 _HeigtFogColDelta;
uniform 	vec4 _HeigtFogColParams;
uniform 	vec4 _HeigtFogRadialCol;
uniform 	vec4 _Mihoyo_FogColor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec2 u_xlat5;
float u_xlat6;
bool u_xlatb6;
mediump float u_xlat16_9;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat18;
float u_xlat19;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD1.xy = u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat2.y = u_xlat1.y;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat5.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat2.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat5.y = u_xlat16_4.x;
    u_xlat2.z = dot(u_xlat5.xy, u_xlat1.xz);
    vs_TEXCOORD3.xyz = u_xlat2.xyz;
    u_xlat18 = u_xlat0.y * _HeigtFogColParams.x + _HeigtFogColParams.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
    u_xlat16_3 = (-u_xlat18) + 2.0;
    u_xlat16_3 = u_xlat18 * u_xlat16_3;
    u_xlat1.xyz = vec3(u_xlat16_3) * _HeigtFogColDelta.xyz + _HeigtFogColBase.xyz;
    u_xlat2.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol.xyz;
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = u_xlat0.y * _HeigtFogParams.x;
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat12.x = u_xlat0.x + (-_HeigtFogRamp.w);
    u_xlat12.x = u_xlat12.x * _HeigtFogColParams.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat12.x = min(max(u_xlat12.x, 0.0), 1.0);
#else
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
#endif
    u_xlat1.xyz = u_xlat12.xxx * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat12.x = _ProjectionParams.z * 0.999899983;
#ifdef UNITY_ADRENO_ES3
    u_xlatb12 = !!(u_xlat0.x>=u_xlat12.x);
#else
    u_xlatb12 = u_xlat0.x>=u_xlat12.x;
#endif
    u_xlat18 = u_xlat0.x * _HeigtFogParams.z + _HeigtFogParams.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat19 = (-u_xlat18) + 2.0;
    u_xlat18 = u_xlat18 * u_xlat19;
    u_xlat19 = u_xlat18 * _HeigtFogColDelta.w;
    u_xlat12.x = (u_xlatb12) ? u_xlat19 : u_xlat18;
    u_xlat12.x = log2(u_xlat12.x);
    u_xlat12.x = u_xlat12.x * _Mihoyo_FogColor.w;
    u_xlat12.x = exp2(u_xlat12.x);
    u_xlat12.x = min(u_xlat12.x, _HeigtFogColBase.w);
    u_xlat1.xyz = u_xlat12.xxx * u_xlat1.xyz;
    u_xlat18 = u_xlat6 * -1.44269502;
    u_xlat12.y = exp2(u_xlat18);
    u_xlat12.xy = (-u_xlat12.xy) + vec2(1.0, 1.0);
    u_xlat18 = u_xlat12.y / u_xlat6;
#ifdef UNITY_ADRENO_ES3
    u_xlatb6 = !!(0.00999999978<abs(u_xlat6));
#else
    u_xlatb6 = 0.00999999978<abs(u_xlat6);
#endif
    u_xlat16_3 = (u_xlatb6) ? u_xlat18 : 1.0;
    u_xlat6 = u_xlat0.x * _HeigtFogParams.y;
    u_xlat0.x = u_xlat0.x * _HeigtFogRamp.x + _HeigtFogRamp.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat16_3 = u_xlat6 * u_xlat16_3;
    u_xlat16_3 = exp2((-u_xlat16_3));
    u_xlat16_3 = min(u_xlat16_3, 1.0);
    u_xlat16_3 = (-u_xlat16_3) + 1.0;
    u_xlat16_9 = (-u_xlat0.x) + 2.0;
    u_xlat16_9 = u_xlat0.x * u_xlat16_9;
    u_xlat0.x = u_xlat16_9 * _HeigtFogRamp.z + (-_HeigtFogRamp.z);
    u_xlat0.x = u_xlat0.x + 1.0;
    u_xlat16_3 = u_xlat0.x * u_xlat16_3;
    u_xlat0.x = min(u_xlat16_3, _HeigtFogColBase.w);
    u_xlat6 = (-u_xlat0.x) + 1.0;
    u_xlat1.xyz = vec3(u_xlat6) * u_xlat1.xyz;
    u_xlat2.w = u_xlat6 * u_xlat12.x;
    u_xlat2.xyz = _Mihoyo_FogColor.xyz * u_xlat0.xxx + u_xlat1.xyz;
    vs_COLOR1 = u_xlat2;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform 	mediump float _LumiFactor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform mediump sampler2D unity_Lightmap;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump float u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
int u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp vec3 u_xlat10_2;
mediump vec4 u_xlat16_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
int u_xlati4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp float u_xlat10_5;
int u_xlati5;
bool u_xlatb5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
vec2 u_xlat8;
mediump float u_xlat16_8;
int u_xlati8;
bool u_xlatb8;
mediump vec3 u_xlat16_9;
lowp float u_xlat10_9;
int u_xlati9;
bool u_xlatb9;
mediump vec3 u_xlat16_10;
vec2 u_xlat11;
mediump float u_xlat16_11;
int u_xlati11;
bool u_xlatb11;
mediump vec3 u_xlat16_12;
lowp float u_xlat10_12;
int u_xlati12;
bool u_xlatb12;
mediump vec3 u_xlat16_13;
vec2 u_xlat14;
mediump float u_xlat16_14;
int u_xlati14;
bool u_xlatb14;
mediump vec3 u_xlat16_15;
lowp float u_xlat10_15;
int u_xlati15;
bool u_xlatb15;
mediump vec3 u_xlat16_16;
vec3 u_xlat17;
mediump vec3 u_xlat16_17;
lowp vec3 u_xlat10_17;
int u_xlati17;
bool u_xlatb17;
vec3 u_xlat18;
mediump vec3 u_xlat16_18;
lowp vec3 u_xlat10_18;
bool u_xlatb18;
mediump float u_xlat16_19;
bool u_xlatb20;
vec3 u_xlat23;
mediump vec3 u_xlat16_23;
lowp vec3 u_xlat10_23;
bool u_xlatb23;
vec3 u_xlat24;
lowp vec3 u_xlat10_24;
int u_xlati24;
vec3 u_xlat27;
mediump vec3 u_xlat16_27;
lowp vec3 u_xlat10_27;
bool u_xlatb27;
vec3 u_xlat28;
lowp vec3 u_xlat10_28;
int u_xlati28;
vec3 u_xlat30;
mediump vec3 u_xlat16_30;
lowp vec3 u_xlat10_30;
bool u_xlatb30;
vec3 u_xlat31;
lowp vec3 u_xlat10_31;
int u_xlati31;
vec3 u_xlat33;
mediump vec3 u_xlat16_33;
lowp vec3 u_xlat10_33;
bool u_xlatb33;
vec3 u_xlat34;
lowp vec3 u_xlat10_34;
int u_xlati34;
vec3 u_xlat36;
mediump vec3 u_xlat16_36;
lowp vec3 u_xlat10_36;
int u_xlati36;
bool u_xlatb36;
vec3 u_xlat37;
lowp vec3 u_xlat10_37;
mediump float u_xlat16_38;
lowp float u_xlat10_59;
mediump float u_xlat16_63;
mediump float u_xlat16_64;
mediump float u_xlat16_67;
mediump float u_xlat16_70;
lowp float u_xlat10_74;
bool u_xlatb74;
void main()
{
    u_xlat16_0 = (-_UMin) + _UMax;
    u_xlat16_19 = u_xlat16_0 * 0.0250000004;
    u_xlat16_1 = u_xlat16_0 * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_19 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb20 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb20 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1 = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb20) * 0xffffffffu);
    if(u_xlati1 != 0) {
        u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_59 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_38 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_38 = u_xlat16_38 + u_xlat16_38;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_38)) + vs_TEXCOORD3.xyz;
        u_xlat10_4.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_4.xyz = vec3(u_xlat10_59) * u_xlat10_4.xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_Reflectivity);
        u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz + u_xlat16_4.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb4 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat23.x = _Time.y * _Speed;
        u_xlat23.x = fract(u_xlat23.x);
        u_xlat23.x = u_xlat23.x + -0.5;
        u_xlat23.x = abs(u_xlat23.x) * _Magnitude + _MinValue;
        u_xlat23.xyz = u_xlat16_2.xyz * u_xlat23.xxx;
        u_xlat5.xyz = u_xlat16_2.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb4)) ? u_xlat23.xyz : u_xlat5.xyz;
        u_xlat16_4.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
        u_xlat16_6.xyz = u_xlat16_4.xyz * unity_Lightmap_HDR.xxx;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_6.xyz = u_xlat16_3.xyz * u_xlat16_6.xyz;
        u_xlat16_38 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
        u_xlat16_38 = min(max(u_xlat16_38, 0.0), 1.0);
#else
        u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
#endif
        u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(u_xlat16_38) + vs_COLOR1.xyz;
        u_xlat16_4.x = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
        u_xlat16_4.xyz = (-u_xlat16_6.xyz) + u_xlat16_4.xxx;
        u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_4.xyz + u_xlat16_6.xyz;
        u_xlat16_3.xyz = u_xlat16_2.xyz;
        u_xlat16_3.w = _BloomFactor;
        u_xlat16_2.xyz = u_xlat16_2.xyz;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1 == 0) {
        u_xlat16_4.x = u_xlat16_0 * 0.0500000007 + _UMin;
        u_xlat16_4.x = u_xlat16_0 * 0.0250000004 + u_xlat16_4.x;
        u_xlat4.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_4.x;
        u_xlat4.x = u_xlat16_19 * _ScaleTime + u_xlat16_4.x;
        u_xlat4.xy = u_xlat4.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb23 = !!(vs_TEXCOORD0.x>=u_xlat4.y);
#else
        u_xlatb23 = vs_TEXCOORD0.x>=u_xlat4.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(u_xlat4.x>=vs_TEXCOORD0.x);
#else
        u_xlatb4 = u_xlat4.x>=vs_TEXCOORD0.x;
#endif
        u_xlati4 = int(uint(u_xlatb4) * 0xffffffffu & uint(u_xlatb23) * 0xffffffffu);
        if(u_xlati4 != 0) {
            u_xlat10_23.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_5 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_38 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_6.x = u_xlat16_38 + u_xlat16_38;
            u_xlat16_6.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_6.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_24.xyz = texture(_EnvTex, u_xlat16_6.xyz).xyz;
            u_xlat16_5.xyz = vec3(u_xlat10_5) * u_xlat10_24.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Reflectivity);
            u_xlat16_23.xyz = u_xlat10_23.xyz * _Color.xyz + u_xlat16_5.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat24.x = _Time.y * _Speed;
            u_xlat24.x = fract(u_xlat24.x);
            u_xlat24.x = u_xlat24.x + -0.5;
            u_xlat24.x = abs(u_xlat24.x) * _Magnitude + _MinValue;
            u_xlat24.xyz = u_xlat16_23.xyz * u_xlat24.xxx;
            u_xlat23.xyz = u_xlat16_23.xyz * vec3(_LightMapIntensity);
            u_xlat16_6.xyz = (bool(u_xlatb5)) ? u_xlat24.xyz : u_xlat23.xyz;
            u_xlat16_23.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_23.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_6.xyz = u_xlat16_6.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_7.xyz;
            u_xlat16_63 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_63 = min(max(u_xlat16_63, 0.0), 1.0);
#else
            u_xlat16_63 = clamp(u_xlat16_63, 0.0, 1.0);
#endif
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(u_xlat16_63) + vs_COLOR1.xyz;
            u_xlat16_23.x = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_5.xyz = (-u_xlat16_6.xyz) + u_xlat16_23.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_5.xyz + u_xlat16_6.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati4;
    } else {
        u_xlati4 = -1;
    //ENDIF
    }
    u_xlati5 = ~u_xlati4;
    u_xlati24 = ~u_xlati1;
    u_xlati5 = int(uint(u_xlati24) & uint(u_xlati5));
    if(u_xlati5 != 0) {
        u_xlat16_8 = u_xlat16_0 * 0.100000001 + _UMin;
        u_xlat16_8 = u_xlat16_0 * 0.0250000004 + u_xlat16_8;
        u_xlat8.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_8;
        u_xlat8.x = u_xlat16_19 * _ScaleTime + u_xlat16_8;
        u_xlat8.xy = u_xlat8.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb27 = !!(vs_TEXCOORD0.x>=u_xlat8.y);
#else
        u_xlatb27 = vs_TEXCOORD0.x>=u_xlat8.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb8 = !!(u_xlat8.x>=vs_TEXCOORD0.x);
#else
        u_xlatb8 = u_xlat8.x>=vs_TEXCOORD0.x;
#endif
        u_xlati8 = int(uint(u_xlatb8) * 0xffffffffu & uint(u_xlatb27) * 0xffffffffu);
        if(u_xlati8 != 0) {
            u_xlat10_27.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_9 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_6.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_7.x = u_xlat16_6.x + u_xlat16_6.x;
            u_xlat16_7.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_7.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_28.xyz = texture(_EnvTex, u_xlat16_7.xyz).xyz;
            u_xlat16_9.xyz = vec3(u_xlat10_9) * u_xlat10_28.xyz;
            u_xlat16_9.xyz = u_xlat16_9.xyz * vec3(_Reflectivity);
            u_xlat16_27.xyz = u_xlat10_27.xyz * _Color.xyz + u_xlat16_9.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb9 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb9 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28.x = _Time.y * _Speed;
            u_xlat28.x = fract(u_xlat28.x);
            u_xlat28.x = u_xlat28.x + -0.5;
            u_xlat28.x = abs(u_xlat28.x) * _Magnitude + _MinValue;
            u_xlat28.xyz = u_xlat16_27.xyz * u_xlat28.xxx;
            u_xlat27.xyz = u_xlat16_27.xyz * vec3(_LightMapIntensity);
            u_xlat16_7.xyz = (bool(u_xlatb9)) ? u_xlat28.xyz : u_xlat27.xyz;
            u_xlat16_27.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_10.xyz = u_xlat16_27.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_7.xyz = u_xlat16_7.xyz * _Color.xyz;
            u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat16_10.xyz;
            u_xlat16_64 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_64 = min(max(u_xlat16_64, 0.0), 1.0);
#else
            u_xlat16_64 = clamp(u_xlat16_64, 0.0, 1.0);
#endif
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(u_xlat16_64) + vs_COLOR1.xyz;
            u_xlat16_27.x = dot(u_xlat16_7.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_9.xyz = (-u_xlat16_7.xyz) + u_xlat16_27.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_9.xyz + u_xlat16_7.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati8;
    } else {
        u_xlati8 = -1;
    //ENDIF
    }
    u_xlati9 = ~u_xlati8;
    u_xlati28 = ~u_xlati1;
    u_xlati9 = int(uint(u_xlati28) & uint(u_xlati9));
    if(u_xlati9 != 0) {
        u_xlat16_11 = u_xlat16_0 * 0.150000006 + _UMin;
        u_xlat16_11 = u_xlat16_0 * 0.0250000004 + u_xlat16_11;
        u_xlat11.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_11;
        u_xlat11.x = u_xlat16_19 * _ScaleTime + u_xlat16_11;
        u_xlat11.xy = u_xlat11.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb30 = !!(vs_TEXCOORD0.x>=u_xlat11.y);
#else
        u_xlatb30 = vs_TEXCOORD0.x>=u_xlat11.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb11 = !!(u_xlat11.x>=vs_TEXCOORD0.x);
#else
        u_xlatb11 = u_xlat11.x>=vs_TEXCOORD0.x;
#endif
        u_xlati11 = int(uint(u_xlatb11) * 0xffffffffu & uint(u_xlatb30) * 0xffffffffu);
        if(u_xlati11 != 0) {
            u_xlat10_30.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_12 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_7.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_10.x = u_xlat16_7.x + u_xlat16_7.x;
            u_xlat16_10.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_10.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_31.xyz = texture(_EnvTex, u_xlat16_10.xyz).xyz;
            u_xlat16_12.xyz = vec3(u_xlat10_12) * u_xlat10_31.xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(_Reflectivity);
            u_xlat16_30.xyz = u_xlat10_30.xyz * _Color.xyz + u_xlat16_12.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb12 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb12 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat31.x = _Time.y * _Speed;
            u_xlat31.x = fract(u_xlat31.x);
            u_xlat31.x = u_xlat31.x + -0.5;
            u_xlat31.x = abs(u_xlat31.x) * _Magnitude + _MinValue;
            u_xlat31.xyz = u_xlat16_30.xyz * u_xlat31.xxx;
            u_xlat30.xyz = u_xlat16_30.xyz * vec3(_LightMapIntensity);
            u_xlat16_10.xyz = (bool(u_xlatb12)) ? u_xlat31.xyz : u_xlat30.xyz;
            u_xlat16_30.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_30.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_10.xyz = u_xlat16_10.xyz * _Color.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_10.xyz = u_xlat16_10.xyz * u_xlat16_13.xyz;
            u_xlat16_67 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_67 = min(max(u_xlat16_67, 0.0), 1.0);
#else
            u_xlat16_67 = clamp(u_xlat16_67, 0.0, 1.0);
#endif
            u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(u_xlat16_67) + vs_COLOR1.xyz;
            u_xlat16_30.x = dot(u_xlat16_10.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_12.xyz = (-u_xlat16_10.xyz) + u_xlat16_30.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_12.xyz + u_xlat16_10.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati11;
    } else {
        u_xlati11 = -1;
    //ENDIF
    }
    u_xlati12 = ~u_xlati11;
    u_xlati31 = ~u_xlati1;
    u_xlati12 = int(uint(u_xlati31) & uint(u_xlati12));
    if(u_xlati12 != 0) {
        u_xlat16_14 = u_xlat16_0 * 0.200000003 + _UMin;
        u_xlat16_14 = u_xlat16_0 * 0.0250000004 + u_xlat16_14;
        u_xlat14.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_14;
        u_xlat14.x = u_xlat16_19 * _ScaleTime + u_xlat16_14;
        u_xlat14.xy = u_xlat14.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb33 = !!(vs_TEXCOORD0.x>=u_xlat14.y);
#else
        u_xlatb33 = vs_TEXCOORD0.x>=u_xlat14.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb14 = !!(u_xlat14.x>=vs_TEXCOORD0.x);
#else
        u_xlatb14 = u_xlat14.x>=vs_TEXCOORD0.x;
#endif
        u_xlati14 = int(uint(u_xlatb14) * 0xffffffffu & uint(u_xlatb33) * 0xffffffffu);
        if(u_xlati14 != 0) {
            u_xlat10_33.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_15 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_10.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_10.x + u_xlat16_10.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_34.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_15.xyz = vec3(u_xlat10_15) * u_xlat10_34.xyz;
            u_xlat16_15.xyz = u_xlat16_15.xyz * vec3(_Reflectivity);
            u_xlat16_33.xyz = u_xlat10_33.xyz * _Color.xyz + u_xlat16_15.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb15 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb15 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat34.x = _Time.y * _Speed;
            u_xlat34.x = fract(u_xlat34.x);
            u_xlat34.x = u_xlat34.x + -0.5;
            u_xlat34.x = abs(u_xlat34.x) * _Magnitude + _MinValue;
            u_xlat34.xyz = u_xlat16_33.xyz * u_xlat34.xxx;
            u_xlat33.xyz = u_xlat16_33.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb15)) ? u_xlat34.xyz : u_xlat33.xyz;
            u_xlat16_33.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_33.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_33.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_15.xyz = (-u_xlat16_13.xyz) + u_xlat16_33.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_15.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati14;
    } else {
        u_xlati14 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati14;
    u_xlati34 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati34) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.25 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.300000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.349999994 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.400000006 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.450000018 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.5 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.550000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.600000024 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.650000036 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.699999988 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.75 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.800000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.850000024 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.900000036 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.949999988 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati1 != 0) {
            u_xlat10_17.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_74 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_18.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = vec3(u_xlat10_74) * u_xlat10_18.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_17.xyz = u_xlat10_17.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb74 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb74 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat18.x = _Time.y * _Speed;
            u_xlat18.x = fract(u_xlat18.x);
            u_xlat18.x = u_xlat18.x + -0.5;
            u_xlat18.x = abs(u_xlat18.x) * _Magnitude + _MinValue;
            u_xlat18.xyz = u_xlat16_17.xyz * u_xlat18.xxx;
            u_xlat17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb74)) ? u_xlat18.xyz : u_xlat17.xyz;
            u_xlat16_17.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_17.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_17.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_17.xyz = (-u_xlat16_13.xyz) + u_xlat16_17.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_17.xyz + u_xlat16_13.xyz;
            SV_Target0.xyz = u_xlat16_2.xyz;
            SV_Target0.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1 != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LUMINANCE" "FOG_HEIGHT" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 _HeigtFogParams;
uniform 	vec4 _HeigtFogRamp;
uniform 	vec4 _HeigtFogColBase;
uniform 	vec4 _HeigtFogColDelta;
uniform 	vec4 _HeigtFogColParams;
uniform 	vec4 _HeigtFogRadialCol;
uniform 	vec4 _Mihoyo_FogColor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec2 u_xlat5;
float u_xlat6;
bool u_xlatb6;
mediump float u_xlat16_9;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat18;
float u_xlat19;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD1.xy = u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat2.y = u_xlat1.y;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat5.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat2.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat5.y = u_xlat16_4.x;
    u_xlat2.z = dot(u_xlat5.xy, u_xlat1.xz);
    vs_TEXCOORD3.xyz = u_xlat2.xyz;
    u_xlat18 = u_xlat0.y * _HeigtFogColParams.x + _HeigtFogColParams.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
    u_xlat16_3 = (-u_xlat18) + 2.0;
    u_xlat16_3 = u_xlat18 * u_xlat16_3;
    u_xlat1.xyz = vec3(u_xlat16_3) * _HeigtFogColDelta.xyz + _HeigtFogColBase.xyz;
    u_xlat2.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol.xyz;
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = u_xlat0.y * _HeigtFogParams.x;
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat12.x = u_xlat0.x + (-_HeigtFogRamp.w);
    u_xlat12.x = u_xlat12.x * _HeigtFogColParams.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat12.x = min(max(u_xlat12.x, 0.0), 1.0);
#else
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
#endif
    u_xlat1.xyz = u_xlat12.xxx * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat12.x = _ProjectionParams.z * 0.999899983;
#ifdef UNITY_ADRENO_ES3
    u_xlatb12 = !!(u_xlat0.x>=u_xlat12.x);
#else
    u_xlatb12 = u_xlat0.x>=u_xlat12.x;
#endif
    u_xlat18 = u_xlat0.x * _HeigtFogParams.z + _HeigtFogParams.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat19 = (-u_xlat18) + 2.0;
    u_xlat18 = u_xlat18 * u_xlat19;
    u_xlat19 = u_xlat18 * _HeigtFogColDelta.w;
    u_xlat12.x = (u_xlatb12) ? u_xlat19 : u_xlat18;
    u_xlat12.x = log2(u_xlat12.x);
    u_xlat12.x = u_xlat12.x * _Mihoyo_FogColor.w;
    u_xlat12.x = exp2(u_xlat12.x);
    u_xlat12.x = min(u_xlat12.x, _HeigtFogColBase.w);
    u_xlat1.xyz = u_xlat12.xxx * u_xlat1.xyz;
    u_xlat18 = u_xlat6 * -1.44269502;
    u_xlat12.y = exp2(u_xlat18);
    u_xlat12.xy = (-u_xlat12.xy) + vec2(1.0, 1.0);
    u_xlat18 = u_xlat12.y / u_xlat6;
#ifdef UNITY_ADRENO_ES3
    u_xlatb6 = !!(0.00999999978<abs(u_xlat6));
#else
    u_xlatb6 = 0.00999999978<abs(u_xlat6);
#endif
    u_xlat16_3 = (u_xlatb6) ? u_xlat18 : 1.0;
    u_xlat6 = u_xlat0.x * _HeigtFogParams.y;
    u_xlat0.x = u_xlat0.x * _HeigtFogRamp.x + _HeigtFogRamp.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat16_3 = u_xlat6 * u_xlat16_3;
    u_xlat16_3 = exp2((-u_xlat16_3));
    u_xlat16_3 = min(u_xlat16_3, 1.0);
    u_xlat16_3 = (-u_xlat16_3) + 1.0;
    u_xlat16_9 = (-u_xlat0.x) + 2.0;
    u_xlat16_9 = u_xlat0.x * u_xlat16_9;
    u_xlat0.x = u_xlat16_9 * _HeigtFogRamp.z + (-_HeigtFogRamp.z);
    u_xlat0.x = u_xlat0.x + 1.0;
    u_xlat16_3 = u_xlat0.x * u_xlat16_3;
    u_xlat0.x = min(u_xlat16_3, _HeigtFogColBase.w);
    u_xlat6 = (-u_xlat0.x) + 1.0;
    u_xlat1.xyz = vec3(u_xlat6) * u_xlat1.xyz;
    u_xlat2.w = u_xlat6 * u_xlat12.x;
    u_xlat2.xyz = _Mihoyo_FogColor.xyz * u_xlat0.xxx + u_xlat1.xyz;
    vs_COLOR1 = u_xlat2;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform 	mediump float _LumiFactor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform mediump sampler2D unity_Lightmap;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump float u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
int u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp vec3 u_xlat10_2;
mediump vec4 u_xlat16_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
int u_xlati4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp float u_xlat10_5;
int u_xlati5;
bool u_xlatb5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
vec2 u_xlat8;
mediump float u_xlat16_8;
int u_xlati8;
bool u_xlatb8;
mediump vec3 u_xlat16_9;
lowp float u_xlat10_9;
int u_xlati9;
bool u_xlatb9;
mediump vec3 u_xlat16_10;
vec2 u_xlat11;
mediump float u_xlat16_11;
int u_xlati11;
bool u_xlatb11;
mediump vec3 u_xlat16_12;
lowp float u_xlat10_12;
int u_xlati12;
bool u_xlatb12;
mediump vec3 u_xlat16_13;
vec2 u_xlat14;
mediump float u_xlat16_14;
int u_xlati14;
bool u_xlatb14;
mediump vec3 u_xlat16_15;
lowp float u_xlat10_15;
int u_xlati15;
bool u_xlatb15;
mediump vec3 u_xlat16_16;
vec3 u_xlat17;
mediump vec3 u_xlat16_17;
lowp vec3 u_xlat10_17;
int u_xlati17;
bool u_xlatb17;
vec3 u_xlat18;
mediump vec3 u_xlat16_18;
lowp vec3 u_xlat10_18;
bool u_xlatb18;
mediump float u_xlat16_19;
bool u_xlatb20;
vec3 u_xlat23;
mediump vec3 u_xlat16_23;
lowp vec3 u_xlat10_23;
bool u_xlatb23;
vec3 u_xlat24;
lowp vec3 u_xlat10_24;
int u_xlati24;
vec3 u_xlat27;
mediump vec3 u_xlat16_27;
lowp vec3 u_xlat10_27;
bool u_xlatb27;
vec3 u_xlat28;
lowp vec3 u_xlat10_28;
int u_xlati28;
vec3 u_xlat30;
mediump vec3 u_xlat16_30;
lowp vec3 u_xlat10_30;
bool u_xlatb30;
vec3 u_xlat31;
lowp vec3 u_xlat10_31;
int u_xlati31;
vec3 u_xlat33;
mediump vec3 u_xlat16_33;
lowp vec3 u_xlat10_33;
bool u_xlatb33;
vec3 u_xlat34;
lowp vec3 u_xlat10_34;
int u_xlati34;
vec3 u_xlat36;
mediump vec3 u_xlat16_36;
lowp vec3 u_xlat10_36;
int u_xlati36;
bool u_xlatb36;
vec3 u_xlat37;
lowp vec3 u_xlat10_37;
mediump float u_xlat16_38;
lowp float u_xlat10_59;
mediump float u_xlat16_63;
mediump float u_xlat16_64;
mediump float u_xlat16_67;
mediump float u_xlat16_70;
lowp float u_xlat10_74;
bool u_xlatb74;
void main()
{
    u_xlat16_0 = (-_UMin) + _UMax;
    u_xlat16_19 = u_xlat16_0 * 0.0250000004;
    u_xlat16_1 = u_xlat16_0 * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_19 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb20 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb20 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1 = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb20) * 0xffffffffu);
    if(u_xlati1 != 0) {
        u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_59 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_38 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_38 = u_xlat16_38 + u_xlat16_38;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_38)) + vs_TEXCOORD3.xyz;
        u_xlat10_4.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_4.xyz = vec3(u_xlat10_59) * u_xlat10_4.xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_Reflectivity);
        u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz + u_xlat16_4.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb4 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat23.x = _Time.y * _Speed;
        u_xlat23.x = fract(u_xlat23.x);
        u_xlat23.x = u_xlat23.x + -0.5;
        u_xlat23.x = abs(u_xlat23.x) * _Magnitude + _MinValue;
        u_xlat23.xyz = u_xlat16_2.xyz * u_xlat23.xxx;
        u_xlat5.xyz = u_xlat16_2.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb4)) ? u_xlat23.xyz : u_xlat5.xyz;
        u_xlat16_4.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
        u_xlat16_6.xyz = u_xlat16_4.xyz * unity_Lightmap_HDR.xxx;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_6.xyz = u_xlat16_3.xyz * u_xlat16_6.xyz;
        u_xlat16_38 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
        u_xlat16_38 = min(max(u_xlat16_38, 0.0), 1.0);
#else
        u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
#endif
        u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(u_xlat16_38) + vs_COLOR1.xyz;
        u_xlat16_4.x = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
        u_xlat16_4.xyz = (-u_xlat16_6.xyz) + u_xlat16_4.xxx;
        u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_4.xyz + u_xlat16_6.xyz;
        u_xlat16_3.xyz = u_xlat16_2.xyz;
        u_xlat16_3.w = _BloomFactor;
        u_xlat16_2.xyz = u_xlat16_2.xyz;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1 == 0) {
        u_xlat16_4.x = u_xlat16_0 * 0.0500000007 + _UMin;
        u_xlat16_4.x = u_xlat16_0 * 0.0250000004 + u_xlat16_4.x;
        u_xlat4.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_4.x;
        u_xlat4.x = u_xlat16_19 * _ScaleTime + u_xlat16_4.x;
        u_xlat4.xy = u_xlat4.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb23 = !!(vs_TEXCOORD0.x>=u_xlat4.y);
#else
        u_xlatb23 = vs_TEXCOORD0.x>=u_xlat4.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(u_xlat4.x>=vs_TEXCOORD0.x);
#else
        u_xlatb4 = u_xlat4.x>=vs_TEXCOORD0.x;
#endif
        u_xlati4 = int(uint(u_xlatb4) * 0xffffffffu & uint(u_xlatb23) * 0xffffffffu);
        if(u_xlati4 != 0) {
            u_xlat10_23.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_5 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_38 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_6.x = u_xlat16_38 + u_xlat16_38;
            u_xlat16_6.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_6.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_24.xyz = texture(_EnvTex, u_xlat16_6.xyz).xyz;
            u_xlat16_5.xyz = vec3(u_xlat10_5) * u_xlat10_24.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Reflectivity);
            u_xlat16_23.xyz = u_xlat10_23.xyz * _Color.xyz + u_xlat16_5.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat24.x = _Time.y * _Speed;
            u_xlat24.x = fract(u_xlat24.x);
            u_xlat24.x = u_xlat24.x + -0.5;
            u_xlat24.x = abs(u_xlat24.x) * _Magnitude + _MinValue;
            u_xlat24.xyz = u_xlat16_23.xyz * u_xlat24.xxx;
            u_xlat23.xyz = u_xlat16_23.xyz * vec3(_LightMapIntensity);
            u_xlat16_6.xyz = (bool(u_xlatb5)) ? u_xlat24.xyz : u_xlat23.xyz;
            u_xlat16_23.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_23.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_6.xyz = u_xlat16_6.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_7.xyz;
            u_xlat16_63 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_63 = min(max(u_xlat16_63, 0.0), 1.0);
#else
            u_xlat16_63 = clamp(u_xlat16_63, 0.0, 1.0);
#endif
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(u_xlat16_63) + vs_COLOR1.xyz;
            u_xlat16_23.x = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_5.xyz = (-u_xlat16_6.xyz) + u_xlat16_23.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_5.xyz + u_xlat16_6.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati4;
    } else {
        u_xlati4 = -1;
    //ENDIF
    }
    u_xlati5 = ~u_xlati4;
    u_xlati24 = ~u_xlati1;
    u_xlati5 = int(uint(u_xlati24) & uint(u_xlati5));
    if(u_xlati5 != 0) {
        u_xlat16_8 = u_xlat16_0 * 0.100000001 + _UMin;
        u_xlat16_8 = u_xlat16_0 * 0.0250000004 + u_xlat16_8;
        u_xlat8.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_8;
        u_xlat8.x = u_xlat16_19 * _ScaleTime + u_xlat16_8;
        u_xlat8.xy = u_xlat8.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb27 = !!(vs_TEXCOORD0.x>=u_xlat8.y);
#else
        u_xlatb27 = vs_TEXCOORD0.x>=u_xlat8.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb8 = !!(u_xlat8.x>=vs_TEXCOORD0.x);
#else
        u_xlatb8 = u_xlat8.x>=vs_TEXCOORD0.x;
#endif
        u_xlati8 = int(uint(u_xlatb8) * 0xffffffffu & uint(u_xlatb27) * 0xffffffffu);
        if(u_xlati8 != 0) {
            u_xlat10_27.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_9 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_6.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_7.x = u_xlat16_6.x + u_xlat16_6.x;
            u_xlat16_7.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_7.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_28.xyz = texture(_EnvTex, u_xlat16_7.xyz).xyz;
            u_xlat16_9.xyz = vec3(u_xlat10_9) * u_xlat10_28.xyz;
            u_xlat16_9.xyz = u_xlat16_9.xyz * vec3(_Reflectivity);
            u_xlat16_27.xyz = u_xlat10_27.xyz * _Color.xyz + u_xlat16_9.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb9 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb9 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28.x = _Time.y * _Speed;
            u_xlat28.x = fract(u_xlat28.x);
            u_xlat28.x = u_xlat28.x + -0.5;
            u_xlat28.x = abs(u_xlat28.x) * _Magnitude + _MinValue;
            u_xlat28.xyz = u_xlat16_27.xyz * u_xlat28.xxx;
            u_xlat27.xyz = u_xlat16_27.xyz * vec3(_LightMapIntensity);
            u_xlat16_7.xyz = (bool(u_xlatb9)) ? u_xlat28.xyz : u_xlat27.xyz;
            u_xlat16_27.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_10.xyz = u_xlat16_27.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_7.xyz = u_xlat16_7.xyz * _Color.xyz;
            u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat16_10.xyz;
            u_xlat16_64 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_64 = min(max(u_xlat16_64, 0.0), 1.0);
#else
            u_xlat16_64 = clamp(u_xlat16_64, 0.0, 1.0);
#endif
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(u_xlat16_64) + vs_COLOR1.xyz;
            u_xlat16_27.x = dot(u_xlat16_7.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_9.xyz = (-u_xlat16_7.xyz) + u_xlat16_27.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_9.xyz + u_xlat16_7.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati8;
    } else {
        u_xlati8 = -1;
    //ENDIF
    }
    u_xlati9 = ~u_xlati8;
    u_xlati28 = ~u_xlati1;
    u_xlati9 = int(uint(u_xlati28) & uint(u_xlati9));
    if(u_xlati9 != 0) {
        u_xlat16_11 = u_xlat16_0 * 0.150000006 + _UMin;
        u_xlat16_11 = u_xlat16_0 * 0.0250000004 + u_xlat16_11;
        u_xlat11.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_11;
        u_xlat11.x = u_xlat16_19 * _ScaleTime + u_xlat16_11;
        u_xlat11.xy = u_xlat11.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb30 = !!(vs_TEXCOORD0.x>=u_xlat11.y);
#else
        u_xlatb30 = vs_TEXCOORD0.x>=u_xlat11.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb11 = !!(u_xlat11.x>=vs_TEXCOORD0.x);
#else
        u_xlatb11 = u_xlat11.x>=vs_TEXCOORD0.x;
#endif
        u_xlati11 = int(uint(u_xlatb11) * 0xffffffffu & uint(u_xlatb30) * 0xffffffffu);
        if(u_xlati11 != 0) {
            u_xlat10_30.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_12 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_7.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_10.x = u_xlat16_7.x + u_xlat16_7.x;
            u_xlat16_10.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_10.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_31.xyz = texture(_EnvTex, u_xlat16_10.xyz).xyz;
            u_xlat16_12.xyz = vec3(u_xlat10_12) * u_xlat10_31.xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(_Reflectivity);
            u_xlat16_30.xyz = u_xlat10_30.xyz * _Color.xyz + u_xlat16_12.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb12 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb12 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat31.x = _Time.y * _Speed;
            u_xlat31.x = fract(u_xlat31.x);
            u_xlat31.x = u_xlat31.x + -0.5;
            u_xlat31.x = abs(u_xlat31.x) * _Magnitude + _MinValue;
            u_xlat31.xyz = u_xlat16_30.xyz * u_xlat31.xxx;
            u_xlat30.xyz = u_xlat16_30.xyz * vec3(_LightMapIntensity);
            u_xlat16_10.xyz = (bool(u_xlatb12)) ? u_xlat31.xyz : u_xlat30.xyz;
            u_xlat16_30.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_30.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_10.xyz = u_xlat16_10.xyz * _Color.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_10.xyz = u_xlat16_10.xyz * u_xlat16_13.xyz;
            u_xlat16_67 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_67 = min(max(u_xlat16_67, 0.0), 1.0);
#else
            u_xlat16_67 = clamp(u_xlat16_67, 0.0, 1.0);
#endif
            u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(u_xlat16_67) + vs_COLOR1.xyz;
            u_xlat16_30.x = dot(u_xlat16_10.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_12.xyz = (-u_xlat16_10.xyz) + u_xlat16_30.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_12.xyz + u_xlat16_10.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati11;
    } else {
        u_xlati11 = -1;
    //ENDIF
    }
    u_xlati12 = ~u_xlati11;
    u_xlati31 = ~u_xlati1;
    u_xlati12 = int(uint(u_xlati31) & uint(u_xlati12));
    if(u_xlati12 != 0) {
        u_xlat16_14 = u_xlat16_0 * 0.200000003 + _UMin;
        u_xlat16_14 = u_xlat16_0 * 0.0250000004 + u_xlat16_14;
        u_xlat14.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_14;
        u_xlat14.x = u_xlat16_19 * _ScaleTime + u_xlat16_14;
        u_xlat14.xy = u_xlat14.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb33 = !!(vs_TEXCOORD0.x>=u_xlat14.y);
#else
        u_xlatb33 = vs_TEXCOORD0.x>=u_xlat14.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb14 = !!(u_xlat14.x>=vs_TEXCOORD0.x);
#else
        u_xlatb14 = u_xlat14.x>=vs_TEXCOORD0.x;
#endif
        u_xlati14 = int(uint(u_xlatb14) * 0xffffffffu & uint(u_xlatb33) * 0xffffffffu);
        if(u_xlati14 != 0) {
            u_xlat10_33.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_15 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_10.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_10.x + u_xlat16_10.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_34.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_15.xyz = vec3(u_xlat10_15) * u_xlat10_34.xyz;
            u_xlat16_15.xyz = u_xlat16_15.xyz * vec3(_Reflectivity);
            u_xlat16_33.xyz = u_xlat10_33.xyz * _Color.xyz + u_xlat16_15.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb15 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb15 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat34.x = _Time.y * _Speed;
            u_xlat34.x = fract(u_xlat34.x);
            u_xlat34.x = u_xlat34.x + -0.5;
            u_xlat34.x = abs(u_xlat34.x) * _Magnitude + _MinValue;
            u_xlat34.xyz = u_xlat16_33.xyz * u_xlat34.xxx;
            u_xlat33.xyz = u_xlat16_33.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb15)) ? u_xlat34.xyz : u_xlat33.xyz;
            u_xlat16_33.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_33.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_33.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_15.xyz = (-u_xlat16_13.xyz) + u_xlat16_33.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_15.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati14;
    } else {
        u_xlati14 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati14;
    u_xlati34 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati34) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.25 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.300000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.349999994 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.400000006 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.450000018 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.5 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.550000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.600000024 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.650000036 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.699999988 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.75 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.800000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.850000024 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.900000036 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.949999988 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati1 != 0) {
            u_xlat10_17.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_74 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_18.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = vec3(u_xlat10_74) * u_xlat10_18.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_17.xyz = u_xlat10_17.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb74 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb74 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat18.x = _Time.y * _Speed;
            u_xlat18.x = fract(u_xlat18.x);
            u_xlat18.x = u_xlat18.x + -0.5;
            u_xlat18.x = abs(u_xlat18.x) * _Magnitude + _MinValue;
            u_xlat18.xyz = u_xlat16_17.xyz * u_xlat18.xxx;
            u_xlat17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb74)) ? u_xlat18.xyz : u_xlat17.xyz;
            u_xlat16_17.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_17.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_17.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_17.xyz = (-u_xlat16_13.xyz) + u_xlat16_17.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_17.xyz + u_xlat16_13.xyz;
            SV_Target0.xyz = u_xlat16_2.xyz;
            SV_Target0.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1 != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LUMINANCE" "FOG_HEIGHT" "FOG_LERP" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	mediump float _LerpFactor;
uniform 	vec4 _HeigtFogParams2;
uniform 	vec4 _HeigtFogParams3;
uniform 	vec4 _HeigtFogRamp2;
uniform 	vec4 _HeigtFogRamp3;
uniform 	vec4 _HeigtFogColBase2;
uniform 	vec4 _HeigtFogColBase3;
uniform 	vec4 _HeigtFogColDelta2;
uniform 	vec4 _HeigtFogColDelta3;
uniform 	vec4 _HeigtFogColParams2;
uniform 	vec4 _HeigtFogColParams3;
uniform 	vec4 _HeigtFogRadialCol2;
uniform 	vec4 _HeigtFogRadialCol3;
uniform 	vec4 _Mihoyo_FogColor2;
uniform 	vec4 _Mihoyo_FogColor3;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
bool u_xlatb2;
vec4 u_xlat3;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec2 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat8;
mediump float u_xlat16_9;
mediump float u_xlat16_10;
float u_xlat12;
bool u_xlatb12;
float u_xlat18;
float u_xlat19;
bool u_xlatb19;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD1.xy = u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat2.y = u_xlat1.y;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat5.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat2.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat5.y = u_xlat16_4.x;
    u_xlat2.z = dot(u_xlat5.xy, u_xlat1.xz);
    vs_TEXCOORD3.xyz = u_xlat2.xyz;
    u_xlat18 = u_xlat0.y * _HeigtFogColParams3.x + _HeigtFogColParams3.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat16_3 = (-u_xlat18) + 2.0;
    u_xlat16_3 = u_xlat18 * u_xlat16_3;
    u_xlat1.xyz = vec3(u_xlat16_3) * _HeigtFogColDelta3.xyz + _HeigtFogColBase3.xyz;
    u_xlat2.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol3.xyz;
    u_xlat0.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
    u_xlat6.x = u_xlat0.y * _HeigtFogColParams2.x + _HeigtFogColParams2.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat0.x = dot(u_xlat0.xzw, u_xlat0.xzw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat18 = u_xlat0.x + (-_HeigtFogRamp3.w);
    u_xlat18 = u_xlat18 * _HeigtFogColParams3.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat18 = u_xlat0.x * _HeigtFogParams3.z + _HeigtFogParams3.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat19 = (-u_xlat18) + 2.0;
    u_xlat18 = u_xlat18 * u_xlat19;
    u_xlat19 = u_xlat18 * _HeigtFogColDelta3.w;
    u_xlat2.x = _ProjectionParams.z * 0.999899983;
#ifdef UNITY_ADRENO_ES3
    u_xlatb2 = !!(u_xlat0.x>=u_xlat2.x);
#else
    u_xlatb2 = u_xlat0.x>=u_xlat2.x;
#endif
    u_xlat18 = (u_xlatb2) ? u_xlat19 : u_xlat18;
    u_xlat18 = log2(u_xlat18);
    u_xlat18 = u_xlat18 * _Mihoyo_FogColor3.w;
    u_xlat18 = exp2(u_xlat18);
    u_xlat18 = min(u_xlat18, _HeigtFogColBase3.w);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat18 = (-u_xlat18) + 1.0;
    u_xlat19 = u_xlat0.z * _HeigtFogParams3.x;
    u_xlat12 = u_xlat0.z * _HeigtFogParams2.x;
    u_xlat8.x = u_xlat19 * -1.44269502;
    u_xlat8.x = exp2(u_xlat8.x);
    u_xlat8.x = (-u_xlat8.x) + 1.0;
    u_xlat8.x = u_xlat8.x / u_xlat19;
#ifdef UNITY_ADRENO_ES3
    u_xlatb19 = !!(0.00999999978<abs(u_xlat19));
#else
    u_xlatb19 = 0.00999999978<abs(u_xlat19);
#endif
    u_xlat16_3 = (u_xlatb19) ? u_xlat8.x : 1.0;
    u_xlat19 = u_xlat0.x * _HeigtFogParams3.y;
    u_xlat16_3 = u_xlat19 * u_xlat16_3;
    u_xlat16_3 = exp2((-u_xlat16_3));
    u_xlat16_3 = min(u_xlat16_3, 1.0);
    u_xlat16_3 = (-u_xlat16_3) + 1.0;
    u_xlat19 = u_xlat0.x * _HeigtFogRamp3.x + _HeigtFogRamp3.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat19 = min(max(u_xlat19, 0.0), 1.0);
#else
    u_xlat19 = clamp(u_xlat19, 0.0, 1.0);
#endif
    u_xlat16_9 = (-u_xlat19) + 2.0;
    u_xlat16_9 = u_xlat19 * u_xlat16_9;
    u_xlat19 = u_xlat16_9 * _HeigtFogRamp3.z + (-_HeigtFogRamp3.z);
    u_xlat19 = u_xlat19 + 1.0;
    u_xlat16_3 = u_xlat19 * u_xlat16_3;
    u_xlat19 = min(u_xlat16_3, _HeigtFogColBase3.w);
    u_xlat8.x = (-u_xlat19) + 1.0;
    u_xlat1.xyz = u_xlat1.xyz * u_xlat8.xxx;
    u_xlat3.w = u_xlat18 * u_xlat8.x;
    u_xlat3.xyz = _Mihoyo_FogColor3.xyz * vec3(u_xlat19) + u_xlat1.xyz;
    u_xlat16_4.x = (-u_xlat6.x) + 2.0;
    u_xlat16_4.x = u_xlat6.x * u_xlat16_4.x;
    u_xlat1.xyz = u_xlat16_4.xxx * _HeigtFogColDelta2.xyz + _HeigtFogColBase2.xyz;
    u_xlat8.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol2.xyz;
    u_xlat6.x = u_xlat0.x + (-_HeigtFogRamp2.w);
    u_xlat6.x = u_xlat6.x * _HeigtFogColParams2.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat1.xyz = u_xlat6.xxx * u_xlat8.xyz + u_xlat1.xyz;
    u_xlat6.x = u_xlat0.x * _HeigtFogParams2.z + _HeigtFogParams2.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat18 = (-u_xlat6.x) + 2.0;
    u_xlat6.x = u_xlat18 * u_xlat6.x;
    u_xlat18 = u_xlat6.x * _HeigtFogColDelta2.w;
    u_xlat6.x = (u_xlatb2) ? u_xlat18 : u_xlat6.x;
    u_xlat6.x = log2(u_xlat6.x);
    u_xlat6.x = u_xlat6.x * _Mihoyo_FogColor2.w;
    u_xlat6.x = exp2(u_xlat6.x);
    u_xlat6.x = min(u_xlat6.x, _HeigtFogColBase2.w);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat18 = u_xlat12 * -1.44269502;
    u_xlat6.z = exp2(u_xlat18);
    u_xlat6.xz = (-u_xlat6.xz) + vec2(1.0, 1.0);
    u_xlat18 = u_xlat6.z / u_xlat12;
#ifdef UNITY_ADRENO_ES3
    u_xlatb12 = !!(0.00999999978<abs(u_xlat12));
#else
    u_xlatb12 = 0.00999999978<abs(u_xlat12);
#endif
    u_xlat16_4.x = (u_xlatb12) ? u_xlat18 : 1.0;
    u_xlat12 = u_xlat0.x * _HeigtFogParams2.y;
    u_xlat0.x = u_xlat0.x * _HeigtFogRamp2.x + _HeigtFogRamp2.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat16_4.x = u_xlat12 * u_xlat16_4.x;
    u_xlat16_4.x = exp2((-u_xlat16_4.x));
    u_xlat16_4.x = min(u_xlat16_4.x, 1.0);
    u_xlat16_4.x = (-u_xlat16_4.x) + 1.0;
    u_xlat16_10 = (-u_xlat0.x) + 2.0;
    u_xlat16_10 = u_xlat0.x * u_xlat16_10;
    u_xlat0.x = u_xlat16_10 * _HeigtFogRamp2.z + (-_HeigtFogRamp2.z);
    u_xlat0.x = u_xlat0.x + 1.0;
    u_xlat16_4.x = u_xlat0.x * u_xlat16_4.x;
    u_xlat0.x = min(u_xlat16_4.x, _HeigtFogColBase2.w);
    u_xlat12 = (-u_xlat0.x) + 1.0;
    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
    u_xlat2.w = u_xlat12 * u_xlat6.x;
    u_xlat2.xyz = _Mihoyo_FogColor2.xyz * u_xlat0.xxx + u_xlat1.xyz;
    u_xlat0 = (-u_xlat2) + u_xlat3;
    u_xlat0 = vec4(vec4(_LerpFactor, _LerpFactor, _LerpFactor, _LerpFactor)) * u_xlat0 + u_xlat2;
    vs_COLOR1 = u_xlat0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform 	mediump float _LumiFactor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform mediump sampler2D unity_Lightmap;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump float u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
int u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp vec3 u_xlat10_2;
mediump vec4 u_xlat16_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
int u_xlati4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp float u_xlat10_5;
int u_xlati5;
bool u_xlatb5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
vec2 u_xlat8;
mediump float u_xlat16_8;
int u_xlati8;
bool u_xlatb8;
mediump vec3 u_xlat16_9;
lowp float u_xlat10_9;
int u_xlati9;
bool u_xlatb9;
mediump vec3 u_xlat16_10;
vec2 u_xlat11;
mediump float u_xlat16_11;
int u_xlati11;
bool u_xlatb11;
mediump vec3 u_xlat16_12;
lowp float u_xlat10_12;
int u_xlati12;
bool u_xlatb12;
mediump vec3 u_xlat16_13;
vec2 u_xlat14;
mediump float u_xlat16_14;
int u_xlati14;
bool u_xlatb14;
mediump vec3 u_xlat16_15;
lowp float u_xlat10_15;
int u_xlati15;
bool u_xlatb15;
mediump vec3 u_xlat16_16;
vec3 u_xlat17;
mediump vec3 u_xlat16_17;
lowp vec3 u_xlat10_17;
int u_xlati17;
bool u_xlatb17;
vec3 u_xlat18;
mediump vec3 u_xlat16_18;
lowp vec3 u_xlat10_18;
bool u_xlatb18;
mediump float u_xlat16_19;
bool u_xlatb20;
vec3 u_xlat23;
mediump vec3 u_xlat16_23;
lowp vec3 u_xlat10_23;
bool u_xlatb23;
vec3 u_xlat24;
lowp vec3 u_xlat10_24;
int u_xlati24;
vec3 u_xlat27;
mediump vec3 u_xlat16_27;
lowp vec3 u_xlat10_27;
bool u_xlatb27;
vec3 u_xlat28;
lowp vec3 u_xlat10_28;
int u_xlati28;
vec3 u_xlat30;
mediump vec3 u_xlat16_30;
lowp vec3 u_xlat10_30;
bool u_xlatb30;
vec3 u_xlat31;
lowp vec3 u_xlat10_31;
int u_xlati31;
vec3 u_xlat33;
mediump vec3 u_xlat16_33;
lowp vec3 u_xlat10_33;
bool u_xlatb33;
vec3 u_xlat34;
lowp vec3 u_xlat10_34;
int u_xlati34;
vec3 u_xlat36;
mediump vec3 u_xlat16_36;
lowp vec3 u_xlat10_36;
int u_xlati36;
bool u_xlatb36;
vec3 u_xlat37;
lowp vec3 u_xlat10_37;
mediump float u_xlat16_38;
lowp float u_xlat10_59;
mediump float u_xlat16_63;
mediump float u_xlat16_64;
mediump float u_xlat16_67;
mediump float u_xlat16_70;
lowp float u_xlat10_74;
bool u_xlatb74;
void main()
{
    u_xlat16_0 = (-_UMin) + _UMax;
    u_xlat16_19 = u_xlat16_0 * 0.0250000004;
    u_xlat16_1 = u_xlat16_0 * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_19 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb20 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb20 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1 = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb20) * 0xffffffffu);
    if(u_xlati1 != 0) {
        u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_59 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_38 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_38 = u_xlat16_38 + u_xlat16_38;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_38)) + vs_TEXCOORD3.xyz;
        u_xlat10_4.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_4.xyz = vec3(u_xlat10_59) * u_xlat10_4.xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_Reflectivity);
        u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz + u_xlat16_4.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb4 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat23.x = _Time.y * _Speed;
        u_xlat23.x = fract(u_xlat23.x);
        u_xlat23.x = u_xlat23.x + -0.5;
        u_xlat23.x = abs(u_xlat23.x) * _Magnitude + _MinValue;
        u_xlat23.xyz = u_xlat16_2.xyz * u_xlat23.xxx;
        u_xlat5.xyz = u_xlat16_2.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb4)) ? u_xlat23.xyz : u_xlat5.xyz;
        u_xlat16_4.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
        u_xlat16_6.xyz = u_xlat16_4.xyz * unity_Lightmap_HDR.xxx;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_6.xyz = u_xlat16_3.xyz * u_xlat16_6.xyz;
        u_xlat16_38 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
        u_xlat16_38 = min(max(u_xlat16_38, 0.0), 1.0);
#else
        u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
#endif
        u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(u_xlat16_38) + vs_COLOR1.xyz;
        u_xlat16_4.x = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
        u_xlat16_4.xyz = (-u_xlat16_6.xyz) + u_xlat16_4.xxx;
        u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_4.xyz + u_xlat16_6.xyz;
        u_xlat16_3.xyz = u_xlat16_2.xyz;
        u_xlat16_3.w = _BloomFactor;
        u_xlat16_2.xyz = u_xlat16_2.xyz;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1 == 0) {
        u_xlat16_4.x = u_xlat16_0 * 0.0500000007 + _UMin;
        u_xlat16_4.x = u_xlat16_0 * 0.0250000004 + u_xlat16_4.x;
        u_xlat4.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_4.x;
        u_xlat4.x = u_xlat16_19 * _ScaleTime + u_xlat16_4.x;
        u_xlat4.xy = u_xlat4.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb23 = !!(vs_TEXCOORD0.x>=u_xlat4.y);
#else
        u_xlatb23 = vs_TEXCOORD0.x>=u_xlat4.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(u_xlat4.x>=vs_TEXCOORD0.x);
#else
        u_xlatb4 = u_xlat4.x>=vs_TEXCOORD0.x;
#endif
        u_xlati4 = int(uint(u_xlatb4) * 0xffffffffu & uint(u_xlatb23) * 0xffffffffu);
        if(u_xlati4 != 0) {
            u_xlat10_23.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_5 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_38 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_6.x = u_xlat16_38 + u_xlat16_38;
            u_xlat16_6.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_6.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_24.xyz = texture(_EnvTex, u_xlat16_6.xyz).xyz;
            u_xlat16_5.xyz = vec3(u_xlat10_5) * u_xlat10_24.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Reflectivity);
            u_xlat16_23.xyz = u_xlat10_23.xyz * _Color.xyz + u_xlat16_5.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat24.x = _Time.y * _Speed;
            u_xlat24.x = fract(u_xlat24.x);
            u_xlat24.x = u_xlat24.x + -0.5;
            u_xlat24.x = abs(u_xlat24.x) * _Magnitude + _MinValue;
            u_xlat24.xyz = u_xlat16_23.xyz * u_xlat24.xxx;
            u_xlat23.xyz = u_xlat16_23.xyz * vec3(_LightMapIntensity);
            u_xlat16_6.xyz = (bool(u_xlatb5)) ? u_xlat24.xyz : u_xlat23.xyz;
            u_xlat16_23.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_23.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_6.xyz = u_xlat16_6.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_7.xyz;
            u_xlat16_63 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_63 = min(max(u_xlat16_63, 0.0), 1.0);
#else
            u_xlat16_63 = clamp(u_xlat16_63, 0.0, 1.0);
#endif
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(u_xlat16_63) + vs_COLOR1.xyz;
            u_xlat16_23.x = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_5.xyz = (-u_xlat16_6.xyz) + u_xlat16_23.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_5.xyz + u_xlat16_6.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati4;
    } else {
        u_xlati4 = -1;
    //ENDIF
    }
    u_xlati5 = ~u_xlati4;
    u_xlati24 = ~u_xlati1;
    u_xlati5 = int(uint(u_xlati24) & uint(u_xlati5));
    if(u_xlati5 != 0) {
        u_xlat16_8 = u_xlat16_0 * 0.100000001 + _UMin;
        u_xlat16_8 = u_xlat16_0 * 0.0250000004 + u_xlat16_8;
        u_xlat8.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_8;
        u_xlat8.x = u_xlat16_19 * _ScaleTime + u_xlat16_8;
        u_xlat8.xy = u_xlat8.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb27 = !!(vs_TEXCOORD0.x>=u_xlat8.y);
#else
        u_xlatb27 = vs_TEXCOORD0.x>=u_xlat8.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb8 = !!(u_xlat8.x>=vs_TEXCOORD0.x);
#else
        u_xlatb8 = u_xlat8.x>=vs_TEXCOORD0.x;
#endif
        u_xlati8 = int(uint(u_xlatb8) * 0xffffffffu & uint(u_xlatb27) * 0xffffffffu);
        if(u_xlati8 != 0) {
            u_xlat10_27.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_9 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_6.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_7.x = u_xlat16_6.x + u_xlat16_6.x;
            u_xlat16_7.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_7.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_28.xyz = texture(_EnvTex, u_xlat16_7.xyz).xyz;
            u_xlat16_9.xyz = vec3(u_xlat10_9) * u_xlat10_28.xyz;
            u_xlat16_9.xyz = u_xlat16_9.xyz * vec3(_Reflectivity);
            u_xlat16_27.xyz = u_xlat10_27.xyz * _Color.xyz + u_xlat16_9.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb9 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb9 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28.x = _Time.y * _Speed;
            u_xlat28.x = fract(u_xlat28.x);
            u_xlat28.x = u_xlat28.x + -0.5;
            u_xlat28.x = abs(u_xlat28.x) * _Magnitude + _MinValue;
            u_xlat28.xyz = u_xlat16_27.xyz * u_xlat28.xxx;
            u_xlat27.xyz = u_xlat16_27.xyz * vec3(_LightMapIntensity);
            u_xlat16_7.xyz = (bool(u_xlatb9)) ? u_xlat28.xyz : u_xlat27.xyz;
            u_xlat16_27.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_10.xyz = u_xlat16_27.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_7.xyz = u_xlat16_7.xyz * _Color.xyz;
            u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat16_10.xyz;
            u_xlat16_64 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_64 = min(max(u_xlat16_64, 0.0), 1.0);
#else
            u_xlat16_64 = clamp(u_xlat16_64, 0.0, 1.0);
#endif
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(u_xlat16_64) + vs_COLOR1.xyz;
            u_xlat16_27.x = dot(u_xlat16_7.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_9.xyz = (-u_xlat16_7.xyz) + u_xlat16_27.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_9.xyz + u_xlat16_7.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati8;
    } else {
        u_xlati8 = -1;
    //ENDIF
    }
    u_xlati9 = ~u_xlati8;
    u_xlati28 = ~u_xlati1;
    u_xlati9 = int(uint(u_xlati28) & uint(u_xlati9));
    if(u_xlati9 != 0) {
        u_xlat16_11 = u_xlat16_0 * 0.150000006 + _UMin;
        u_xlat16_11 = u_xlat16_0 * 0.0250000004 + u_xlat16_11;
        u_xlat11.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_11;
        u_xlat11.x = u_xlat16_19 * _ScaleTime + u_xlat16_11;
        u_xlat11.xy = u_xlat11.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb30 = !!(vs_TEXCOORD0.x>=u_xlat11.y);
#else
        u_xlatb30 = vs_TEXCOORD0.x>=u_xlat11.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb11 = !!(u_xlat11.x>=vs_TEXCOORD0.x);
#else
        u_xlatb11 = u_xlat11.x>=vs_TEXCOORD0.x;
#endif
        u_xlati11 = int(uint(u_xlatb11) * 0xffffffffu & uint(u_xlatb30) * 0xffffffffu);
        if(u_xlati11 != 0) {
            u_xlat10_30.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_12 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_7.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_10.x = u_xlat16_7.x + u_xlat16_7.x;
            u_xlat16_10.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_10.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_31.xyz = texture(_EnvTex, u_xlat16_10.xyz).xyz;
            u_xlat16_12.xyz = vec3(u_xlat10_12) * u_xlat10_31.xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(_Reflectivity);
            u_xlat16_30.xyz = u_xlat10_30.xyz * _Color.xyz + u_xlat16_12.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb12 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb12 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat31.x = _Time.y * _Speed;
            u_xlat31.x = fract(u_xlat31.x);
            u_xlat31.x = u_xlat31.x + -0.5;
            u_xlat31.x = abs(u_xlat31.x) * _Magnitude + _MinValue;
            u_xlat31.xyz = u_xlat16_30.xyz * u_xlat31.xxx;
            u_xlat30.xyz = u_xlat16_30.xyz * vec3(_LightMapIntensity);
            u_xlat16_10.xyz = (bool(u_xlatb12)) ? u_xlat31.xyz : u_xlat30.xyz;
            u_xlat16_30.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_30.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_10.xyz = u_xlat16_10.xyz * _Color.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_10.xyz = u_xlat16_10.xyz * u_xlat16_13.xyz;
            u_xlat16_67 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_67 = min(max(u_xlat16_67, 0.0), 1.0);
#else
            u_xlat16_67 = clamp(u_xlat16_67, 0.0, 1.0);
#endif
            u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(u_xlat16_67) + vs_COLOR1.xyz;
            u_xlat16_30.x = dot(u_xlat16_10.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_12.xyz = (-u_xlat16_10.xyz) + u_xlat16_30.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_12.xyz + u_xlat16_10.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati11;
    } else {
        u_xlati11 = -1;
    //ENDIF
    }
    u_xlati12 = ~u_xlati11;
    u_xlati31 = ~u_xlati1;
    u_xlati12 = int(uint(u_xlati31) & uint(u_xlati12));
    if(u_xlati12 != 0) {
        u_xlat16_14 = u_xlat16_0 * 0.200000003 + _UMin;
        u_xlat16_14 = u_xlat16_0 * 0.0250000004 + u_xlat16_14;
        u_xlat14.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_14;
        u_xlat14.x = u_xlat16_19 * _ScaleTime + u_xlat16_14;
        u_xlat14.xy = u_xlat14.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb33 = !!(vs_TEXCOORD0.x>=u_xlat14.y);
#else
        u_xlatb33 = vs_TEXCOORD0.x>=u_xlat14.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb14 = !!(u_xlat14.x>=vs_TEXCOORD0.x);
#else
        u_xlatb14 = u_xlat14.x>=vs_TEXCOORD0.x;
#endif
        u_xlati14 = int(uint(u_xlatb14) * 0xffffffffu & uint(u_xlatb33) * 0xffffffffu);
        if(u_xlati14 != 0) {
            u_xlat10_33.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_15 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_10.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_10.x + u_xlat16_10.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_34.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_15.xyz = vec3(u_xlat10_15) * u_xlat10_34.xyz;
            u_xlat16_15.xyz = u_xlat16_15.xyz * vec3(_Reflectivity);
            u_xlat16_33.xyz = u_xlat10_33.xyz * _Color.xyz + u_xlat16_15.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb15 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb15 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat34.x = _Time.y * _Speed;
            u_xlat34.x = fract(u_xlat34.x);
            u_xlat34.x = u_xlat34.x + -0.5;
            u_xlat34.x = abs(u_xlat34.x) * _Magnitude + _MinValue;
            u_xlat34.xyz = u_xlat16_33.xyz * u_xlat34.xxx;
            u_xlat33.xyz = u_xlat16_33.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb15)) ? u_xlat34.xyz : u_xlat33.xyz;
            u_xlat16_33.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_33.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_33.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_15.xyz = (-u_xlat16_13.xyz) + u_xlat16_33.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_15.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati14;
    } else {
        u_xlati14 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati14;
    u_xlati34 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati34) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.25 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.300000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.349999994 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.400000006 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.450000018 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.5 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.550000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.600000024 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.650000036 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.699999988 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.75 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.800000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.850000024 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.900000036 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.949999988 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati1 != 0) {
            u_xlat10_17.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_74 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_18.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = vec3(u_xlat10_74) * u_xlat10_18.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_17.xyz = u_xlat10_17.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb74 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb74 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat18.x = _Time.y * _Speed;
            u_xlat18.x = fract(u_xlat18.x);
            u_xlat18.x = u_xlat18.x + -0.5;
            u_xlat18.x = abs(u_xlat18.x) * _Magnitude + _MinValue;
            u_xlat18.xyz = u_xlat16_17.xyz * u_xlat18.xxx;
            u_xlat17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb74)) ? u_xlat18.xyz : u_xlat17.xyz;
            u_xlat16_17.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_17.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_17.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_17.xyz = (-u_xlat16_13.xyz) + u_xlat16_17.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_17.xyz + u_xlat16_13.xyz;
            SV_Target0.xyz = u_xlat16_2.xyz;
            SV_Target0.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1 != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LUMINANCE" "FOG_HEIGHT" "FOG_LERP" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	mediump float _LerpFactor;
uniform 	vec4 _HeigtFogParams2;
uniform 	vec4 _HeigtFogParams3;
uniform 	vec4 _HeigtFogRamp2;
uniform 	vec4 _HeigtFogRamp3;
uniform 	vec4 _HeigtFogColBase2;
uniform 	vec4 _HeigtFogColBase3;
uniform 	vec4 _HeigtFogColDelta2;
uniform 	vec4 _HeigtFogColDelta3;
uniform 	vec4 _HeigtFogColParams2;
uniform 	vec4 _HeigtFogColParams3;
uniform 	vec4 _HeigtFogRadialCol2;
uniform 	vec4 _HeigtFogRadialCol3;
uniform 	vec4 _Mihoyo_FogColor2;
uniform 	vec4 _Mihoyo_FogColor3;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
bool u_xlatb2;
vec4 u_xlat3;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec2 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat8;
mediump float u_xlat16_9;
mediump float u_xlat16_10;
float u_xlat12;
bool u_xlatb12;
float u_xlat18;
float u_xlat19;
bool u_xlatb19;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD1.xy = u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat2.y = u_xlat1.y;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat5.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat2.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat5.y = u_xlat16_4.x;
    u_xlat2.z = dot(u_xlat5.xy, u_xlat1.xz);
    vs_TEXCOORD3.xyz = u_xlat2.xyz;
    u_xlat18 = u_xlat0.y * _HeigtFogColParams3.x + _HeigtFogColParams3.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat16_3 = (-u_xlat18) + 2.0;
    u_xlat16_3 = u_xlat18 * u_xlat16_3;
    u_xlat1.xyz = vec3(u_xlat16_3) * _HeigtFogColDelta3.xyz + _HeigtFogColBase3.xyz;
    u_xlat2.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol3.xyz;
    u_xlat0.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
    u_xlat6.x = u_xlat0.y * _HeigtFogColParams2.x + _HeigtFogColParams2.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat0.x = dot(u_xlat0.xzw, u_xlat0.xzw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat18 = u_xlat0.x + (-_HeigtFogRamp3.w);
    u_xlat18 = u_xlat18 * _HeigtFogColParams3.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat18 = u_xlat0.x * _HeigtFogParams3.z + _HeigtFogParams3.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat19 = (-u_xlat18) + 2.0;
    u_xlat18 = u_xlat18 * u_xlat19;
    u_xlat19 = u_xlat18 * _HeigtFogColDelta3.w;
    u_xlat2.x = _ProjectionParams.z * 0.999899983;
#ifdef UNITY_ADRENO_ES3
    u_xlatb2 = !!(u_xlat0.x>=u_xlat2.x);
#else
    u_xlatb2 = u_xlat0.x>=u_xlat2.x;
#endif
    u_xlat18 = (u_xlatb2) ? u_xlat19 : u_xlat18;
    u_xlat18 = log2(u_xlat18);
    u_xlat18 = u_xlat18 * _Mihoyo_FogColor3.w;
    u_xlat18 = exp2(u_xlat18);
    u_xlat18 = min(u_xlat18, _HeigtFogColBase3.w);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat18 = (-u_xlat18) + 1.0;
    u_xlat19 = u_xlat0.z * _HeigtFogParams3.x;
    u_xlat12 = u_xlat0.z * _HeigtFogParams2.x;
    u_xlat8.x = u_xlat19 * -1.44269502;
    u_xlat8.x = exp2(u_xlat8.x);
    u_xlat8.x = (-u_xlat8.x) + 1.0;
    u_xlat8.x = u_xlat8.x / u_xlat19;
#ifdef UNITY_ADRENO_ES3
    u_xlatb19 = !!(0.00999999978<abs(u_xlat19));
#else
    u_xlatb19 = 0.00999999978<abs(u_xlat19);
#endif
    u_xlat16_3 = (u_xlatb19) ? u_xlat8.x : 1.0;
    u_xlat19 = u_xlat0.x * _HeigtFogParams3.y;
    u_xlat16_3 = u_xlat19 * u_xlat16_3;
    u_xlat16_3 = exp2((-u_xlat16_3));
    u_xlat16_3 = min(u_xlat16_3, 1.0);
    u_xlat16_3 = (-u_xlat16_3) + 1.0;
    u_xlat19 = u_xlat0.x * _HeigtFogRamp3.x + _HeigtFogRamp3.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat19 = min(max(u_xlat19, 0.0), 1.0);
#else
    u_xlat19 = clamp(u_xlat19, 0.0, 1.0);
#endif
    u_xlat16_9 = (-u_xlat19) + 2.0;
    u_xlat16_9 = u_xlat19 * u_xlat16_9;
    u_xlat19 = u_xlat16_9 * _HeigtFogRamp3.z + (-_HeigtFogRamp3.z);
    u_xlat19 = u_xlat19 + 1.0;
    u_xlat16_3 = u_xlat19 * u_xlat16_3;
    u_xlat19 = min(u_xlat16_3, _HeigtFogColBase3.w);
    u_xlat8.x = (-u_xlat19) + 1.0;
    u_xlat1.xyz = u_xlat1.xyz * u_xlat8.xxx;
    u_xlat3.w = u_xlat18 * u_xlat8.x;
    u_xlat3.xyz = _Mihoyo_FogColor3.xyz * vec3(u_xlat19) + u_xlat1.xyz;
    u_xlat16_4.x = (-u_xlat6.x) + 2.0;
    u_xlat16_4.x = u_xlat6.x * u_xlat16_4.x;
    u_xlat1.xyz = u_xlat16_4.xxx * _HeigtFogColDelta2.xyz + _HeigtFogColBase2.xyz;
    u_xlat8.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol2.xyz;
    u_xlat6.x = u_xlat0.x + (-_HeigtFogRamp2.w);
    u_xlat6.x = u_xlat6.x * _HeigtFogColParams2.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat1.xyz = u_xlat6.xxx * u_xlat8.xyz + u_xlat1.xyz;
    u_xlat6.x = u_xlat0.x * _HeigtFogParams2.z + _HeigtFogParams2.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat18 = (-u_xlat6.x) + 2.0;
    u_xlat6.x = u_xlat18 * u_xlat6.x;
    u_xlat18 = u_xlat6.x * _HeigtFogColDelta2.w;
    u_xlat6.x = (u_xlatb2) ? u_xlat18 : u_xlat6.x;
    u_xlat6.x = log2(u_xlat6.x);
    u_xlat6.x = u_xlat6.x * _Mihoyo_FogColor2.w;
    u_xlat6.x = exp2(u_xlat6.x);
    u_xlat6.x = min(u_xlat6.x, _HeigtFogColBase2.w);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat18 = u_xlat12 * -1.44269502;
    u_xlat6.z = exp2(u_xlat18);
    u_xlat6.xz = (-u_xlat6.xz) + vec2(1.0, 1.0);
    u_xlat18 = u_xlat6.z / u_xlat12;
#ifdef UNITY_ADRENO_ES3
    u_xlatb12 = !!(0.00999999978<abs(u_xlat12));
#else
    u_xlatb12 = 0.00999999978<abs(u_xlat12);
#endif
    u_xlat16_4.x = (u_xlatb12) ? u_xlat18 : 1.0;
    u_xlat12 = u_xlat0.x * _HeigtFogParams2.y;
    u_xlat0.x = u_xlat0.x * _HeigtFogRamp2.x + _HeigtFogRamp2.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat16_4.x = u_xlat12 * u_xlat16_4.x;
    u_xlat16_4.x = exp2((-u_xlat16_4.x));
    u_xlat16_4.x = min(u_xlat16_4.x, 1.0);
    u_xlat16_4.x = (-u_xlat16_4.x) + 1.0;
    u_xlat16_10 = (-u_xlat0.x) + 2.0;
    u_xlat16_10 = u_xlat0.x * u_xlat16_10;
    u_xlat0.x = u_xlat16_10 * _HeigtFogRamp2.z + (-_HeigtFogRamp2.z);
    u_xlat0.x = u_xlat0.x + 1.0;
    u_xlat16_4.x = u_xlat0.x * u_xlat16_4.x;
    u_xlat0.x = min(u_xlat16_4.x, _HeigtFogColBase2.w);
    u_xlat12 = (-u_xlat0.x) + 1.0;
    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
    u_xlat2.w = u_xlat12 * u_xlat6.x;
    u_xlat2.xyz = _Mihoyo_FogColor2.xyz * u_xlat0.xxx + u_xlat1.xyz;
    u_xlat0 = (-u_xlat2) + u_xlat3;
    u_xlat0 = vec4(vec4(_LerpFactor, _LerpFactor, _LerpFactor, _LerpFactor)) * u_xlat0 + u_xlat2;
    vs_COLOR1 = u_xlat0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform 	mediump float _LumiFactor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform mediump sampler2D unity_Lightmap;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump float u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
int u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp vec3 u_xlat10_2;
mediump vec4 u_xlat16_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
int u_xlati4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp float u_xlat10_5;
int u_xlati5;
bool u_xlatb5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
vec2 u_xlat8;
mediump float u_xlat16_8;
int u_xlati8;
bool u_xlatb8;
mediump vec3 u_xlat16_9;
lowp float u_xlat10_9;
int u_xlati9;
bool u_xlatb9;
mediump vec3 u_xlat16_10;
vec2 u_xlat11;
mediump float u_xlat16_11;
int u_xlati11;
bool u_xlatb11;
mediump vec3 u_xlat16_12;
lowp float u_xlat10_12;
int u_xlati12;
bool u_xlatb12;
mediump vec3 u_xlat16_13;
vec2 u_xlat14;
mediump float u_xlat16_14;
int u_xlati14;
bool u_xlatb14;
mediump vec3 u_xlat16_15;
lowp float u_xlat10_15;
int u_xlati15;
bool u_xlatb15;
mediump vec3 u_xlat16_16;
vec3 u_xlat17;
mediump vec3 u_xlat16_17;
lowp vec3 u_xlat10_17;
int u_xlati17;
bool u_xlatb17;
vec3 u_xlat18;
mediump vec3 u_xlat16_18;
lowp vec3 u_xlat10_18;
bool u_xlatb18;
mediump float u_xlat16_19;
bool u_xlatb20;
vec3 u_xlat23;
mediump vec3 u_xlat16_23;
lowp vec3 u_xlat10_23;
bool u_xlatb23;
vec3 u_xlat24;
lowp vec3 u_xlat10_24;
int u_xlati24;
vec3 u_xlat27;
mediump vec3 u_xlat16_27;
lowp vec3 u_xlat10_27;
bool u_xlatb27;
vec3 u_xlat28;
lowp vec3 u_xlat10_28;
int u_xlati28;
vec3 u_xlat30;
mediump vec3 u_xlat16_30;
lowp vec3 u_xlat10_30;
bool u_xlatb30;
vec3 u_xlat31;
lowp vec3 u_xlat10_31;
int u_xlati31;
vec3 u_xlat33;
mediump vec3 u_xlat16_33;
lowp vec3 u_xlat10_33;
bool u_xlatb33;
vec3 u_xlat34;
lowp vec3 u_xlat10_34;
int u_xlati34;
vec3 u_xlat36;
mediump vec3 u_xlat16_36;
lowp vec3 u_xlat10_36;
int u_xlati36;
bool u_xlatb36;
vec3 u_xlat37;
lowp vec3 u_xlat10_37;
mediump float u_xlat16_38;
lowp float u_xlat10_59;
mediump float u_xlat16_63;
mediump float u_xlat16_64;
mediump float u_xlat16_67;
mediump float u_xlat16_70;
lowp float u_xlat10_74;
bool u_xlatb74;
void main()
{
    u_xlat16_0 = (-_UMin) + _UMax;
    u_xlat16_19 = u_xlat16_0 * 0.0250000004;
    u_xlat16_1 = u_xlat16_0 * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_19 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb20 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb20 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1 = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb20) * 0xffffffffu);
    if(u_xlati1 != 0) {
        u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_59 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_38 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_38 = u_xlat16_38 + u_xlat16_38;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_38)) + vs_TEXCOORD3.xyz;
        u_xlat10_4.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_4.xyz = vec3(u_xlat10_59) * u_xlat10_4.xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_Reflectivity);
        u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz + u_xlat16_4.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb4 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat23.x = _Time.y * _Speed;
        u_xlat23.x = fract(u_xlat23.x);
        u_xlat23.x = u_xlat23.x + -0.5;
        u_xlat23.x = abs(u_xlat23.x) * _Magnitude + _MinValue;
        u_xlat23.xyz = u_xlat16_2.xyz * u_xlat23.xxx;
        u_xlat5.xyz = u_xlat16_2.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb4)) ? u_xlat23.xyz : u_xlat5.xyz;
        u_xlat16_4.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
        u_xlat16_6.xyz = u_xlat16_4.xyz * unity_Lightmap_HDR.xxx;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_6.xyz = u_xlat16_3.xyz * u_xlat16_6.xyz;
        u_xlat16_38 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
        u_xlat16_38 = min(max(u_xlat16_38, 0.0), 1.0);
#else
        u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
#endif
        u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(u_xlat16_38) + vs_COLOR1.xyz;
        u_xlat16_4.x = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
        u_xlat16_4.xyz = (-u_xlat16_6.xyz) + u_xlat16_4.xxx;
        u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_4.xyz + u_xlat16_6.xyz;
        u_xlat16_3.xyz = u_xlat16_2.xyz;
        u_xlat16_3.w = _BloomFactor;
        u_xlat16_2.xyz = u_xlat16_2.xyz;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1 == 0) {
        u_xlat16_4.x = u_xlat16_0 * 0.0500000007 + _UMin;
        u_xlat16_4.x = u_xlat16_0 * 0.0250000004 + u_xlat16_4.x;
        u_xlat4.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_4.x;
        u_xlat4.x = u_xlat16_19 * _ScaleTime + u_xlat16_4.x;
        u_xlat4.xy = u_xlat4.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb23 = !!(vs_TEXCOORD0.x>=u_xlat4.y);
#else
        u_xlatb23 = vs_TEXCOORD0.x>=u_xlat4.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(u_xlat4.x>=vs_TEXCOORD0.x);
#else
        u_xlatb4 = u_xlat4.x>=vs_TEXCOORD0.x;
#endif
        u_xlati4 = int(uint(u_xlatb4) * 0xffffffffu & uint(u_xlatb23) * 0xffffffffu);
        if(u_xlati4 != 0) {
            u_xlat10_23.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_5 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_38 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_6.x = u_xlat16_38 + u_xlat16_38;
            u_xlat16_6.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_6.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_24.xyz = texture(_EnvTex, u_xlat16_6.xyz).xyz;
            u_xlat16_5.xyz = vec3(u_xlat10_5) * u_xlat10_24.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Reflectivity);
            u_xlat16_23.xyz = u_xlat10_23.xyz * _Color.xyz + u_xlat16_5.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat24.x = _Time.y * _Speed;
            u_xlat24.x = fract(u_xlat24.x);
            u_xlat24.x = u_xlat24.x + -0.5;
            u_xlat24.x = abs(u_xlat24.x) * _Magnitude + _MinValue;
            u_xlat24.xyz = u_xlat16_23.xyz * u_xlat24.xxx;
            u_xlat23.xyz = u_xlat16_23.xyz * vec3(_LightMapIntensity);
            u_xlat16_6.xyz = (bool(u_xlatb5)) ? u_xlat24.xyz : u_xlat23.xyz;
            u_xlat16_23.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_23.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_6.xyz = u_xlat16_6.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_7.xyz;
            u_xlat16_63 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_63 = min(max(u_xlat16_63, 0.0), 1.0);
#else
            u_xlat16_63 = clamp(u_xlat16_63, 0.0, 1.0);
#endif
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(u_xlat16_63) + vs_COLOR1.xyz;
            u_xlat16_23.x = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_5.xyz = (-u_xlat16_6.xyz) + u_xlat16_23.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_5.xyz + u_xlat16_6.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati4;
    } else {
        u_xlati4 = -1;
    //ENDIF
    }
    u_xlati5 = ~u_xlati4;
    u_xlati24 = ~u_xlati1;
    u_xlati5 = int(uint(u_xlati24) & uint(u_xlati5));
    if(u_xlati5 != 0) {
        u_xlat16_8 = u_xlat16_0 * 0.100000001 + _UMin;
        u_xlat16_8 = u_xlat16_0 * 0.0250000004 + u_xlat16_8;
        u_xlat8.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_8;
        u_xlat8.x = u_xlat16_19 * _ScaleTime + u_xlat16_8;
        u_xlat8.xy = u_xlat8.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb27 = !!(vs_TEXCOORD0.x>=u_xlat8.y);
#else
        u_xlatb27 = vs_TEXCOORD0.x>=u_xlat8.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb8 = !!(u_xlat8.x>=vs_TEXCOORD0.x);
#else
        u_xlatb8 = u_xlat8.x>=vs_TEXCOORD0.x;
#endif
        u_xlati8 = int(uint(u_xlatb8) * 0xffffffffu & uint(u_xlatb27) * 0xffffffffu);
        if(u_xlati8 != 0) {
            u_xlat10_27.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_9 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_6.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_7.x = u_xlat16_6.x + u_xlat16_6.x;
            u_xlat16_7.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_7.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_28.xyz = texture(_EnvTex, u_xlat16_7.xyz).xyz;
            u_xlat16_9.xyz = vec3(u_xlat10_9) * u_xlat10_28.xyz;
            u_xlat16_9.xyz = u_xlat16_9.xyz * vec3(_Reflectivity);
            u_xlat16_27.xyz = u_xlat10_27.xyz * _Color.xyz + u_xlat16_9.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb9 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb9 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28.x = _Time.y * _Speed;
            u_xlat28.x = fract(u_xlat28.x);
            u_xlat28.x = u_xlat28.x + -0.5;
            u_xlat28.x = abs(u_xlat28.x) * _Magnitude + _MinValue;
            u_xlat28.xyz = u_xlat16_27.xyz * u_xlat28.xxx;
            u_xlat27.xyz = u_xlat16_27.xyz * vec3(_LightMapIntensity);
            u_xlat16_7.xyz = (bool(u_xlatb9)) ? u_xlat28.xyz : u_xlat27.xyz;
            u_xlat16_27.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_10.xyz = u_xlat16_27.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_7.xyz = u_xlat16_7.xyz * _Color.xyz;
            u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat16_10.xyz;
            u_xlat16_64 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_64 = min(max(u_xlat16_64, 0.0), 1.0);
#else
            u_xlat16_64 = clamp(u_xlat16_64, 0.0, 1.0);
#endif
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(u_xlat16_64) + vs_COLOR1.xyz;
            u_xlat16_27.x = dot(u_xlat16_7.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_9.xyz = (-u_xlat16_7.xyz) + u_xlat16_27.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_9.xyz + u_xlat16_7.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati8;
    } else {
        u_xlati8 = -1;
    //ENDIF
    }
    u_xlati9 = ~u_xlati8;
    u_xlati28 = ~u_xlati1;
    u_xlati9 = int(uint(u_xlati28) & uint(u_xlati9));
    if(u_xlati9 != 0) {
        u_xlat16_11 = u_xlat16_0 * 0.150000006 + _UMin;
        u_xlat16_11 = u_xlat16_0 * 0.0250000004 + u_xlat16_11;
        u_xlat11.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_11;
        u_xlat11.x = u_xlat16_19 * _ScaleTime + u_xlat16_11;
        u_xlat11.xy = u_xlat11.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb30 = !!(vs_TEXCOORD0.x>=u_xlat11.y);
#else
        u_xlatb30 = vs_TEXCOORD0.x>=u_xlat11.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb11 = !!(u_xlat11.x>=vs_TEXCOORD0.x);
#else
        u_xlatb11 = u_xlat11.x>=vs_TEXCOORD0.x;
#endif
        u_xlati11 = int(uint(u_xlatb11) * 0xffffffffu & uint(u_xlatb30) * 0xffffffffu);
        if(u_xlati11 != 0) {
            u_xlat10_30.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_12 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_7.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_10.x = u_xlat16_7.x + u_xlat16_7.x;
            u_xlat16_10.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_10.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_31.xyz = texture(_EnvTex, u_xlat16_10.xyz).xyz;
            u_xlat16_12.xyz = vec3(u_xlat10_12) * u_xlat10_31.xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(_Reflectivity);
            u_xlat16_30.xyz = u_xlat10_30.xyz * _Color.xyz + u_xlat16_12.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb12 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb12 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat31.x = _Time.y * _Speed;
            u_xlat31.x = fract(u_xlat31.x);
            u_xlat31.x = u_xlat31.x + -0.5;
            u_xlat31.x = abs(u_xlat31.x) * _Magnitude + _MinValue;
            u_xlat31.xyz = u_xlat16_30.xyz * u_xlat31.xxx;
            u_xlat30.xyz = u_xlat16_30.xyz * vec3(_LightMapIntensity);
            u_xlat16_10.xyz = (bool(u_xlatb12)) ? u_xlat31.xyz : u_xlat30.xyz;
            u_xlat16_30.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_30.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_10.xyz = u_xlat16_10.xyz * _Color.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_10.xyz = u_xlat16_10.xyz * u_xlat16_13.xyz;
            u_xlat16_67 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_67 = min(max(u_xlat16_67, 0.0), 1.0);
#else
            u_xlat16_67 = clamp(u_xlat16_67, 0.0, 1.0);
#endif
            u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(u_xlat16_67) + vs_COLOR1.xyz;
            u_xlat16_30.x = dot(u_xlat16_10.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_12.xyz = (-u_xlat16_10.xyz) + u_xlat16_30.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_12.xyz + u_xlat16_10.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati11;
    } else {
        u_xlati11 = -1;
    //ENDIF
    }
    u_xlati12 = ~u_xlati11;
    u_xlati31 = ~u_xlati1;
    u_xlati12 = int(uint(u_xlati31) & uint(u_xlati12));
    if(u_xlati12 != 0) {
        u_xlat16_14 = u_xlat16_0 * 0.200000003 + _UMin;
        u_xlat16_14 = u_xlat16_0 * 0.0250000004 + u_xlat16_14;
        u_xlat14.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_14;
        u_xlat14.x = u_xlat16_19 * _ScaleTime + u_xlat16_14;
        u_xlat14.xy = u_xlat14.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb33 = !!(vs_TEXCOORD0.x>=u_xlat14.y);
#else
        u_xlatb33 = vs_TEXCOORD0.x>=u_xlat14.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb14 = !!(u_xlat14.x>=vs_TEXCOORD0.x);
#else
        u_xlatb14 = u_xlat14.x>=vs_TEXCOORD0.x;
#endif
        u_xlati14 = int(uint(u_xlatb14) * 0xffffffffu & uint(u_xlatb33) * 0xffffffffu);
        if(u_xlati14 != 0) {
            u_xlat10_33.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_15 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_10.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_10.x + u_xlat16_10.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_34.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_15.xyz = vec3(u_xlat10_15) * u_xlat10_34.xyz;
            u_xlat16_15.xyz = u_xlat16_15.xyz * vec3(_Reflectivity);
            u_xlat16_33.xyz = u_xlat10_33.xyz * _Color.xyz + u_xlat16_15.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb15 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb15 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat34.x = _Time.y * _Speed;
            u_xlat34.x = fract(u_xlat34.x);
            u_xlat34.x = u_xlat34.x + -0.5;
            u_xlat34.x = abs(u_xlat34.x) * _Magnitude + _MinValue;
            u_xlat34.xyz = u_xlat16_33.xyz * u_xlat34.xxx;
            u_xlat33.xyz = u_xlat16_33.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb15)) ? u_xlat34.xyz : u_xlat33.xyz;
            u_xlat16_33.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_33.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_33.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_15.xyz = (-u_xlat16_13.xyz) + u_xlat16_33.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_15.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati14;
    } else {
        u_xlati14 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati14;
    u_xlati34 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati34) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.25 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.300000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.349999994 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.400000006 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.450000018 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.5 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.550000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.600000024 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.650000036 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.699999988 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.75 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.800000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.850000024 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.900000036 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.949999988 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati1 != 0) {
            u_xlat10_17.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_74 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_18.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = vec3(u_xlat10_74) * u_xlat10_18.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_17.xyz = u_xlat10_17.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb74 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb74 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat18.x = _Time.y * _Speed;
            u_xlat18.x = fract(u_xlat18.x);
            u_xlat18.x = u_xlat18.x + -0.5;
            u_xlat18.x = abs(u_xlat18.x) * _Magnitude + _MinValue;
            u_xlat18.xyz = u_xlat16_17.xyz * u_xlat18.xxx;
            u_xlat17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb74)) ? u_xlat18.xyz : u_xlat17.xyz;
            u_xlat16_17.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_17.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_17.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_17.xyz = (-u_xlat16_13.xyz) + u_xlat16_17.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_17.xyz + u_xlat16_13.xyz;
            SV_Target0.xyz = u_xlat16_2.xyz;
            SV_Target0.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1 != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LUMINANCE" "FOG_HEIGHT" "FOG_LERP" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	mediump float _LerpFactor;
uniform 	vec4 _HeigtFogParams2;
uniform 	vec4 _HeigtFogParams3;
uniform 	vec4 _HeigtFogRamp2;
uniform 	vec4 _HeigtFogRamp3;
uniform 	vec4 _HeigtFogColBase2;
uniform 	vec4 _HeigtFogColBase3;
uniform 	vec4 _HeigtFogColDelta2;
uniform 	vec4 _HeigtFogColDelta3;
uniform 	vec4 _HeigtFogColParams2;
uniform 	vec4 _HeigtFogColParams3;
uniform 	vec4 _HeigtFogRadialCol2;
uniform 	vec4 _HeigtFogRadialCol3;
uniform 	vec4 _Mihoyo_FogColor2;
uniform 	vec4 _Mihoyo_FogColor3;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
bool u_xlatb2;
vec4 u_xlat3;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec2 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat8;
mediump float u_xlat16_9;
mediump float u_xlat16_10;
float u_xlat12;
bool u_xlatb12;
float u_xlat18;
float u_xlat19;
bool u_xlatb19;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD1.xy = u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat2.y = u_xlat1.y;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat5.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat2.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat5.y = u_xlat16_4.x;
    u_xlat2.z = dot(u_xlat5.xy, u_xlat1.xz);
    vs_TEXCOORD3.xyz = u_xlat2.xyz;
    u_xlat18 = u_xlat0.y * _HeigtFogColParams3.x + _HeigtFogColParams3.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat16_3 = (-u_xlat18) + 2.0;
    u_xlat16_3 = u_xlat18 * u_xlat16_3;
    u_xlat1.xyz = vec3(u_xlat16_3) * _HeigtFogColDelta3.xyz + _HeigtFogColBase3.xyz;
    u_xlat2.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol3.xyz;
    u_xlat0.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
    u_xlat6.x = u_xlat0.y * _HeigtFogColParams2.x + _HeigtFogColParams2.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat0.x = dot(u_xlat0.xzw, u_xlat0.xzw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat18 = u_xlat0.x + (-_HeigtFogRamp3.w);
    u_xlat18 = u_xlat18 * _HeigtFogColParams3.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat18 = u_xlat0.x * _HeigtFogParams3.z + _HeigtFogParams3.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat19 = (-u_xlat18) + 2.0;
    u_xlat18 = u_xlat18 * u_xlat19;
    u_xlat19 = u_xlat18 * _HeigtFogColDelta3.w;
    u_xlat2.x = _ProjectionParams.z * 0.999899983;
#ifdef UNITY_ADRENO_ES3
    u_xlatb2 = !!(u_xlat0.x>=u_xlat2.x);
#else
    u_xlatb2 = u_xlat0.x>=u_xlat2.x;
#endif
    u_xlat18 = (u_xlatb2) ? u_xlat19 : u_xlat18;
    u_xlat18 = log2(u_xlat18);
    u_xlat18 = u_xlat18 * _Mihoyo_FogColor3.w;
    u_xlat18 = exp2(u_xlat18);
    u_xlat18 = min(u_xlat18, _HeigtFogColBase3.w);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat18 = (-u_xlat18) + 1.0;
    u_xlat19 = u_xlat0.z * _HeigtFogParams3.x;
    u_xlat12 = u_xlat0.z * _HeigtFogParams2.x;
    u_xlat8.x = u_xlat19 * -1.44269502;
    u_xlat8.x = exp2(u_xlat8.x);
    u_xlat8.x = (-u_xlat8.x) + 1.0;
    u_xlat8.x = u_xlat8.x / u_xlat19;
#ifdef UNITY_ADRENO_ES3
    u_xlatb19 = !!(0.00999999978<abs(u_xlat19));
#else
    u_xlatb19 = 0.00999999978<abs(u_xlat19);
#endif
    u_xlat16_3 = (u_xlatb19) ? u_xlat8.x : 1.0;
    u_xlat19 = u_xlat0.x * _HeigtFogParams3.y;
    u_xlat16_3 = u_xlat19 * u_xlat16_3;
    u_xlat16_3 = exp2((-u_xlat16_3));
    u_xlat16_3 = min(u_xlat16_3, 1.0);
    u_xlat16_3 = (-u_xlat16_3) + 1.0;
    u_xlat19 = u_xlat0.x * _HeigtFogRamp3.x + _HeigtFogRamp3.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat19 = min(max(u_xlat19, 0.0), 1.0);
#else
    u_xlat19 = clamp(u_xlat19, 0.0, 1.0);
#endif
    u_xlat16_9 = (-u_xlat19) + 2.0;
    u_xlat16_9 = u_xlat19 * u_xlat16_9;
    u_xlat19 = u_xlat16_9 * _HeigtFogRamp3.z + (-_HeigtFogRamp3.z);
    u_xlat19 = u_xlat19 + 1.0;
    u_xlat16_3 = u_xlat19 * u_xlat16_3;
    u_xlat19 = min(u_xlat16_3, _HeigtFogColBase3.w);
    u_xlat8.x = (-u_xlat19) + 1.0;
    u_xlat1.xyz = u_xlat1.xyz * u_xlat8.xxx;
    u_xlat3.w = u_xlat18 * u_xlat8.x;
    u_xlat3.xyz = _Mihoyo_FogColor3.xyz * vec3(u_xlat19) + u_xlat1.xyz;
    u_xlat16_4.x = (-u_xlat6.x) + 2.0;
    u_xlat16_4.x = u_xlat6.x * u_xlat16_4.x;
    u_xlat1.xyz = u_xlat16_4.xxx * _HeigtFogColDelta2.xyz + _HeigtFogColBase2.xyz;
    u_xlat8.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol2.xyz;
    u_xlat6.x = u_xlat0.x + (-_HeigtFogRamp2.w);
    u_xlat6.x = u_xlat6.x * _HeigtFogColParams2.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat1.xyz = u_xlat6.xxx * u_xlat8.xyz + u_xlat1.xyz;
    u_xlat6.x = u_xlat0.x * _HeigtFogParams2.z + _HeigtFogParams2.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat18 = (-u_xlat6.x) + 2.0;
    u_xlat6.x = u_xlat18 * u_xlat6.x;
    u_xlat18 = u_xlat6.x * _HeigtFogColDelta2.w;
    u_xlat6.x = (u_xlatb2) ? u_xlat18 : u_xlat6.x;
    u_xlat6.x = log2(u_xlat6.x);
    u_xlat6.x = u_xlat6.x * _Mihoyo_FogColor2.w;
    u_xlat6.x = exp2(u_xlat6.x);
    u_xlat6.x = min(u_xlat6.x, _HeigtFogColBase2.w);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat18 = u_xlat12 * -1.44269502;
    u_xlat6.z = exp2(u_xlat18);
    u_xlat6.xz = (-u_xlat6.xz) + vec2(1.0, 1.0);
    u_xlat18 = u_xlat6.z / u_xlat12;
#ifdef UNITY_ADRENO_ES3
    u_xlatb12 = !!(0.00999999978<abs(u_xlat12));
#else
    u_xlatb12 = 0.00999999978<abs(u_xlat12);
#endif
    u_xlat16_4.x = (u_xlatb12) ? u_xlat18 : 1.0;
    u_xlat12 = u_xlat0.x * _HeigtFogParams2.y;
    u_xlat0.x = u_xlat0.x * _HeigtFogRamp2.x + _HeigtFogRamp2.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat16_4.x = u_xlat12 * u_xlat16_4.x;
    u_xlat16_4.x = exp2((-u_xlat16_4.x));
    u_xlat16_4.x = min(u_xlat16_4.x, 1.0);
    u_xlat16_4.x = (-u_xlat16_4.x) + 1.0;
    u_xlat16_10 = (-u_xlat0.x) + 2.0;
    u_xlat16_10 = u_xlat0.x * u_xlat16_10;
    u_xlat0.x = u_xlat16_10 * _HeigtFogRamp2.z + (-_HeigtFogRamp2.z);
    u_xlat0.x = u_xlat0.x + 1.0;
    u_xlat16_4.x = u_xlat0.x * u_xlat16_4.x;
    u_xlat0.x = min(u_xlat16_4.x, _HeigtFogColBase2.w);
    u_xlat12 = (-u_xlat0.x) + 1.0;
    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
    u_xlat2.w = u_xlat12 * u_xlat6.x;
    u_xlat2.xyz = _Mihoyo_FogColor2.xyz * u_xlat0.xxx + u_xlat1.xyz;
    u_xlat0 = (-u_xlat2) + u_xlat3;
    u_xlat0 = vec4(vec4(_LerpFactor, _LerpFactor, _LerpFactor, _LerpFactor)) * u_xlat0 + u_xlat2;
    vs_COLOR1 = u_xlat0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform 	mediump float _LumiFactor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform mediump sampler2D unity_Lightmap;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump float u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
int u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp vec3 u_xlat10_2;
mediump vec4 u_xlat16_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
int u_xlati4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp float u_xlat10_5;
int u_xlati5;
bool u_xlatb5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
vec2 u_xlat8;
mediump float u_xlat16_8;
int u_xlati8;
bool u_xlatb8;
mediump vec3 u_xlat16_9;
lowp float u_xlat10_9;
int u_xlati9;
bool u_xlatb9;
mediump vec3 u_xlat16_10;
vec2 u_xlat11;
mediump float u_xlat16_11;
int u_xlati11;
bool u_xlatb11;
mediump vec3 u_xlat16_12;
lowp float u_xlat10_12;
int u_xlati12;
bool u_xlatb12;
mediump vec3 u_xlat16_13;
vec2 u_xlat14;
mediump float u_xlat16_14;
int u_xlati14;
bool u_xlatb14;
mediump vec3 u_xlat16_15;
lowp float u_xlat10_15;
int u_xlati15;
bool u_xlatb15;
mediump vec3 u_xlat16_16;
vec3 u_xlat17;
mediump vec3 u_xlat16_17;
lowp vec3 u_xlat10_17;
int u_xlati17;
bool u_xlatb17;
vec3 u_xlat18;
mediump vec3 u_xlat16_18;
lowp vec3 u_xlat10_18;
bool u_xlatb18;
mediump float u_xlat16_19;
bool u_xlatb20;
vec3 u_xlat23;
mediump vec3 u_xlat16_23;
lowp vec3 u_xlat10_23;
bool u_xlatb23;
vec3 u_xlat24;
lowp vec3 u_xlat10_24;
int u_xlati24;
vec3 u_xlat27;
mediump vec3 u_xlat16_27;
lowp vec3 u_xlat10_27;
bool u_xlatb27;
vec3 u_xlat28;
lowp vec3 u_xlat10_28;
int u_xlati28;
vec3 u_xlat30;
mediump vec3 u_xlat16_30;
lowp vec3 u_xlat10_30;
bool u_xlatb30;
vec3 u_xlat31;
lowp vec3 u_xlat10_31;
int u_xlati31;
vec3 u_xlat33;
mediump vec3 u_xlat16_33;
lowp vec3 u_xlat10_33;
bool u_xlatb33;
vec3 u_xlat34;
lowp vec3 u_xlat10_34;
int u_xlati34;
vec3 u_xlat36;
mediump vec3 u_xlat16_36;
lowp vec3 u_xlat10_36;
int u_xlati36;
bool u_xlatb36;
vec3 u_xlat37;
lowp vec3 u_xlat10_37;
mediump float u_xlat16_38;
lowp float u_xlat10_59;
mediump float u_xlat16_63;
mediump float u_xlat16_64;
mediump float u_xlat16_67;
mediump float u_xlat16_70;
lowp float u_xlat10_74;
bool u_xlatb74;
void main()
{
    u_xlat16_0 = (-_UMin) + _UMax;
    u_xlat16_19 = u_xlat16_0 * 0.0250000004;
    u_xlat16_1 = u_xlat16_0 * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_19 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb20 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb20 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1 = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb20) * 0xffffffffu);
    if(u_xlati1 != 0) {
        u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_59 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_38 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_38 = u_xlat16_38 + u_xlat16_38;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_38)) + vs_TEXCOORD3.xyz;
        u_xlat10_4.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_4.xyz = vec3(u_xlat10_59) * u_xlat10_4.xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_Reflectivity);
        u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz + u_xlat16_4.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb4 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat23.x = _Time.y * _Speed;
        u_xlat23.x = fract(u_xlat23.x);
        u_xlat23.x = u_xlat23.x + -0.5;
        u_xlat23.x = abs(u_xlat23.x) * _Magnitude + _MinValue;
        u_xlat23.xyz = u_xlat16_2.xyz * u_xlat23.xxx;
        u_xlat5.xyz = u_xlat16_2.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb4)) ? u_xlat23.xyz : u_xlat5.xyz;
        u_xlat16_4.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
        u_xlat16_6.xyz = u_xlat16_4.xyz * unity_Lightmap_HDR.xxx;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_6.xyz = u_xlat16_3.xyz * u_xlat16_6.xyz;
        u_xlat16_38 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
        u_xlat16_38 = min(max(u_xlat16_38, 0.0), 1.0);
#else
        u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
#endif
        u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(u_xlat16_38) + vs_COLOR1.xyz;
        u_xlat16_4.x = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
        u_xlat16_4.xyz = (-u_xlat16_6.xyz) + u_xlat16_4.xxx;
        u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_4.xyz + u_xlat16_6.xyz;
        u_xlat16_3.xyz = u_xlat16_2.xyz;
        u_xlat16_3.w = _BloomFactor;
        u_xlat16_2.xyz = u_xlat16_2.xyz;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1 == 0) {
        u_xlat16_4.x = u_xlat16_0 * 0.0500000007 + _UMin;
        u_xlat16_4.x = u_xlat16_0 * 0.0250000004 + u_xlat16_4.x;
        u_xlat4.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_4.x;
        u_xlat4.x = u_xlat16_19 * _ScaleTime + u_xlat16_4.x;
        u_xlat4.xy = u_xlat4.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb23 = !!(vs_TEXCOORD0.x>=u_xlat4.y);
#else
        u_xlatb23 = vs_TEXCOORD0.x>=u_xlat4.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(u_xlat4.x>=vs_TEXCOORD0.x);
#else
        u_xlatb4 = u_xlat4.x>=vs_TEXCOORD0.x;
#endif
        u_xlati4 = int(uint(u_xlatb4) * 0xffffffffu & uint(u_xlatb23) * 0xffffffffu);
        if(u_xlati4 != 0) {
            u_xlat10_23.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_5 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_38 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_6.x = u_xlat16_38 + u_xlat16_38;
            u_xlat16_6.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_6.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_24.xyz = texture(_EnvTex, u_xlat16_6.xyz).xyz;
            u_xlat16_5.xyz = vec3(u_xlat10_5) * u_xlat10_24.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Reflectivity);
            u_xlat16_23.xyz = u_xlat10_23.xyz * _Color.xyz + u_xlat16_5.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat24.x = _Time.y * _Speed;
            u_xlat24.x = fract(u_xlat24.x);
            u_xlat24.x = u_xlat24.x + -0.5;
            u_xlat24.x = abs(u_xlat24.x) * _Magnitude + _MinValue;
            u_xlat24.xyz = u_xlat16_23.xyz * u_xlat24.xxx;
            u_xlat23.xyz = u_xlat16_23.xyz * vec3(_LightMapIntensity);
            u_xlat16_6.xyz = (bool(u_xlatb5)) ? u_xlat24.xyz : u_xlat23.xyz;
            u_xlat16_23.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_23.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_6.xyz = u_xlat16_6.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_7.xyz;
            u_xlat16_63 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_63 = min(max(u_xlat16_63, 0.0), 1.0);
#else
            u_xlat16_63 = clamp(u_xlat16_63, 0.0, 1.0);
#endif
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(u_xlat16_63) + vs_COLOR1.xyz;
            u_xlat16_23.x = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_5.xyz = (-u_xlat16_6.xyz) + u_xlat16_23.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_5.xyz + u_xlat16_6.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati4;
    } else {
        u_xlati4 = -1;
    //ENDIF
    }
    u_xlati5 = ~u_xlati4;
    u_xlati24 = ~u_xlati1;
    u_xlati5 = int(uint(u_xlati24) & uint(u_xlati5));
    if(u_xlati5 != 0) {
        u_xlat16_8 = u_xlat16_0 * 0.100000001 + _UMin;
        u_xlat16_8 = u_xlat16_0 * 0.0250000004 + u_xlat16_8;
        u_xlat8.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_8;
        u_xlat8.x = u_xlat16_19 * _ScaleTime + u_xlat16_8;
        u_xlat8.xy = u_xlat8.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb27 = !!(vs_TEXCOORD0.x>=u_xlat8.y);
#else
        u_xlatb27 = vs_TEXCOORD0.x>=u_xlat8.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb8 = !!(u_xlat8.x>=vs_TEXCOORD0.x);
#else
        u_xlatb8 = u_xlat8.x>=vs_TEXCOORD0.x;
#endif
        u_xlati8 = int(uint(u_xlatb8) * 0xffffffffu & uint(u_xlatb27) * 0xffffffffu);
        if(u_xlati8 != 0) {
            u_xlat10_27.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_9 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_6.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_7.x = u_xlat16_6.x + u_xlat16_6.x;
            u_xlat16_7.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_7.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_28.xyz = texture(_EnvTex, u_xlat16_7.xyz).xyz;
            u_xlat16_9.xyz = vec3(u_xlat10_9) * u_xlat10_28.xyz;
            u_xlat16_9.xyz = u_xlat16_9.xyz * vec3(_Reflectivity);
            u_xlat16_27.xyz = u_xlat10_27.xyz * _Color.xyz + u_xlat16_9.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb9 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb9 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28.x = _Time.y * _Speed;
            u_xlat28.x = fract(u_xlat28.x);
            u_xlat28.x = u_xlat28.x + -0.5;
            u_xlat28.x = abs(u_xlat28.x) * _Magnitude + _MinValue;
            u_xlat28.xyz = u_xlat16_27.xyz * u_xlat28.xxx;
            u_xlat27.xyz = u_xlat16_27.xyz * vec3(_LightMapIntensity);
            u_xlat16_7.xyz = (bool(u_xlatb9)) ? u_xlat28.xyz : u_xlat27.xyz;
            u_xlat16_27.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_10.xyz = u_xlat16_27.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_7.xyz = u_xlat16_7.xyz * _Color.xyz;
            u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat16_10.xyz;
            u_xlat16_64 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_64 = min(max(u_xlat16_64, 0.0), 1.0);
#else
            u_xlat16_64 = clamp(u_xlat16_64, 0.0, 1.0);
#endif
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(u_xlat16_64) + vs_COLOR1.xyz;
            u_xlat16_27.x = dot(u_xlat16_7.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_9.xyz = (-u_xlat16_7.xyz) + u_xlat16_27.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_9.xyz + u_xlat16_7.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati8;
    } else {
        u_xlati8 = -1;
    //ENDIF
    }
    u_xlati9 = ~u_xlati8;
    u_xlati28 = ~u_xlati1;
    u_xlati9 = int(uint(u_xlati28) & uint(u_xlati9));
    if(u_xlati9 != 0) {
        u_xlat16_11 = u_xlat16_0 * 0.150000006 + _UMin;
        u_xlat16_11 = u_xlat16_0 * 0.0250000004 + u_xlat16_11;
        u_xlat11.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_11;
        u_xlat11.x = u_xlat16_19 * _ScaleTime + u_xlat16_11;
        u_xlat11.xy = u_xlat11.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb30 = !!(vs_TEXCOORD0.x>=u_xlat11.y);
#else
        u_xlatb30 = vs_TEXCOORD0.x>=u_xlat11.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb11 = !!(u_xlat11.x>=vs_TEXCOORD0.x);
#else
        u_xlatb11 = u_xlat11.x>=vs_TEXCOORD0.x;
#endif
        u_xlati11 = int(uint(u_xlatb11) * 0xffffffffu & uint(u_xlatb30) * 0xffffffffu);
        if(u_xlati11 != 0) {
            u_xlat10_30.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_12 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_7.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_10.x = u_xlat16_7.x + u_xlat16_7.x;
            u_xlat16_10.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_10.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_31.xyz = texture(_EnvTex, u_xlat16_10.xyz).xyz;
            u_xlat16_12.xyz = vec3(u_xlat10_12) * u_xlat10_31.xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(_Reflectivity);
            u_xlat16_30.xyz = u_xlat10_30.xyz * _Color.xyz + u_xlat16_12.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb12 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb12 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat31.x = _Time.y * _Speed;
            u_xlat31.x = fract(u_xlat31.x);
            u_xlat31.x = u_xlat31.x + -0.5;
            u_xlat31.x = abs(u_xlat31.x) * _Magnitude + _MinValue;
            u_xlat31.xyz = u_xlat16_30.xyz * u_xlat31.xxx;
            u_xlat30.xyz = u_xlat16_30.xyz * vec3(_LightMapIntensity);
            u_xlat16_10.xyz = (bool(u_xlatb12)) ? u_xlat31.xyz : u_xlat30.xyz;
            u_xlat16_30.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_30.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_10.xyz = u_xlat16_10.xyz * _Color.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_10.xyz = u_xlat16_10.xyz * u_xlat16_13.xyz;
            u_xlat16_67 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_67 = min(max(u_xlat16_67, 0.0), 1.0);
#else
            u_xlat16_67 = clamp(u_xlat16_67, 0.0, 1.0);
#endif
            u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(u_xlat16_67) + vs_COLOR1.xyz;
            u_xlat16_30.x = dot(u_xlat16_10.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_12.xyz = (-u_xlat16_10.xyz) + u_xlat16_30.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_12.xyz + u_xlat16_10.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati11;
    } else {
        u_xlati11 = -1;
    //ENDIF
    }
    u_xlati12 = ~u_xlati11;
    u_xlati31 = ~u_xlati1;
    u_xlati12 = int(uint(u_xlati31) & uint(u_xlati12));
    if(u_xlati12 != 0) {
        u_xlat16_14 = u_xlat16_0 * 0.200000003 + _UMin;
        u_xlat16_14 = u_xlat16_0 * 0.0250000004 + u_xlat16_14;
        u_xlat14.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_14;
        u_xlat14.x = u_xlat16_19 * _ScaleTime + u_xlat16_14;
        u_xlat14.xy = u_xlat14.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb33 = !!(vs_TEXCOORD0.x>=u_xlat14.y);
#else
        u_xlatb33 = vs_TEXCOORD0.x>=u_xlat14.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb14 = !!(u_xlat14.x>=vs_TEXCOORD0.x);
#else
        u_xlatb14 = u_xlat14.x>=vs_TEXCOORD0.x;
#endif
        u_xlati14 = int(uint(u_xlatb14) * 0xffffffffu & uint(u_xlatb33) * 0xffffffffu);
        if(u_xlati14 != 0) {
            u_xlat10_33.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_15 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_10.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_10.x + u_xlat16_10.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_34.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_15.xyz = vec3(u_xlat10_15) * u_xlat10_34.xyz;
            u_xlat16_15.xyz = u_xlat16_15.xyz * vec3(_Reflectivity);
            u_xlat16_33.xyz = u_xlat10_33.xyz * _Color.xyz + u_xlat16_15.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb15 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb15 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat34.x = _Time.y * _Speed;
            u_xlat34.x = fract(u_xlat34.x);
            u_xlat34.x = u_xlat34.x + -0.5;
            u_xlat34.x = abs(u_xlat34.x) * _Magnitude + _MinValue;
            u_xlat34.xyz = u_xlat16_33.xyz * u_xlat34.xxx;
            u_xlat33.xyz = u_xlat16_33.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb15)) ? u_xlat34.xyz : u_xlat33.xyz;
            u_xlat16_33.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_33.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_33.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_15.xyz = (-u_xlat16_13.xyz) + u_xlat16_33.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_15.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati14;
    } else {
        u_xlati14 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati14;
    u_xlati34 = ~u_xlati1;
    u_xlati15 = int(uint(u_xlati34) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.25 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.300000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.349999994 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.400000006 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.450000018 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.5 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.550000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.600000024 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.650000036 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.699999988 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.75 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.800000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.850000024 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.900000036 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat16_36.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_36.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.949999988 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati1 != 0) {
            u_xlat10_17.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_74 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_18.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = vec3(u_xlat10_74) * u_xlat10_18.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_17.xyz = u_xlat10_17.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb74 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb74 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat18.x = _Time.y * _Speed;
            u_xlat18.x = fract(u_xlat18.x);
            u_xlat18.x = u_xlat18.x + -0.5;
            u_xlat18.x = abs(u_xlat18.x) * _Magnitude + _MinValue;
            u_xlat18.xyz = u_xlat16_17.xyz * u_xlat18.xxx;
            u_xlat17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb74)) ? u_xlat18.xyz : u_xlat17.xyz;
            u_xlat16_17.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
            u_xlat16_16.xyz = u_xlat16_17.xyz * unity_Lightmap_HDR.xxx;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat16_16.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_17.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_17.xyz = (-u_xlat16_13.xyz) + u_xlat16_17.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_17.xyz + u_xlat16_13.xyz;
            SV_Target0.xyz = u_xlat16_2.xyz;
            SV_Target0.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1 != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_LightMap_ON" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _FogColorNear;
uniform 	vec4 _FogColorFar;
uniform 	float _FogColorIntensity;
uniform 	float _FogIntensity;
uniform 	float _FogEffectStart;
uniform 	float _FogEffectLimit;
uniform 	float _FogStartDistance;
uniform 	float _FogEndDistance;
uniform 	vec4 _PropertyLightmapTexTS;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec3 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat2.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat5.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat2.y = u_xlat16_4.x;
    u_xlat5.z = dot(u_xlat2.xy, u_xlat1.xz);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
#ifdef UNITY_ADRENO_ES3
    u_xlatb21 = !!(0.5<_FogColorNear.w);
#else
    u_xlatb21 = 0.5<_FogColorNear.w;
#endif
    if(u_xlatb21){
        u_xlat1.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat21 = dot(u_xlat1.xzw, u_xlat1.xzw);
        u_xlat21 = sqrt(u_xlat21);
        u_xlat21 = u_xlat21 + (-_FogStartDistance);
        u_xlat21 = max(u_xlat21, 0.0);
        u_xlat1.xz = vec2(u_xlat21) * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat1.xz = u_xlat1.xz * (-u_xlat1.xz);
        u_xlat1.xz = u_xlat1.xz * vec2(1.44269502, 1.44269502);
        u_xlat1.xz = exp2(u_xlat1.xz);
        u_xlat21 = (-u_xlat1.x) + 1.0;
        u_xlat21 = u_xlat21 * _FogEffectLimit;
        u_xlat21 = max(u_xlat21, _FogEffectStart);
        u_xlat2.w = min(u_xlat21, _FogEffectLimit);
        u_xlat6.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat1.zzz * u_xlat6.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    } else {
        u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
        u_xlat0.x = sqrt(u_xlat0.x);
        u_xlat0.x = u_xlat0.x + (-_FogStartDistance);
        u_xlat0.x = max(u_xlat0.x, 0.0);
        u_xlat0.xy = u_xlat0.xx * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat0.xy = u_xlat0.xy * vec2(500.0, 1000.0);
        u_xlat14 = (-_FogStartDistance) + _FogEndDistance;
        u_xlat14 = max(u_xlat14, 0.100000001);
        u_xlat0.xy = u_xlat0.yx / vec2(u_xlat14);
        u_xlat7.x = u_xlat0.y * _FogEffectLimit;
        u_xlat7.x = max(u_xlat7.x, _FogEffectStart);
        u_xlat2.w = min(u_xlat7.x, _FogEffectLimit);
        u_xlat0.x = u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
        u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
        u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
        u_xlat0.x = (-u_xlat0.x) + 1.0;
        u_xlat7.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat0.xxx * u_xlat7.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    //ENDIF
    }
    u_xlat0.xy = in_TEXCOORD1.xy * _PropertyLightmapTexTS.xy + _PropertyLightmapTexTS.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat5.y = u_xlat1.y;
    vs_TEXCOORD3.xyz = u_xlat5.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform lowp sampler2D _PropertyLightmapTex;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
ivec2 u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp float u_xlat10_2;
bool u_xlatb2;
mediump vec4 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
lowp vec3 u_xlat10_7;
mediump vec3 u_xlat16_8;
mediump float u_xlat16_9;
vec3 u_xlat10;
mediump vec3 u_xlat16_10;
lowp vec3 u_xlat10_10;
ivec2 u_xlati10;
bool u_xlatb10;
vec3 u_xlat11;
lowp vec3 u_xlat10_11;
vec3 u_xlat15;
lowp vec3 u_xlat10_15;
mediump float u_xlat16_18;
lowp float u_xlat10_19;
bool u_xlatb19;
float u_xlat28;
void main()
{
    u_xlat16_0.x = (-_UMin) + _UMax;
    u_xlat16_9 = u_xlat16_0.x * 0.0250000004;
    u_xlat16_1 = u_xlat16_0.x * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_9 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb10 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb10 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1.x = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb10) * 0xffffffffu);
    if(u_xlati1.x != 0) {
        u_xlat10_10.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_2 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
        u_xlat10_11.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_2.xyz = vec3(u_xlat10_2) * u_xlat10_11.xyz;
        u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Reflectivity);
        u_xlat16_10.xyz = u_xlat10_10.xyz * _Color.xyz + u_xlat16_2.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb2 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb2 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat11.x = _Time.y * _Speed;
        u_xlat11.x = fract(u_xlat11.x);
        u_xlat11.x = u_xlat11.x + -0.5;
        u_xlat11.x = abs(u_xlat11.x) * _Magnitude + _MinValue;
        u_xlat11.xyz = u_xlat16_10.xyz * u_xlat11.xxx;
        u_xlat10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb2)) ? u_xlat11.xyz : u_xlat10.xyz;
        u_xlat10_10.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_4.xyz = u_xlat10_10.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_5.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;
        u_xlat16_3.xyz = (-u_xlat16_3.xyz) * u_xlat16_4.xyz + vs_COLOR1.xyz;
        u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_3.xyz + u_xlat16_5.xyz;
        u_xlat16_2.w = _BloomFactor;
        u_xlat16_3 = u_xlat16_2;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1.x == 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.0500000007 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.100000001 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.150000006 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.200000003 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.25 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.300000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.349999994 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.400000006 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.450000018 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.5 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.550000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.600000024 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.650000036 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.699999988 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.75 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.800000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.850000024 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.900000036 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.949999988 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.x = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.x != 0) {
            u_xlat10_10.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_6.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_0.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_0.x = u_xlat16_0.x + u_xlat16_0.x;
            u_xlat16_0.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_0.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_15.xyz = texture(_EnvTex, u_xlat16_0.xyz).xyz;
            u_xlat16_6.xyz = u_xlat10_6.xxx * u_xlat10_15.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_10.xyz = u_xlat10_10.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb6 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb6 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat15.x = _Time.y * _Speed;
            u_xlat15.x = fract(u_xlat15.x);
            u_xlat15.x = u_xlat15.x + -0.5;
            u_xlat15.x = abs(u_xlat15.x) * _Magnitude + _MinValue;
            u_xlat15.xyz = u_xlat16_10.xyz * u_xlat15.xxx;
            u_xlat10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity);
            u_xlat16_0.xyz = (bool(u_xlatb6)) ? u_xlat15.xyz : u_xlat10.xyz;
            u_xlat10_10.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz;
            u_xlat16_4.xyz = u_xlat10_10.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_5.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
            u_xlat16_0.xyz = (-u_xlat16_0.xyz) * u_xlat16_4.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_0.xyz + u_xlat16_5.xyz;
            SV_Target0.w = _BloomFactor;
            SV_Target0.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1.x != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_LightMap_ON" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _FogColorNear;
uniform 	vec4 _FogColorFar;
uniform 	float _FogColorIntensity;
uniform 	float _FogIntensity;
uniform 	float _FogEffectStart;
uniform 	float _FogEffectLimit;
uniform 	float _FogStartDistance;
uniform 	float _FogEndDistance;
uniform 	vec4 _PropertyLightmapTexTS;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec3 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat2.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat5.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat2.y = u_xlat16_4.x;
    u_xlat5.z = dot(u_xlat2.xy, u_xlat1.xz);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
#ifdef UNITY_ADRENO_ES3
    u_xlatb21 = !!(0.5<_FogColorNear.w);
#else
    u_xlatb21 = 0.5<_FogColorNear.w;
#endif
    if(u_xlatb21){
        u_xlat1.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat21 = dot(u_xlat1.xzw, u_xlat1.xzw);
        u_xlat21 = sqrt(u_xlat21);
        u_xlat21 = u_xlat21 + (-_FogStartDistance);
        u_xlat21 = max(u_xlat21, 0.0);
        u_xlat1.xz = vec2(u_xlat21) * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat1.xz = u_xlat1.xz * (-u_xlat1.xz);
        u_xlat1.xz = u_xlat1.xz * vec2(1.44269502, 1.44269502);
        u_xlat1.xz = exp2(u_xlat1.xz);
        u_xlat21 = (-u_xlat1.x) + 1.0;
        u_xlat21 = u_xlat21 * _FogEffectLimit;
        u_xlat21 = max(u_xlat21, _FogEffectStart);
        u_xlat2.w = min(u_xlat21, _FogEffectLimit);
        u_xlat6.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat1.zzz * u_xlat6.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    } else {
        u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
        u_xlat0.x = sqrt(u_xlat0.x);
        u_xlat0.x = u_xlat0.x + (-_FogStartDistance);
        u_xlat0.x = max(u_xlat0.x, 0.0);
        u_xlat0.xy = u_xlat0.xx * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat0.xy = u_xlat0.xy * vec2(500.0, 1000.0);
        u_xlat14 = (-_FogStartDistance) + _FogEndDistance;
        u_xlat14 = max(u_xlat14, 0.100000001);
        u_xlat0.xy = u_xlat0.yx / vec2(u_xlat14);
        u_xlat7.x = u_xlat0.y * _FogEffectLimit;
        u_xlat7.x = max(u_xlat7.x, _FogEffectStart);
        u_xlat2.w = min(u_xlat7.x, _FogEffectLimit);
        u_xlat0.x = u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
        u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
        u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
        u_xlat0.x = (-u_xlat0.x) + 1.0;
        u_xlat7.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat0.xxx * u_xlat7.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    //ENDIF
    }
    u_xlat0.xy = in_TEXCOORD1.xy * _PropertyLightmapTexTS.xy + _PropertyLightmapTexTS.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat5.y = u_xlat1.y;
    vs_TEXCOORD3.xyz = u_xlat5.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform lowp sampler2D _PropertyLightmapTex;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
ivec2 u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp float u_xlat10_2;
bool u_xlatb2;
mediump vec4 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
lowp vec3 u_xlat10_7;
mediump vec3 u_xlat16_8;
mediump float u_xlat16_9;
vec3 u_xlat10;
mediump vec3 u_xlat16_10;
lowp vec3 u_xlat10_10;
ivec2 u_xlati10;
bool u_xlatb10;
vec3 u_xlat11;
lowp vec3 u_xlat10_11;
vec3 u_xlat15;
lowp vec3 u_xlat10_15;
mediump float u_xlat16_18;
lowp float u_xlat10_19;
bool u_xlatb19;
float u_xlat28;
void main()
{
    u_xlat16_0.x = (-_UMin) + _UMax;
    u_xlat16_9 = u_xlat16_0.x * 0.0250000004;
    u_xlat16_1 = u_xlat16_0.x * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_9 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb10 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb10 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1.x = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb10) * 0xffffffffu);
    if(u_xlati1.x != 0) {
        u_xlat10_10.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_2 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
        u_xlat10_11.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_2.xyz = vec3(u_xlat10_2) * u_xlat10_11.xyz;
        u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Reflectivity);
        u_xlat16_10.xyz = u_xlat10_10.xyz * _Color.xyz + u_xlat16_2.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb2 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb2 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat11.x = _Time.y * _Speed;
        u_xlat11.x = fract(u_xlat11.x);
        u_xlat11.x = u_xlat11.x + -0.5;
        u_xlat11.x = abs(u_xlat11.x) * _Magnitude + _MinValue;
        u_xlat11.xyz = u_xlat16_10.xyz * u_xlat11.xxx;
        u_xlat10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb2)) ? u_xlat11.xyz : u_xlat10.xyz;
        u_xlat10_10.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_4.xyz = u_xlat10_10.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_5.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;
        u_xlat16_3.xyz = (-u_xlat16_3.xyz) * u_xlat16_4.xyz + vs_COLOR1.xyz;
        u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_3.xyz + u_xlat16_5.xyz;
        u_xlat16_2.w = _BloomFactor;
        u_xlat16_3 = u_xlat16_2;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1.x == 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.0500000007 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.100000001 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.150000006 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.200000003 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.25 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.300000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.349999994 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.400000006 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.450000018 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.5 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.550000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.600000024 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.650000036 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.699999988 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.75 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.800000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.850000024 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.900000036 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.949999988 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.x = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.x != 0) {
            u_xlat10_10.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_6.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_0.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_0.x = u_xlat16_0.x + u_xlat16_0.x;
            u_xlat16_0.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_0.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_15.xyz = texture(_EnvTex, u_xlat16_0.xyz).xyz;
            u_xlat16_6.xyz = u_xlat10_6.xxx * u_xlat10_15.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_10.xyz = u_xlat10_10.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb6 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb6 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat15.x = _Time.y * _Speed;
            u_xlat15.x = fract(u_xlat15.x);
            u_xlat15.x = u_xlat15.x + -0.5;
            u_xlat15.x = abs(u_xlat15.x) * _Magnitude + _MinValue;
            u_xlat15.xyz = u_xlat16_10.xyz * u_xlat15.xxx;
            u_xlat10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity);
            u_xlat16_0.xyz = (bool(u_xlatb6)) ? u_xlat15.xyz : u_xlat10.xyz;
            u_xlat10_10.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz;
            u_xlat16_4.xyz = u_xlat10_10.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_5.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
            u_xlat16_0.xyz = (-u_xlat16_0.xyz) * u_xlat16_4.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_0.xyz + u_xlat16_5.xyz;
            SV_Target0.w = _BloomFactor;
            SV_Target0.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1.x != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_LightMap_ON" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _FogColorNear;
uniform 	vec4 _FogColorFar;
uniform 	float _FogColorIntensity;
uniform 	float _FogIntensity;
uniform 	float _FogEffectStart;
uniform 	float _FogEffectLimit;
uniform 	float _FogStartDistance;
uniform 	float _FogEndDistance;
uniform 	vec4 _PropertyLightmapTexTS;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec3 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat2.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat5.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat2.y = u_xlat16_4.x;
    u_xlat5.z = dot(u_xlat2.xy, u_xlat1.xz);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
#ifdef UNITY_ADRENO_ES3
    u_xlatb21 = !!(0.5<_FogColorNear.w);
#else
    u_xlatb21 = 0.5<_FogColorNear.w;
#endif
    if(u_xlatb21){
        u_xlat1.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat21 = dot(u_xlat1.xzw, u_xlat1.xzw);
        u_xlat21 = sqrt(u_xlat21);
        u_xlat21 = u_xlat21 + (-_FogStartDistance);
        u_xlat21 = max(u_xlat21, 0.0);
        u_xlat1.xz = vec2(u_xlat21) * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat1.xz = u_xlat1.xz * (-u_xlat1.xz);
        u_xlat1.xz = u_xlat1.xz * vec2(1.44269502, 1.44269502);
        u_xlat1.xz = exp2(u_xlat1.xz);
        u_xlat21 = (-u_xlat1.x) + 1.0;
        u_xlat21 = u_xlat21 * _FogEffectLimit;
        u_xlat21 = max(u_xlat21, _FogEffectStart);
        u_xlat2.w = min(u_xlat21, _FogEffectLimit);
        u_xlat6.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat1.zzz * u_xlat6.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    } else {
        u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
        u_xlat0.x = sqrt(u_xlat0.x);
        u_xlat0.x = u_xlat0.x + (-_FogStartDistance);
        u_xlat0.x = max(u_xlat0.x, 0.0);
        u_xlat0.xy = u_xlat0.xx * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat0.xy = u_xlat0.xy * vec2(500.0, 1000.0);
        u_xlat14 = (-_FogStartDistance) + _FogEndDistance;
        u_xlat14 = max(u_xlat14, 0.100000001);
        u_xlat0.xy = u_xlat0.yx / vec2(u_xlat14);
        u_xlat7.x = u_xlat0.y * _FogEffectLimit;
        u_xlat7.x = max(u_xlat7.x, _FogEffectStart);
        u_xlat2.w = min(u_xlat7.x, _FogEffectLimit);
        u_xlat0.x = u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
        u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
        u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
        u_xlat0.x = (-u_xlat0.x) + 1.0;
        u_xlat7.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat0.xxx * u_xlat7.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    //ENDIF
    }
    u_xlat0.xy = in_TEXCOORD1.xy * _PropertyLightmapTexTS.xy + _PropertyLightmapTexTS.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat5.y = u_xlat1.y;
    vs_TEXCOORD3.xyz = u_xlat5.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform lowp sampler2D _PropertyLightmapTex;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
ivec2 u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp float u_xlat10_2;
bool u_xlatb2;
mediump vec4 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
lowp vec3 u_xlat10_7;
mediump vec3 u_xlat16_8;
mediump float u_xlat16_9;
vec3 u_xlat10;
mediump vec3 u_xlat16_10;
lowp vec3 u_xlat10_10;
ivec2 u_xlati10;
bool u_xlatb10;
vec3 u_xlat11;
lowp vec3 u_xlat10_11;
vec3 u_xlat15;
lowp vec3 u_xlat10_15;
mediump float u_xlat16_18;
lowp float u_xlat10_19;
bool u_xlatb19;
float u_xlat28;
void main()
{
    u_xlat16_0.x = (-_UMin) + _UMax;
    u_xlat16_9 = u_xlat16_0.x * 0.0250000004;
    u_xlat16_1 = u_xlat16_0.x * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_9 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb10 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb10 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1.x = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb10) * 0xffffffffu);
    if(u_xlati1.x != 0) {
        u_xlat10_10.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_2 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
        u_xlat10_11.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_2.xyz = vec3(u_xlat10_2) * u_xlat10_11.xyz;
        u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Reflectivity);
        u_xlat16_10.xyz = u_xlat10_10.xyz * _Color.xyz + u_xlat16_2.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb2 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb2 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat11.x = _Time.y * _Speed;
        u_xlat11.x = fract(u_xlat11.x);
        u_xlat11.x = u_xlat11.x + -0.5;
        u_xlat11.x = abs(u_xlat11.x) * _Magnitude + _MinValue;
        u_xlat11.xyz = u_xlat16_10.xyz * u_xlat11.xxx;
        u_xlat10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb2)) ? u_xlat11.xyz : u_xlat10.xyz;
        u_xlat10_10.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_4.xyz = u_xlat10_10.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_5.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;
        u_xlat16_3.xyz = (-u_xlat16_3.xyz) * u_xlat16_4.xyz + vs_COLOR1.xyz;
        u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_3.xyz + u_xlat16_5.xyz;
        u_xlat16_2.w = _BloomFactor;
        u_xlat16_3 = u_xlat16_2;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1.x == 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.0500000007 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.100000001 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.150000006 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.200000003 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.25 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.300000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.349999994 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.400000006 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.450000018 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.5 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.550000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.600000024 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.650000036 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.699999988 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.75 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.800000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.850000024 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.900000036 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.949999988 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.x = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.x != 0) {
            u_xlat10_10.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_6.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_0.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_0.x = u_xlat16_0.x + u_xlat16_0.x;
            u_xlat16_0.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_0.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_15.xyz = texture(_EnvTex, u_xlat16_0.xyz).xyz;
            u_xlat16_6.xyz = u_xlat10_6.xxx * u_xlat10_15.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_10.xyz = u_xlat10_10.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb6 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb6 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat15.x = _Time.y * _Speed;
            u_xlat15.x = fract(u_xlat15.x);
            u_xlat15.x = u_xlat15.x + -0.5;
            u_xlat15.x = abs(u_xlat15.x) * _Magnitude + _MinValue;
            u_xlat15.xyz = u_xlat16_10.xyz * u_xlat15.xxx;
            u_xlat10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity);
            u_xlat16_0.xyz = (bool(u_xlatb6)) ? u_xlat15.xyz : u_xlat10.xyz;
            u_xlat10_10.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz;
            u_xlat16_4.xyz = u_xlat10_10.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_5.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
            u_xlat16_0.xyz = (-u_xlat16_0.xyz) * u_xlat16_4.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_0.xyz + u_xlat16_5.xyz;
            SV_Target0.w = _BloomFactor;
            SV_Target0.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1.x != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LERP" "_LightMap_ON" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _FogColorNear;
uniform 	vec4 _FogColorFar;
uniform 	float _FogColorIntensity;
uniform 	float _FogIntensity;
uniform 	float _FogEffectStart;
uniform 	float _FogEffectLimit;
uniform 	float _FogStartDistance;
uniform 	float _FogEndDistance;
uniform 	vec4 _PropertyLightmapTexTS;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec3 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat2.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat5.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat2.y = u_xlat16_4.x;
    u_xlat5.z = dot(u_xlat2.xy, u_xlat1.xz);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
#ifdef UNITY_ADRENO_ES3
    u_xlatb21 = !!(0.5<_FogColorNear.w);
#else
    u_xlatb21 = 0.5<_FogColorNear.w;
#endif
    if(u_xlatb21){
        u_xlat1.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat21 = dot(u_xlat1.xzw, u_xlat1.xzw);
        u_xlat21 = sqrt(u_xlat21);
        u_xlat21 = u_xlat21 + (-_FogStartDistance);
        u_xlat21 = max(u_xlat21, 0.0);
        u_xlat1.xz = vec2(u_xlat21) * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat1.xz = u_xlat1.xz * (-u_xlat1.xz);
        u_xlat1.xz = u_xlat1.xz * vec2(1.44269502, 1.44269502);
        u_xlat1.xz = exp2(u_xlat1.xz);
        u_xlat21 = (-u_xlat1.x) + 1.0;
        u_xlat21 = u_xlat21 * _FogEffectLimit;
        u_xlat21 = max(u_xlat21, _FogEffectStart);
        u_xlat2.w = min(u_xlat21, _FogEffectLimit);
        u_xlat6.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat1.zzz * u_xlat6.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    } else {
        u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
        u_xlat0.x = sqrt(u_xlat0.x);
        u_xlat0.x = u_xlat0.x + (-_FogStartDistance);
        u_xlat0.x = max(u_xlat0.x, 0.0);
        u_xlat0.xy = u_xlat0.xx * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat0.xy = u_xlat0.xy * vec2(500.0, 1000.0);
        u_xlat14 = (-_FogStartDistance) + _FogEndDistance;
        u_xlat14 = max(u_xlat14, 0.100000001);
        u_xlat0.xy = u_xlat0.yx / vec2(u_xlat14);
        u_xlat7.x = u_xlat0.y * _FogEffectLimit;
        u_xlat7.x = max(u_xlat7.x, _FogEffectStart);
        u_xlat2.w = min(u_xlat7.x, _FogEffectLimit);
        u_xlat0.x = u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
        u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
        u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
        u_xlat0.x = (-u_xlat0.x) + 1.0;
        u_xlat7.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat0.xxx * u_xlat7.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    //ENDIF
    }
    u_xlat0.xy = in_TEXCOORD1.xy * _PropertyLightmapTexTS.xy + _PropertyLightmapTexTS.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat5.y = u_xlat1.y;
    vs_TEXCOORD3.xyz = u_xlat5.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform lowp sampler2D _PropertyLightmapTex;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
ivec2 u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp float u_xlat10_2;
bool u_xlatb2;
mediump vec4 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
lowp vec3 u_xlat10_7;
mediump vec3 u_xlat16_8;
mediump float u_xlat16_9;
vec3 u_xlat10;
mediump vec3 u_xlat16_10;
lowp vec3 u_xlat10_10;
ivec2 u_xlati10;
bool u_xlatb10;
vec3 u_xlat11;
lowp vec3 u_xlat10_11;
vec3 u_xlat15;
lowp vec3 u_xlat10_15;
mediump float u_xlat16_18;
lowp float u_xlat10_19;
bool u_xlatb19;
float u_xlat28;
void main()
{
    u_xlat16_0.x = (-_UMin) + _UMax;
    u_xlat16_9 = u_xlat16_0.x * 0.0250000004;
    u_xlat16_1 = u_xlat16_0.x * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_9 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb10 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb10 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1.x = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb10) * 0xffffffffu);
    if(u_xlati1.x != 0) {
        u_xlat10_10.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_2 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
        u_xlat10_11.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_2.xyz = vec3(u_xlat10_2) * u_xlat10_11.xyz;
        u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Reflectivity);
        u_xlat16_10.xyz = u_xlat10_10.xyz * _Color.xyz + u_xlat16_2.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb2 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb2 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat11.x = _Time.y * _Speed;
        u_xlat11.x = fract(u_xlat11.x);
        u_xlat11.x = u_xlat11.x + -0.5;
        u_xlat11.x = abs(u_xlat11.x) * _Magnitude + _MinValue;
        u_xlat11.xyz = u_xlat16_10.xyz * u_xlat11.xxx;
        u_xlat10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb2)) ? u_xlat11.xyz : u_xlat10.xyz;
        u_xlat10_10.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_4.xyz = u_xlat10_10.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_5.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;
        u_xlat16_3.xyz = (-u_xlat16_3.xyz) * u_xlat16_4.xyz + vs_COLOR1.xyz;
        u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_3.xyz + u_xlat16_5.xyz;
        u_xlat16_2.w = _BloomFactor;
        u_xlat16_3 = u_xlat16_2;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1.x == 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.0500000007 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.100000001 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.150000006 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.200000003 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.25 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.300000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.349999994 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.400000006 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.450000018 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.5 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.550000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.600000024 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.650000036 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.699999988 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.75 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.800000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.850000024 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.900000036 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.949999988 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.x = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.x != 0) {
            u_xlat10_10.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_6.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_0.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_0.x = u_xlat16_0.x + u_xlat16_0.x;
            u_xlat16_0.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_0.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_15.xyz = texture(_EnvTex, u_xlat16_0.xyz).xyz;
            u_xlat16_6.xyz = u_xlat10_6.xxx * u_xlat10_15.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_10.xyz = u_xlat10_10.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb6 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb6 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat15.x = _Time.y * _Speed;
            u_xlat15.x = fract(u_xlat15.x);
            u_xlat15.x = u_xlat15.x + -0.5;
            u_xlat15.x = abs(u_xlat15.x) * _Magnitude + _MinValue;
            u_xlat15.xyz = u_xlat16_10.xyz * u_xlat15.xxx;
            u_xlat10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity);
            u_xlat16_0.xyz = (bool(u_xlatb6)) ? u_xlat15.xyz : u_xlat10.xyz;
            u_xlat10_10.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz;
            u_xlat16_4.xyz = u_xlat10_10.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_5.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
            u_xlat16_0.xyz = (-u_xlat16_0.xyz) * u_xlat16_4.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_0.xyz + u_xlat16_5.xyz;
            SV_Target0.w = _BloomFactor;
            SV_Target0.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1.x != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LERP" "_LightMap_ON" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _FogColorNear;
uniform 	vec4 _FogColorFar;
uniform 	float _FogColorIntensity;
uniform 	float _FogIntensity;
uniform 	float _FogEffectStart;
uniform 	float _FogEffectLimit;
uniform 	float _FogStartDistance;
uniform 	float _FogEndDistance;
uniform 	vec4 _PropertyLightmapTexTS;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec3 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat2.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat5.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat2.y = u_xlat16_4.x;
    u_xlat5.z = dot(u_xlat2.xy, u_xlat1.xz);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
#ifdef UNITY_ADRENO_ES3
    u_xlatb21 = !!(0.5<_FogColorNear.w);
#else
    u_xlatb21 = 0.5<_FogColorNear.w;
#endif
    if(u_xlatb21){
        u_xlat1.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat21 = dot(u_xlat1.xzw, u_xlat1.xzw);
        u_xlat21 = sqrt(u_xlat21);
        u_xlat21 = u_xlat21 + (-_FogStartDistance);
        u_xlat21 = max(u_xlat21, 0.0);
        u_xlat1.xz = vec2(u_xlat21) * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat1.xz = u_xlat1.xz * (-u_xlat1.xz);
        u_xlat1.xz = u_xlat1.xz * vec2(1.44269502, 1.44269502);
        u_xlat1.xz = exp2(u_xlat1.xz);
        u_xlat21 = (-u_xlat1.x) + 1.0;
        u_xlat21 = u_xlat21 * _FogEffectLimit;
        u_xlat21 = max(u_xlat21, _FogEffectStart);
        u_xlat2.w = min(u_xlat21, _FogEffectLimit);
        u_xlat6.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat1.zzz * u_xlat6.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    } else {
        u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
        u_xlat0.x = sqrt(u_xlat0.x);
        u_xlat0.x = u_xlat0.x + (-_FogStartDistance);
        u_xlat0.x = max(u_xlat0.x, 0.0);
        u_xlat0.xy = u_xlat0.xx * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat0.xy = u_xlat0.xy * vec2(500.0, 1000.0);
        u_xlat14 = (-_FogStartDistance) + _FogEndDistance;
        u_xlat14 = max(u_xlat14, 0.100000001);
        u_xlat0.xy = u_xlat0.yx / vec2(u_xlat14);
        u_xlat7.x = u_xlat0.y * _FogEffectLimit;
        u_xlat7.x = max(u_xlat7.x, _FogEffectStart);
        u_xlat2.w = min(u_xlat7.x, _FogEffectLimit);
        u_xlat0.x = u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
        u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
        u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
        u_xlat0.x = (-u_xlat0.x) + 1.0;
        u_xlat7.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat0.xxx * u_xlat7.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    //ENDIF
    }
    u_xlat0.xy = in_TEXCOORD1.xy * _PropertyLightmapTexTS.xy + _PropertyLightmapTexTS.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat5.y = u_xlat1.y;
    vs_TEXCOORD3.xyz = u_xlat5.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform lowp sampler2D _PropertyLightmapTex;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
ivec2 u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp float u_xlat10_2;
bool u_xlatb2;
mediump vec4 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
lowp vec3 u_xlat10_7;
mediump vec3 u_xlat16_8;
mediump float u_xlat16_9;
vec3 u_xlat10;
mediump vec3 u_xlat16_10;
lowp vec3 u_xlat10_10;
ivec2 u_xlati10;
bool u_xlatb10;
vec3 u_xlat11;
lowp vec3 u_xlat10_11;
vec3 u_xlat15;
lowp vec3 u_xlat10_15;
mediump float u_xlat16_18;
lowp float u_xlat10_19;
bool u_xlatb19;
float u_xlat28;
void main()
{
    u_xlat16_0.x = (-_UMin) + _UMax;
    u_xlat16_9 = u_xlat16_0.x * 0.0250000004;
    u_xlat16_1 = u_xlat16_0.x * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_9 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb10 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb10 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1.x = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb10) * 0xffffffffu);
    if(u_xlati1.x != 0) {
        u_xlat10_10.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_2 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
        u_xlat10_11.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_2.xyz = vec3(u_xlat10_2) * u_xlat10_11.xyz;
        u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Reflectivity);
        u_xlat16_10.xyz = u_xlat10_10.xyz * _Color.xyz + u_xlat16_2.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb2 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb2 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat11.x = _Time.y * _Speed;
        u_xlat11.x = fract(u_xlat11.x);
        u_xlat11.x = u_xlat11.x + -0.5;
        u_xlat11.x = abs(u_xlat11.x) * _Magnitude + _MinValue;
        u_xlat11.xyz = u_xlat16_10.xyz * u_xlat11.xxx;
        u_xlat10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb2)) ? u_xlat11.xyz : u_xlat10.xyz;
        u_xlat10_10.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_4.xyz = u_xlat10_10.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_5.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;
        u_xlat16_3.xyz = (-u_xlat16_3.xyz) * u_xlat16_4.xyz + vs_COLOR1.xyz;
        u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_3.xyz + u_xlat16_5.xyz;
        u_xlat16_2.w = _BloomFactor;
        u_xlat16_3 = u_xlat16_2;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1.x == 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.0500000007 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.100000001 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.150000006 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.200000003 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.25 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.300000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.349999994 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.400000006 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.450000018 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.5 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.550000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.600000024 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.650000036 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.699999988 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.75 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.800000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.850000024 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.900000036 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.949999988 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.x = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.x != 0) {
            u_xlat10_10.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_6.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_0.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_0.x = u_xlat16_0.x + u_xlat16_0.x;
            u_xlat16_0.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_0.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_15.xyz = texture(_EnvTex, u_xlat16_0.xyz).xyz;
            u_xlat16_6.xyz = u_xlat10_6.xxx * u_xlat10_15.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_10.xyz = u_xlat10_10.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb6 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb6 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat15.x = _Time.y * _Speed;
            u_xlat15.x = fract(u_xlat15.x);
            u_xlat15.x = u_xlat15.x + -0.5;
            u_xlat15.x = abs(u_xlat15.x) * _Magnitude + _MinValue;
            u_xlat15.xyz = u_xlat16_10.xyz * u_xlat15.xxx;
            u_xlat10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity);
            u_xlat16_0.xyz = (bool(u_xlatb6)) ? u_xlat15.xyz : u_xlat10.xyz;
            u_xlat10_10.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz;
            u_xlat16_4.xyz = u_xlat10_10.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_5.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
            u_xlat16_0.xyz = (-u_xlat16_0.xyz) * u_xlat16_4.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_0.xyz + u_xlat16_5.xyz;
            SV_Target0.w = _BloomFactor;
            SV_Target0.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1.x != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LERP" "_LightMap_ON" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _FogColorNear;
uniform 	vec4 _FogColorFar;
uniform 	float _FogColorIntensity;
uniform 	float _FogIntensity;
uniform 	float _FogEffectStart;
uniform 	float _FogEffectLimit;
uniform 	float _FogStartDistance;
uniform 	float _FogEndDistance;
uniform 	vec4 _PropertyLightmapTexTS;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec3 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat2.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat5.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat2.y = u_xlat16_4.x;
    u_xlat5.z = dot(u_xlat2.xy, u_xlat1.xz);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
#ifdef UNITY_ADRENO_ES3
    u_xlatb21 = !!(0.5<_FogColorNear.w);
#else
    u_xlatb21 = 0.5<_FogColorNear.w;
#endif
    if(u_xlatb21){
        u_xlat1.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat21 = dot(u_xlat1.xzw, u_xlat1.xzw);
        u_xlat21 = sqrt(u_xlat21);
        u_xlat21 = u_xlat21 + (-_FogStartDistance);
        u_xlat21 = max(u_xlat21, 0.0);
        u_xlat1.xz = vec2(u_xlat21) * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat1.xz = u_xlat1.xz * (-u_xlat1.xz);
        u_xlat1.xz = u_xlat1.xz * vec2(1.44269502, 1.44269502);
        u_xlat1.xz = exp2(u_xlat1.xz);
        u_xlat21 = (-u_xlat1.x) + 1.0;
        u_xlat21 = u_xlat21 * _FogEffectLimit;
        u_xlat21 = max(u_xlat21, _FogEffectStart);
        u_xlat2.w = min(u_xlat21, _FogEffectLimit);
        u_xlat6.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat1.zzz * u_xlat6.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    } else {
        u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
        u_xlat0.x = sqrt(u_xlat0.x);
        u_xlat0.x = u_xlat0.x + (-_FogStartDistance);
        u_xlat0.x = max(u_xlat0.x, 0.0);
        u_xlat0.xy = u_xlat0.xx * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat0.xy = u_xlat0.xy * vec2(500.0, 1000.0);
        u_xlat14 = (-_FogStartDistance) + _FogEndDistance;
        u_xlat14 = max(u_xlat14, 0.100000001);
        u_xlat0.xy = u_xlat0.yx / vec2(u_xlat14);
        u_xlat7.x = u_xlat0.y * _FogEffectLimit;
        u_xlat7.x = max(u_xlat7.x, _FogEffectStart);
        u_xlat2.w = min(u_xlat7.x, _FogEffectLimit);
        u_xlat0.x = u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
        u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
        u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
        u_xlat0.x = (-u_xlat0.x) + 1.0;
        u_xlat7.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat0.xxx * u_xlat7.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    //ENDIF
    }
    u_xlat0.xy = in_TEXCOORD1.xy * _PropertyLightmapTexTS.xy + _PropertyLightmapTexTS.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat5.y = u_xlat1.y;
    vs_TEXCOORD3.xyz = u_xlat5.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform lowp sampler2D _PropertyLightmapTex;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
ivec2 u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp float u_xlat10_2;
bool u_xlatb2;
mediump vec4 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
lowp vec3 u_xlat10_7;
mediump vec3 u_xlat16_8;
mediump float u_xlat16_9;
vec3 u_xlat10;
mediump vec3 u_xlat16_10;
lowp vec3 u_xlat10_10;
ivec2 u_xlati10;
bool u_xlatb10;
vec3 u_xlat11;
lowp vec3 u_xlat10_11;
vec3 u_xlat15;
lowp vec3 u_xlat10_15;
mediump float u_xlat16_18;
lowp float u_xlat10_19;
bool u_xlatb19;
float u_xlat28;
void main()
{
    u_xlat16_0.x = (-_UMin) + _UMax;
    u_xlat16_9 = u_xlat16_0.x * 0.0250000004;
    u_xlat16_1 = u_xlat16_0.x * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_9 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb10 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb10 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1.x = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb10) * 0xffffffffu);
    if(u_xlati1.x != 0) {
        u_xlat10_10.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_2 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
        u_xlat10_11.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_2.xyz = vec3(u_xlat10_2) * u_xlat10_11.xyz;
        u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Reflectivity);
        u_xlat16_10.xyz = u_xlat10_10.xyz * _Color.xyz + u_xlat16_2.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb2 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb2 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat11.x = _Time.y * _Speed;
        u_xlat11.x = fract(u_xlat11.x);
        u_xlat11.x = u_xlat11.x + -0.5;
        u_xlat11.x = abs(u_xlat11.x) * _Magnitude + _MinValue;
        u_xlat11.xyz = u_xlat16_10.xyz * u_xlat11.xxx;
        u_xlat10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb2)) ? u_xlat11.xyz : u_xlat10.xyz;
        u_xlat10_10.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_4.xyz = u_xlat10_10.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_5.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;
        u_xlat16_3.xyz = (-u_xlat16_3.xyz) * u_xlat16_4.xyz + vs_COLOR1.xyz;
        u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_3.xyz + u_xlat16_5.xyz;
        u_xlat16_2.w = _BloomFactor;
        u_xlat16_3 = u_xlat16_2;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1.x == 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.0500000007 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.100000001 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.150000006 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.200000003 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.25 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.300000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.349999994 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.400000006 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.450000018 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.5 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.550000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.600000024 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.650000036 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.699999988 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.75 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.800000012 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.850000024 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.900000036 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_19 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_18 = u_xlat16_18 + u_xlat16_18;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_18)) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_19) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_6.xyz = u_xlat10_6.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb19 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb19 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28 = _Time.y * _Speed;
            u_xlat28 = fract(u_xlat28);
            u_xlat28 = u_xlat28 + -0.5;
            u_xlat28 = abs(u_xlat28) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat28) * u_xlat16_6.xyz;
            u_xlat6.xyz = u_xlat16_6.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb19)) ? u_xlat7.xyz : u_xlat6.xyz;
            u_xlat10_6.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_5.xyz = u_xlat10_6.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;
            u_xlat16_4.xyz = (-u_xlat16_4.xyz) * u_xlat16_5.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_4.xyz + u_xlat16_8.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati10.xy = ~u_xlati1.yx;
    u_xlati10.x = int(uint(u_xlati10.y) & uint(u_xlati10.x));
    if(u_xlati10.x != 0) {
        u_xlat16_10.x = u_xlat16_0.x * 0.949999988 + _UMin;
        u_xlat16_10.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_10.x;
        u_xlat10.y = (-u_xlat16_9) * _ScaleTime + u_xlat16_10.x;
        u_xlat10.x = u_xlat16_9 * _ScaleTime + u_xlat16_10.x;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb19 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.x = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb19) * 0xffffffffu);
        if(u_xlati1.x != 0) {
            u_xlat10_10.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_6.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_0.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_0.x = u_xlat16_0.x + u_xlat16_0.x;
            u_xlat16_0.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_0.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_15.xyz = texture(_EnvTex, u_xlat16_0.xyz).xyz;
            u_xlat16_6.xyz = u_xlat10_6.xxx * u_xlat10_15.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_10.xyz = u_xlat10_10.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb6 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb6 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat15.x = _Time.y * _Speed;
            u_xlat15.x = fract(u_xlat15.x);
            u_xlat15.x = u_xlat15.x + -0.5;
            u_xlat15.x = abs(u_xlat15.x) * _Magnitude + _MinValue;
            u_xlat15.xyz = u_xlat16_10.xyz * u_xlat15.xxx;
            u_xlat10.xyz = u_xlat16_10.xyz * vec3(_LightMapIntensity);
            u_xlat16_0.xyz = (bool(u_xlatb6)) ? u_xlat15.xyz : u_xlat10.xyz;
            u_xlat10_10.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz;
            u_xlat16_4.xyz = u_xlat10_10.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_5.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
            u_xlat16_0.xyz = (-u_xlat16_0.xyz) * u_xlat16_4.xyz + vs_COLOR1.xyz;
            u_xlat16_2.xyz = vs_COLOR1.www * u_xlat16_0.xyz + u_xlat16_5.xyz;
            SV_Target0.w = _BloomFactor;
            SV_Target0.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1.x != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_HEIGHT" "_LightMap_ON" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _HeigtFogParams;
uniform 	vec4 _HeigtFogRamp;
uniform 	vec4 _HeigtFogColBase;
uniform 	vec4 _HeigtFogColDelta;
uniform 	vec4 _HeigtFogColParams;
uniform 	vec4 _HeigtFogRadialCol;
uniform 	vec4 _Mihoyo_FogColor;
uniform 	vec4 _PropertyLightmapTexTS;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec2 u_xlat5;
float u_xlat6;
bool u_xlatb6;
mediump float u_xlat16_9;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat18;
float u_xlat19;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD1.xy * _PropertyLightmapTexTS.xy + _PropertyLightmapTexTS.zw;
    vs_TEXCOORD1.xy = u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat2.y = u_xlat1.y;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat5.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat2.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat5.y = u_xlat16_4.x;
    u_xlat2.z = dot(u_xlat5.xy, u_xlat1.xz);
    vs_TEXCOORD3.xyz = u_xlat2.xyz;
    u_xlat18 = u_xlat0.y * _HeigtFogColParams.x + _HeigtFogColParams.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
    u_xlat16_3 = (-u_xlat18) + 2.0;
    u_xlat16_3 = u_xlat18 * u_xlat16_3;
    u_xlat1.xyz = vec3(u_xlat16_3) * _HeigtFogColDelta.xyz + _HeigtFogColBase.xyz;
    u_xlat2.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol.xyz;
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = u_xlat0.y * _HeigtFogParams.x;
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat12.x = u_xlat0.x + (-_HeigtFogRamp.w);
    u_xlat12.x = u_xlat12.x * _HeigtFogColParams.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat12.x = min(max(u_xlat12.x, 0.0), 1.0);
#else
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
#endif
    u_xlat1.xyz = u_xlat12.xxx * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat12.x = _ProjectionParams.z * 0.999899983;
#ifdef UNITY_ADRENO_ES3
    u_xlatb12 = !!(u_xlat0.x>=u_xlat12.x);
#else
    u_xlatb12 = u_xlat0.x>=u_xlat12.x;
#endif
    u_xlat18 = u_xlat0.x * _HeigtFogParams.z + _HeigtFogParams.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat19 = (-u_xlat18) + 2.0;
    u_xlat18 = u_xlat18 * u_xlat19;
    u_xlat19 = u_xlat18 * _HeigtFogColDelta.w;
    u_xlat12.x = (u_xlatb12) ? u_xlat19 : u_xlat18;
    u_xlat12.x = log2(u_xlat12.x);
    u_xlat12.x = u_xlat12.x * _Mihoyo_FogColor.w;
    u_xlat12.x = exp2(u_xlat12.x);
    u_xlat12.x = min(u_xlat12.x, _HeigtFogColBase.w);
    u_xlat1.xyz = u_xlat12.xxx * u_xlat1.xyz;
    u_xlat18 = u_xlat6 * -1.44269502;
    u_xlat12.y = exp2(u_xlat18);
    u_xlat12.xy = (-u_xlat12.xy) + vec2(1.0, 1.0);
    u_xlat18 = u_xlat12.y / u_xlat6;
#ifdef UNITY_ADRENO_ES3
    u_xlatb6 = !!(0.00999999978<abs(u_xlat6));
#else
    u_xlatb6 = 0.00999999978<abs(u_xlat6);
#endif
    u_xlat16_3 = (u_xlatb6) ? u_xlat18 : 1.0;
    u_xlat6 = u_xlat0.x * _HeigtFogParams.y;
    u_xlat0.x = u_xlat0.x * _HeigtFogRamp.x + _HeigtFogRamp.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat16_3 = u_xlat6 * u_xlat16_3;
    u_xlat16_3 = exp2((-u_xlat16_3));
    u_xlat16_3 = min(u_xlat16_3, 1.0);
    u_xlat16_3 = (-u_xlat16_3) + 1.0;
    u_xlat16_9 = (-u_xlat0.x) + 2.0;
    u_xlat16_9 = u_xlat0.x * u_xlat16_9;
    u_xlat0.x = u_xlat16_9 * _HeigtFogRamp.z + (-_HeigtFogRamp.z);
    u_xlat0.x = u_xlat0.x + 1.0;
    u_xlat16_3 = u_xlat0.x * u_xlat16_3;
    u_xlat0.x = min(u_xlat16_3, _HeigtFogColBase.w);
    u_xlat6 = (-u_xlat0.x) + 1.0;
    u_xlat1.xyz = vec3(u_xlat6) * u_xlat1.xyz;
    u_xlat2.w = u_xlat6 * u_xlat12.x;
    u_xlat2.xyz = _Mihoyo_FogColor.xyz * u_xlat0.xxx + u_xlat1.xyz;
    vs_COLOR1 = u_xlat2;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform lowp sampler2D _PropertyLightmapTex;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
ivec2 u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp float u_xlat10_2;
bool u_xlatb2;
mediump vec4 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
lowp vec3 u_xlat10_9;
ivec2 u_xlati9;
bool u_xlatb9;
vec3 u_xlat10;
lowp vec3 u_xlat10_10;
vec3 u_xlat13;
lowp vec3 u_xlat10_13;
mediump float u_xlat16_16;
lowp float u_xlat10_17;
bool u_xlatb17;
mediump float u_xlat16_24;
float u_xlat25;
void main()
{
    u_xlat16_0.x = (-_UMin) + _UMax;
    u_xlat16_8 = u_xlat16_0.x * 0.0250000004;
    u_xlat16_1 = u_xlat16_0.x * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_8 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb9 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb9 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1.x = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb9) * 0xffffffffu);
    if(u_xlati1.x != 0) {
        u_xlat10_9.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_2 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
        u_xlat10_10.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_2.xyz = vec3(u_xlat10_2) * u_xlat10_10.xyz;
        u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Reflectivity);
        u_xlat16_9.xyz = u_xlat10_9.xyz * _Color.xyz + u_xlat16_2.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb2 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb2 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat10.x = _Time.y * _Speed;
        u_xlat10.x = fract(u_xlat10.x);
        u_xlat10.x = u_xlat10.x + -0.5;
        u_xlat10.x = abs(u_xlat10.x) * _Magnitude + _MinValue;
        u_xlat10.xyz = u_xlat16_9.xyz * u_xlat10.xxx;
        u_xlat9.xyz = u_xlat16_9.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb2)) ? u_xlat10.xyz : u_xlat9.xyz;
        u_xlat10_9.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_4.xyz = u_xlat10_9.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;
        u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
        u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
        u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
        u_xlat16_2.xyz = u_xlat16_3.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
        u_xlat16_2.w = _BloomFactor;
        u_xlat16_3 = u_xlat16_2;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1.x == 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.0500000007 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.100000001 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.150000006 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.200000003 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.25 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.300000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.349999994 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.400000006 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.450000018 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.5 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.550000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.600000024 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.650000036 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.699999988 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.75 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.800000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.850000024 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.900000036 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.949999988 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.x = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.x != 0) {
            u_xlat10_9.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_5.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_0.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_0.x = u_xlat16_0.x + u_xlat16_0.x;
            u_xlat16_0.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_0.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_13.xyz = texture(_EnvTex, u_xlat16_0.xyz).xyz;
            u_xlat16_5.xyz = u_xlat10_5.xxx * u_xlat10_13.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Reflectivity);
            u_xlat16_9.xyz = u_xlat10_9.xyz * _Color.xyz + u_xlat16_5.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat13.x = _Time.y * _Speed;
            u_xlat13.x = fract(u_xlat13.x);
            u_xlat13.x = u_xlat13.x + -0.5;
            u_xlat13.x = abs(u_xlat13.x) * _Magnitude + _MinValue;
            u_xlat13.xyz = u_xlat16_9.xyz * u_xlat13.xxx;
            u_xlat9.xyz = u_xlat16_9.xyz * vec3(_LightMapIntensity);
            u_xlat16_0.xyz = (bool(u_xlatb5)) ? u_xlat13.xyz : u_xlat9.xyz;
            u_xlat10_9.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz;
            u_xlat16_4.xyz = u_xlat10_9.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
            u_xlat16_24 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_24 = min(max(u_xlat16_24, 0.0), 1.0);
#else
            u_xlat16_24 = clamp(u_xlat16_24, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(u_xlat16_24) + vs_COLOR1.xyz;
            SV_Target0.w = _BloomFactor;
            SV_Target0.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1.x != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_HEIGHT" "_LightMap_ON" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _HeigtFogParams;
uniform 	vec4 _HeigtFogRamp;
uniform 	vec4 _HeigtFogColBase;
uniform 	vec4 _HeigtFogColDelta;
uniform 	vec4 _HeigtFogColParams;
uniform 	vec4 _HeigtFogRadialCol;
uniform 	vec4 _Mihoyo_FogColor;
uniform 	vec4 _PropertyLightmapTexTS;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec2 u_xlat5;
float u_xlat6;
bool u_xlatb6;
mediump float u_xlat16_9;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat18;
float u_xlat19;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD1.xy * _PropertyLightmapTexTS.xy + _PropertyLightmapTexTS.zw;
    vs_TEXCOORD1.xy = u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat2.y = u_xlat1.y;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat5.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat2.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat5.y = u_xlat16_4.x;
    u_xlat2.z = dot(u_xlat5.xy, u_xlat1.xz);
    vs_TEXCOORD3.xyz = u_xlat2.xyz;
    u_xlat18 = u_xlat0.y * _HeigtFogColParams.x + _HeigtFogColParams.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
    u_xlat16_3 = (-u_xlat18) + 2.0;
    u_xlat16_3 = u_xlat18 * u_xlat16_3;
    u_xlat1.xyz = vec3(u_xlat16_3) * _HeigtFogColDelta.xyz + _HeigtFogColBase.xyz;
    u_xlat2.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol.xyz;
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = u_xlat0.y * _HeigtFogParams.x;
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat12.x = u_xlat0.x + (-_HeigtFogRamp.w);
    u_xlat12.x = u_xlat12.x * _HeigtFogColParams.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat12.x = min(max(u_xlat12.x, 0.0), 1.0);
#else
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
#endif
    u_xlat1.xyz = u_xlat12.xxx * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat12.x = _ProjectionParams.z * 0.999899983;
#ifdef UNITY_ADRENO_ES3
    u_xlatb12 = !!(u_xlat0.x>=u_xlat12.x);
#else
    u_xlatb12 = u_xlat0.x>=u_xlat12.x;
#endif
    u_xlat18 = u_xlat0.x * _HeigtFogParams.z + _HeigtFogParams.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat19 = (-u_xlat18) + 2.0;
    u_xlat18 = u_xlat18 * u_xlat19;
    u_xlat19 = u_xlat18 * _HeigtFogColDelta.w;
    u_xlat12.x = (u_xlatb12) ? u_xlat19 : u_xlat18;
    u_xlat12.x = log2(u_xlat12.x);
    u_xlat12.x = u_xlat12.x * _Mihoyo_FogColor.w;
    u_xlat12.x = exp2(u_xlat12.x);
    u_xlat12.x = min(u_xlat12.x, _HeigtFogColBase.w);
    u_xlat1.xyz = u_xlat12.xxx * u_xlat1.xyz;
    u_xlat18 = u_xlat6 * -1.44269502;
    u_xlat12.y = exp2(u_xlat18);
    u_xlat12.xy = (-u_xlat12.xy) + vec2(1.0, 1.0);
    u_xlat18 = u_xlat12.y / u_xlat6;
#ifdef UNITY_ADRENO_ES3
    u_xlatb6 = !!(0.00999999978<abs(u_xlat6));
#else
    u_xlatb6 = 0.00999999978<abs(u_xlat6);
#endif
    u_xlat16_3 = (u_xlatb6) ? u_xlat18 : 1.0;
    u_xlat6 = u_xlat0.x * _HeigtFogParams.y;
    u_xlat0.x = u_xlat0.x * _HeigtFogRamp.x + _HeigtFogRamp.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat16_3 = u_xlat6 * u_xlat16_3;
    u_xlat16_3 = exp2((-u_xlat16_3));
    u_xlat16_3 = min(u_xlat16_3, 1.0);
    u_xlat16_3 = (-u_xlat16_3) + 1.0;
    u_xlat16_9 = (-u_xlat0.x) + 2.0;
    u_xlat16_9 = u_xlat0.x * u_xlat16_9;
    u_xlat0.x = u_xlat16_9 * _HeigtFogRamp.z + (-_HeigtFogRamp.z);
    u_xlat0.x = u_xlat0.x + 1.0;
    u_xlat16_3 = u_xlat0.x * u_xlat16_3;
    u_xlat0.x = min(u_xlat16_3, _HeigtFogColBase.w);
    u_xlat6 = (-u_xlat0.x) + 1.0;
    u_xlat1.xyz = vec3(u_xlat6) * u_xlat1.xyz;
    u_xlat2.w = u_xlat6 * u_xlat12.x;
    u_xlat2.xyz = _Mihoyo_FogColor.xyz * u_xlat0.xxx + u_xlat1.xyz;
    vs_COLOR1 = u_xlat2;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform lowp sampler2D _PropertyLightmapTex;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
ivec2 u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp float u_xlat10_2;
bool u_xlatb2;
mediump vec4 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
lowp vec3 u_xlat10_9;
ivec2 u_xlati9;
bool u_xlatb9;
vec3 u_xlat10;
lowp vec3 u_xlat10_10;
vec3 u_xlat13;
lowp vec3 u_xlat10_13;
mediump float u_xlat16_16;
lowp float u_xlat10_17;
bool u_xlatb17;
mediump float u_xlat16_24;
float u_xlat25;
void main()
{
    u_xlat16_0.x = (-_UMin) + _UMax;
    u_xlat16_8 = u_xlat16_0.x * 0.0250000004;
    u_xlat16_1 = u_xlat16_0.x * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_8 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb9 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb9 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1.x = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb9) * 0xffffffffu);
    if(u_xlati1.x != 0) {
        u_xlat10_9.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_2 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
        u_xlat10_10.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_2.xyz = vec3(u_xlat10_2) * u_xlat10_10.xyz;
        u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Reflectivity);
        u_xlat16_9.xyz = u_xlat10_9.xyz * _Color.xyz + u_xlat16_2.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb2 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb2 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat10.x = _Time.y * _Speed;
        u_xlat10.x = fract(u_xlat10.x);
        u_xlat10.x = u_xlat10.x + -0.5;
        u_xlat10.x = abs(u_xlat10.x) * _Magnitude + _MinValue;
        u_xlat10.xyz = u_xlat16_9.xyz * u_xlat10.xxx;
        u_xlat9.xyz = u_xlat16_9.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb2)) ? u_xlat10.xyz : u_xlat9.xyz;
        u_xlat10_9.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_4.xyz = u_xlat10_9.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;
        u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
        u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
        u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
        u_xlat16_2.xyz = u_xlat16_3.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
        u_xlat16_2.w = _BloomFactor;
        u_xlat16_3 = u_xlat16_2;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1.x == 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.0500000007 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.100000001 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.150000006 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.200000003 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.25 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.300000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.349999994 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.400000006 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.450000018 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.5 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.550000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.600000024 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.650000036 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.699999988 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.75 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.800000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.850000024 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.900000036 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.949999988 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.x = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.x != 0) {
            u_xlat10_9.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_5.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_0.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_0.x = u_xlat16_0.x + u_xlat16_0.x;
            u_xlat16_0.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_0.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_13.xyz = texture(_EnvTex, u_xlat16_0.xyz).xyz;
            u_xlat16_5.xyz = u_xlat10_5.xxx * u_xlat10_13.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Reflectivity);
            u_xlat16_9.xyz = u_xlat10_9.xyz * _Color.xyz + u_xlat16_5.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat13.x = _Time.y * _Speed;
            u_xlat13.x = fract(u_xlat13.x);
            u_xlat13.x = u_xlat13.x + -0.5;
            u_xlat13.x = abs(u_xlat13.x) * _Magnitude + _MinValue;
            u_xlat13.xyz = u_xlat16_9.xyz * u_xlat13.xxx;
            u_xlat9.xyz = u_xlat16_9.xyz * vec3(_LightMapIntensity);
            u_xlat16_0.xyz = (bool(u_xlatb5)) ? u_xlat13.xyz : u_xlat9.xyz;
            u_xlat10_9.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz;
            u_xlat16_4.xyz = u_xlat10_9.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
            u_xlat16_24 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_24 = min(max(u_xlat16_24, 0.0), 1.0);
#else
            u_xlat16_24 = clamp(u_xlat16_24, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(u_xlat16_24) + vs_COLOR1.xyz;
            SV_Target0.w = _BloomFactor;
            SV_Target0.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1.x != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_HEIGHT" "_LightMap_ON" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _HeigtFogParams;
uniform 	vec4 _HeigtFogRamp;
uniform 	vec4 _HeigtFogColBase;
uniform 	vec4 _HeigtFogColDelta;
uniform 	vec4 _HeigtFogColParams;
uniform 	vec4 _HeigtFogRadialCol;
uniform 	vec4 _Mihoyo_FogColor;
uniform 	vec4 _PropertyLightmapTexTS;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec2 u_xlat5;
float u_xlat6;
bool u_xlatb6;
mediump float u_xlat16_9;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat18;
float u_xlat19;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD1.xy * _PropertyLightmapTexTS.xy + _PropertyLightmapTexTS.zw;
    vs_TEXCOORD1.xy = u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat2.y = u_xlat1.y;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat5.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat2.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat5.y = u_xlat16_4.x;
    u_xlat2.z = dot(u_xlat5.xy, u_xlat1.xz);
    vs_TEXCOORD3.xyz = u_xlat2.xyz;
    u_xlat18 = u_xlat0.y * _HeigtFogColParams.x + _HeigtFogColParams.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
    u_xlat16_3 = (-u_xlat18) + 2.0;
    u_xlat16_3 = u_xlat18 * u_xlat16_3;
    u_xlat1.xyz = vec3(u_xlat16_3) * _HeigtFogColDelta.xyz + _HeigtFogColBase.xyz;
    u_xlat2.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol.xyz;
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = u_xlat0.y * _HeigtFogParams.x;
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat12.x = u_xlat0.x + (-_HeigtFogRamp.w);
    u_xlat12.x = u_xlat12.x * _HeigtFogColParams.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat12.x = min(max(u_xlat12.x, 0.0), 1.0);
#else
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
#endif
    u_xlat1.xyz = u_xlat12.xxx * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat12.x = _ProjectionParams.z * 0.999899983;
#ifdef UNITY_ADRENO_ES3
    u_xlatb12 = !!(u_xlat0.x>=u_xlat12.x);
#else
    u_xlatb12 = u_xlat0.x>=u_xlat12.x;
#endif
    u_xlat18 = u_xlat0.x * _HeigtFogParams.z + _HeigtFogParams.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat19 = (-u_xlat18) + 2.0;
    u_xlat18 = u_xlat18 * u_xlat19;
    u_xlat19 = u_xlat18 * _HeigtFogColDelta.w;
    u_xlat12.x = (u_xlatb12) ? u_xlat19 : u_xlat18;
    u_xlat12.x = log2(u_xlat12.x);
    u_xlat12.x = u_xlat12.x * _Mihoyo_FogColor.w;
    u_xlat12.x = exp2(u_xlat12.x);
    u_xlat12.x = min(u_xlat12.x, _HeigtFogColBase.w);
    u_xlat1.xyz = u_xlat12.xxx * u_xlat1.xyz;
    u_xlat18 = u_xlat6 * -1.44269502;
    u_xlat12.y = exp2(u_xlat18);
    u_xlat12.xy = (-u_xlat12.xy) + vec2(1.0, 1.0);
    u_xlat18 = u_xlat12.y / u_xlat6;
#ifdef UNITY_ADRENO_ES3
    u_xlatb6 = !!(0.00999999978<abs(u_xlat6));
#else
    u_xlatb6 = 0.00999999978<abs(u_xlat6);
#endif
    u_xlat16_3 = (u_xlatb6) ? u_xlat18 : 1.0;
    u_xlat6 = u_xlat0.x * _HeigtFogParams.y;
    u_xlat0.x = u_xlat0.x * _HeigtFogRamp.x + _HeigtFogRamp.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat16_3 = u_xlat6 * u_xlat16_3;
    u_xlat16_3 = exp2((-u_xlat16_3));
    u_xlat16_3 = min(u_xlat16_3, 1.0);
    u_xlat16_3 = (-u_xlat16_3) + 1.0;
    u_xlat16_9 = (-u_xlat0.x) + 2.0;
    u_xlat16_9 = u_xlat0.x * u_xlat16_9;
    u_xlat0.x = u_xlat16_9 * _HeigtFogRamp.z + (-_HeigtFogRamp.z);
    u_xlat0.x = u_xlat0.x + 1.0;
    u_xlat16_3 = u_xlat0.x * u_xlat16_3;
    u_xlat0.x = min(u_xlat16_3, _HeigtFogColBase.w);
    u_xlat6 = (-u_xlat0.x) + 1.0;
    u_xlat1.xyz = vec3(u_xlat6) * u_xlat1.xyz;
    u_xlat2.w = u_xlat6 * u_xlat12.x;
    u_xlat2.xyz = _Mihoyo_FogColor.xyz * u_xlat0.xxx + u_xlat1.xyz;
    vs_COLOR1 = u_xlat2;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform lowp sampler2D _PropertyLightmapTex;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
ivec2 u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp float u_xlat10_2;
bool u_xlatb2;
mediump vec4 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
lowp vec3 u_xlat10_9;
ivec2 u_xlati9;
bool u_xlatb9;
vec3 u_xlat10;
lowp vec3 u_xlat10_10;
vec3 u_xlat13;
lowp vec3 u_xlat10_13;
mediump float u_xlat16_16;
lowp float u_xlat10_17;
bool u_xlatb17;
mediump float u_xlat16_24;
float u_xlat25;
void main()
{
    u_xlat16_0.x = (-_UMin) + _UMax;
    u_xlat16_8 = u_xlat16_0.x * 0.0250000004;
    u_xlat16_1 = u_xlat16_0.x * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_8 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb9 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb9 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1.x = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb9) * 0xffffffffu);
    if(u_xlati1.x != 0) {
        u_xlat10_9.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_2 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
        u_xlat10_10.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_2.xyz = vec3(u_xlat10_2) * u_xlat10_10.xyz;
        u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Reflectivity);
        u_xlat16_9.xyz = u_xlat10_9.xyz * _Color.xyz + u_xlat16_2.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb2 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb2 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat10.x = _Time.y * _Speed;
        u_xlat10.x = fract(u_xlat10.x);
        u_xlat10.x = u_xlat10.x + -0.5;
        u_xlat10.x = abs(u_xlat10.x) * _Magnitude + _MinValue;
        u_xlat10.xyz = u_xlat16_9.xyz * u_xlat10.xxx;
        u_xlat9.xyz = u_xlat16_9.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb2)) ? u_xlat10.xyz : u_xlat9.xyz;
        u_xlat10_9.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_4.xyz = u_xlat10_9.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;
        u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
        u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
        u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
        u_xlat16_2.xyz = u_xlat16_3.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
        u_xlat16_2.w = _BloomFactor;
        u_xlat16_3 = u_xlat16_2;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1.x == 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.0500000007 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.100000001 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.150000006 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.200000003 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.25 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.300000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.349999994 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.400000006 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.450000018 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.5 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.550000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.600000024 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.650000036 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.699999988 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.75 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.800000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.850000024 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.900000036 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.949999988 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.x = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.x != 0) {
            u_xlat10_9.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_5.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_0.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_0.x = u_xlat16_0.x + u_xlat16_0.x;
            u_xlat16_0.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_0.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_13.xyz = texture(_EnvTex, u_xlat16_0.xyz).xyz;
            u_xlat16_5.xyz = u_xlat10_5.xxx * u_xlat10_13.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Reflectivity);
            u_xlat16_9.xyz = u_xlat10_9.xyz * _Color.xyz + u_xlat16_5.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat13.x = _Time.y * _Speed;
            u_xlat13.x = fract(u_xlat13.x);
            u_xlat13.x = u_xlat13.x + -0.5;
            u_xlat13.x = abs(u_xlat13.x) * _Magnitude + _MinValue;
            u_xlat13.xyz = u_xlat16_9.xyz * u_xlat13.xxx;
            u_xlat9.xyz = u_xlat16_9.xyz * vec3(_LightMapIntensity);
            u_xlat16_0.xyz = (bool(u_xlatb5)) ? u_xlat13.xyz : u_xlat9.xyz;
            u_xlat10_9.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz;
            u_xlat16_4.xyz = u_xlat10_9.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
            u_xlat16_24 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_24 = min(max(u_xlat16_24, 0.0), 1.0);
#else
            u_xlat16_24 = clamp(u_xlat16_24, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(u_xlat16_24) + vs_COLOR1.xyz;
            SV_Target0.w = _BloomFactor;
            SV_Target0.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1.x != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_HEIGHT" "FOG_LERP" "_LightMap_ON" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump float _LerpFactor;
uniform 	vec4 _HeigtFogParams2;
uniform 	vec4 _HeigtFogParams3;
uniform 	vec4 _HeigtFogRamp2;
uniform 	vec4 _HeigtFogRamp3;
uniform 	vec4 _HeigtFogColBase2;
uniform 	vec4 _HeigtFogColBase3;
uniform 	vec4 _HeigtFogColDelta2;
uniform 	vec4 _HeigtFogColDelta3;
uniform 	vec4 _HeigtFogColParams2;
uniform 	vec4 _HeigtFogColParams3;
uniform 	vec4 _HeigtFogRadialCol2;
uniform 	vec4 _HeigtFogRadialCol3;
uniform 	vec4 _Mihoyo_FogColor2;
uniform 	vec4 _Mihoyo_FogColor3;
uniform 	vec4 _PropertyLightmapTexTS;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
bool u_xlatb2;
vec4 u_xlat3;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec2 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat8;
mediump float u_xlat16_9;
mediump float u_xlat16_10;
float u_xlat12;
bool u_xlatb12;
float u_xlat18;
float u_xlat19;
bool u_xlatb19;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD1.xy * _PropertyLightmapTexTS.xy + _PropertyLightmapTexTS.zw;
    vs_TEXCOORD1.xy = u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat2.y = u_xlat1.y;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat5.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat2.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat5.y = u_xlat16_4.x;
    u_xlat2.z = dot(u_xlat5.xy, u_xlat1.xz);
    vs_TEXCOORD3.xyz = u_xlat2.xyz;
    u_xlat18 = u_xlat0.y * _HeigtFogColParams3.x + _HeigtFogColParams3.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat16_3 = (-u_xlat18) + 2.0;
    u_xlat16_3 = u_xlat18 * u_xlat16_3;
    u_xlat1.xyz = vec3(u_xlat16_3) * _HeigtFogColDelta3.xyz + _HeigtFogColBase3.xyz;
    u_xlat2.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol3.xyz;
    u_xlat0.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
    u_xlat6.x = u_xlat0.y * _HeigtFogColParams2.x + _HeigtFogColParams2.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat0.x = dot(u_xlat0.xzw, u_xlat0.xzw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat18 = u_xlat0.x + (-_HeigtFogRamp3.w);
    u_xlat18 = u_xlat18 * _HeigtFogColParams3.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat18 = u_xlat0.x * _HeigtFogParams3.z + _HeigtFogParams3.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat19 = (-u_xlat18) + 2.0;
    u_xlat18 = u_xlat18 * u_xlat19;
    u_xlat19 = u_xlat18 * _HeigtFogColDelta3.w;
    u_xlat2.x = _ProjectionParams.z * 0.999899983;
#ifdef UNITY_ADRENO_ES3
    u_xlatb2 = !!(u_xlat0.x>=u_xlat2.x);
#else
    u_xlatb2 = u_xlat0.x>=u_xlat2.x;
#endif
    u_xlat18 = (u_xlatb2) ? u_xlat19 : u_xlat18;
    u_xlat18 = log2(u_xlat18);
    u_xlat18 = u_xlat18 * _Mihoyo_FogColor3.w;
    u_xlat18 = exp2(u_xlat18);
    u_xlat18 = min(u_xlat18, _HeigtFogColBase3.w);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat18 = (-u_xlat18) + 1.0;
    u_xlat19 = u_xlat0.z * _HeigtFogParams3.x;
    u_xlat12 = u_xlat0.z * _HeigtFogParams2.x;
    u_xlat8.x = u_xlat19 * -1.44269502;
    u_xlat8.x = exp2(u_xlat8.x);
    u_xlat8.x = (-u_xlat8.x) + 1.0;
    u_xlat8.x = u_xlat8.x / u_xlat19;
#ifdef UNITY_ADRENO_ES3
    u_xlatb19 = !!(0.00999999978<abs(u_xlat19));
#else
    u_xlatb19 = 0.00999999978<abs(u_xlat19);
#endif
    u_xlat16_3 = (u_xlatb19) ? u_xlat8.x : 1.0;
    u_xlat19 = u_xlat0.x * _HeigtFogParams3.y;
    u_xlat16_3 = u_xlat19 * u_xlat16_3;
    u_xlat16_3 = exp2((-u_xlat16_3));
    u_xlat16_3 = min(u_xlat16_3, 1.0);
    u_xlat16_3 = (-u_xlat16_3) + 1.0;
    u_xlat19 = u_xlat0.x * _HeigtFogRamp3.x + _HeigtFogRamp3.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat19 = min(max(u_xlat19, 0.0), 1.0);
#else
    u_xlat19 = clamp(u_xlat19, 0.0, 1.0);
#endif
    u_xlat16_9 = (-u_xlat19) + 2.0;
    u_xlat16_9 = u_xlat19 * u_xlat16_9;
    u_xlat19 = u_xlat16_9 * _HeigtFogRamp3.z + (-_HeigtFogRamp3.z);
    u_xlat19 = u_xlat19 + 1.0;
    u_xlat16_3 = u_xlat19 * u_xlat16_3;
    u_xlat19 = min(u_xlat16_3, _HeigtFogColBase3.w);
    u_xlat8.x = (-u_xlat19) + 1.0;
    u_xlat1.xyz = u_xlat1.xyz * u_xlat8.xxx;
    u_xlat3.w = u_xlat18 * u_xlat8.x;
    u_xlat3.xyz = _Mihoyo_FogColor3.xyz * vec3(u_xlat19) + u_xlat1.xyz;
    u_xlat16_4.x = (-u_xlat6.x) + 2.0;
    u_xlat16_4.x = u_xlat6.x * u_xlat16_4.x;
    u_xlat1.xyz = u_xlat16_4.xxx * _HeigtFogColDelta2.xyz + _HeigtFogColBase2.xyz;
    u_xlat8.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol2.xyz;
    u_xlat6.x = u_xlat0.x + (-_HeigtFogRamp2.w);
    u_xlat6.x = u_xlat6.x * _HeigtFogColParams2.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat1.xyz = u_xlat6.xxx * u_xlat8.xyz + u_xlat1.xyz;
    u_xlat6.x = u_xlat0.x * _HeigtFogParams2.z + _HeigtFogParams2.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat18 = (-u_xlat6.x) + 2.0;
    u_xlat6.x = u_xlat18 * u_xlat6.x;
    u_xlat18 = u_xlat6.x * _HeigtFogColDelta2.w;
    u_xlat6.x = (u_xlatb2) ? u_xlat18 : u_xlat6.x;
    u_xlat6.x = log2(u_xlat6.x);
    u_xlat6.x = u_xlat6.x * _Mihoyo_FogColor2.w;
    u_xlat6.x = exp2(u_xlat6.x);
    u_xlat6.x = min(u_xlat6.x, _HeigtFogColBase2.w);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat18 = u_xlat12 * -1.44269502;
    u_xlat6.z = exp2(u_xlat18);
    u_xlat6.xz = (-u_xlat6.xz) + vec2(1.0, 1.0);
    u_xlat18 = u_xlat6.z / u_xlat12;
#ifdef UNITY_ADRENO_ES3
    u_xlatb12 = !!(0.00999999978<abs(u_xlat12));
#else
    u_xlatb12 = 0.00999999978<abs(u_xlat12);
#endif
    u_xlat16_4.x = (u_xlatb12) ? u_xlat18 : 1.0;
    u_xlat12 = u_xlat0.x * _HeigtFogParams2.y;
    u_xlat0.x = u_xlat0.x * _HeigtFogRamp2.x + _HeigtFogRamp2.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat16_4.x = u_xlat12 * u_xlat16_4.x;
    u_xlat16_4.x = exp2((-u_xlat16_4.x));
    u_xlat16_4.x = min(u_xlat16_4.x, 1.0);
    u_xlat16_4.x = (-u_xlat16_4.x) + 1.0;
    u_xlat16_10 = (-u_xlat0.x) + 2.0;
    u_xlat16_10 = u_xlat0.x * u_xlat16_10;
    u_xlat0.x = u_xlat16_10 * _HeigtFogRamp2.z + (-_HeigtFogRamp2.z);
    u_xlat0.x = u_xlat0.x + 1.0;
    u_xlat16_4.x = u_xlat0.x * u_xlat16_4.x;
    u_xlat0.x = min(u_xlat16_4.x, _HeigtFogColBase2.w);
    u_xlat12 = (-u_xlat0.x) + 1.0;
    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
    u_xlat2.w = u_xlat12 * u_xlat6.x;
    u_xlat2.xyz = _Mihoyo_FogColor2.xyz * u_xlat0.xxx + u_xlat1.xyz;
    u_xlat0 = (-u_xlat2) + u_xlat3;
    u_xlat0 = vec4(vec4(_LerpFactor, _LerpFactor, _LerpFactor, _LerpFactor)) * u_xlat0 + u_xlat2;
    vs_COLOR1 = u_xlat0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform lowp sampler2D _PropertyLightmapTex;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
ivec2 u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp float u_xlat10_2;
bool u_xlatb2;
mediump vec4 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
lowp vec3 u_xlat10_9;
ivec2 u_xlati9;
bool u_xlatb9;
vec3 u_xlat10;
lowp vec3 u_xlat10_10;
vec3 u_xlat13;
lowp vec3 u_xlat10_13;
mediump float u_xlat16_16;
lowp float u_xlat10_17;
bool u_xlatb17;
mediump float u_xlat16_24;
float u_xlat25;
void main()
{
    u_xlat16_0.x = (-_UMin) + _UMax;
    u_xlat16_8 = u_xlat16_0.x * 0.0250000004;
    u_xlat16_1 = u_xlat16_0.x * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_8 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb9 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb9 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1.x = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb9) * 0xffffffffu);
    if(u_xlati1.x != 0) {
        u_xlat10_9.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_2 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
        u_xlat10_10.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_2.xyz = vec3(u_xlat10_2) * u_xlat10_10.xyz;
        u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Reflectivity);
        u_xlat16_9.xyz = u_xlat10_9.xyz * _Color.xyz + u_xlat16_2.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb2 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb2 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat10.x = _Time.y * _Speed;
        u_xlat10.x = fract(u_xlat10.x);
        u_xlat10.x = u_xlat10.x + -0.5;
        u_xlat10.x = abs(u_xlat10.x) * _Magnitude + _MinValue;
        u_xlat10.xyz = u_xlat16_9.xyz * u_xlat10.xxx;
        u_xlat9.xyz = u_xlat16_9.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb2)) ? u_xlat10.xyz : u_xlat9.xyz;
        u_xlat10_9.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_4.xyz = u_xlat10_9.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;
        u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
        u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
        u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
        u_xlat16_2.xyz = u_xlat16_3.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
        u_xlat16_2.w = _BloomFactor;
        u_xlat16_3 = u_xlat16_2;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1.x == 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.0500000007 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.100000001 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.150000006 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.200000003 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.25 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.300000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.349999994 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.400000006 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.450000018 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.5 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.550000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.600000024 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.650000036 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.699999988 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.75 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.800000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.850000024 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.900000036 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.949999988 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.x = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.x != 0) {
            u_xlat10_9.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_5.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_0.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_0.x = u_xlat16_0.x + u_xlat16_0.x;
            u_xlat16_0.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_0.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_13.xyz = texture(_EnvTex, u_xlat16_0.xyz).xyz;
            u_xlat16_5.xyz = u_xlat10_5.xxx * u_xlat10_13.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Reflectivity);
            u_xlat16_9.xyz = u_xlat10_9.xyz * _Color.xyz + u_xlat16_5.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat13.x = _Time.y * _Speed;
            u_xlat13.x = fract(u_xlat13.x);
            u_xlat13.x = u_xlat13.x + -0.5;
            u_xlat13.x = abs(u_xlat13.x) * _Magnitude + _MinValue;
            u_xlat13.xyz = u_xlat16_9.xyz * u_xlat13.xxx;
            u_xlat9.xyz = u_xlat16_9.xyz * vec3(_LightMapIntensity);
            u_xlat16_0.xyz = (bool(u_xlatb5)) ? u_xlat13.xyz : u_xlat9.xyz;
            u_xlat10_9.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz;
            u_xlat16_4.xyz = u_xlat10_9.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
            u_xlat16_24 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_24 = min(max(u_xlat16_24, 0.0), 1.0);
#else
            u_xlat16_24 = clamp(u_xlat16_24, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(u_xlat16_24) + vs_COLOR1.xyz;
            SV_Target0.w = _BloomFactor;
            SV_Target0.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1.x != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_HEIGHT" "FOG_LERP" "_LightMap_ON" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump float _LerpFactor;
uniform 	vec4 _HeigtFogParams2;
uniform 	vec4 _HeigtFogParams3;
uniform 	vec4 _HeigtFogRamp2;
uniform 	vec4 _HeigtFogRamp3;
uniform 	vec4 _HeigtFogColBase2;
uniform 	vec4 _HeigtFogColBase3;
uniform 	vec4 _HeigtFogColDelta2;
uniform 	vec4 _HeigtFogColDelta3;
uniform 	vec4 _HeigtFogColParams2;
uniform 	vec4 _HeigtFogColParams3;
uniform 	vec4 _HeigtFogRadialCol2;
uniform 	vec4 _HeigtFogRadialCol3;
uniform 	vec4 _Mihoyo_FogColor2;
uniform 	vec4 _Mihoyo_FogColor3;
uniform 	vec4 _PropertyLightmapTexTS;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
bool u_xlatb2;
vec4 u_xlat3;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec2 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat8;
mediump float u_xlat16_9;
mediump float u_xlat16_10;
float u_xlat12;
bool u_xlatb12;
float u_xlat18;
float u_xlat19;
bool u_xlatb19;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD1.xy * _PropertyLightmapTexTS.xy + _PropertyLightmapTexTS.zw;
    vs_TEXCOORD1.xy = u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat2.y = u_xlat1.y;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat5.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat2.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat5.y = u_xlat16_4.x;
    u_xlat2.z = dot(u_xlat5.xy, u_xlat1.xz);
    vs_TEXCOORD3.xyz = u_xlat2.xyz;
    u_xlat18 = u_xlat0.y * _HeigtFogColParams3.x + _HeigtFogColParams3.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat16_3 = (-u_xlat18) + 2.0;
    u_xlat16_3 = u_xlat18 * u_xlat16_3;
    u_xlat1.xyz = vec3(u_xlat16_3) * _HeigtFogColDelta3.xyz + _HeigtFogColBase3.xyz;
    u_xlat2.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol3.xyz;
    u_xlat0.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
    u_xlat6.x = u_xlat0.y * _HeigtFogColParams2.x + _HeigtFogColParams2.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat0.x = dot(u_xlat0.xzw, u_xlat0.xzw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat18 = u_xlat0.x + (-_HeigtFogRamp3.w);
    u_xlat18 = u_xlat18 * _HeigtFogColParams3.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat18 = u_xlat0.x * _HeigtFogParams3.z + _HeigtFogParams3.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat19 = (-u_xlat18) + 2.0;
    u_xlat18 = u_xlat18 * u_xlat19;
    u_xlat19 = u_xlat18 * _HeigtFogColDelta3.w;
    u_xlat2.x = _ProjectionParams.z * 0.999899983;
#ifdef UNITY_ADRENO_ES3
    u_xlatb2 = !!(u_xlat0.x>=u_xlat2.x);
#else
    u_xlatb2 = u_xlat0.x>=u_xlat2.x;
#endif
    u_xlat18 = (u_xlatb2) ? u_xlat19 : u_xlat18;
    u_xlat18 = log2(u_xlat18);
    u_xlat18 = u_xlat18 * _Mihoyo_FogColor3.w;
    u_xlat18 = exp2(u_xlat18);
    u_xlat18 = min(u_xlat18, _HeigtFogColBase3.w);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat18 = (-u_xlat18) + 1.0;
    u_xlat19 = u_xlat0.z * _HeigtFogParams3.x;
    u_xlat12 = u_xlat0.z * _HeigtFogParams2.x;
    u_xlat8.x = u_xlat19 * -1.44269502;
    u_xlat8.x = exp2(u_xlat8.x);
    u_xlat8.x = (-u_xlat8.x) + 1.0;
    u_xlat8.x = u_xlat8.x / u_xlat19;
#ifdef UNITY_ADRENO_ES3
    u_xlatb19 = !!(0.00999999978<abs(u_xlat19));
#else
    u_xlatb19 = 0.00999999978<abs(u_xlat19);
#endif
    u_xlat16_3 = (u_xlatb19) ? u_xlat8.x : 1.0;
    u_xlat19 = u_xlat0.x * _HeigtFogParams3.y;
    u_xlat16_3 = u_xlat19 * u_xlat16_3;
    u_xlat16_3 = exp2((-u_xlat16_3));
    u_xlat16_3 = min(u_xlat16_3, 1.0);
    u_xlat16_3 = (-u_xlat16_3) + 1.0;
    u_xlat19 = u_xlat0.x * _HeigtFogRamp3.x + _HeigtFogRamp3.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat19 = min(max(u_xlat19, 0.0), 1.0);
#else
    u_xlat19 = clamp(u_xlat19, 0.0, 1.0);
#endif
    u_xlat16_9 = (-u_xlat19) + 2.0;
    u_xlat16_9 = u_xlat19 * u_xlat16_9;
    u_xlat19 = u_xlat16_9 * _HeigtFogRamp3.z + (-_HeigtFogRamp3.z);
    u_xlat19 = u_xlat19 + 1.0;
    u_xlat16_3 = u_xlat19 * u_xlat16_3;
    u_xlat19 = min(u_xlat16_3, _HeigtFogColBase3.w);
    u_xlat8.x = (-u_xlat19) + 1.0;
    u_xlat1.xyz = u_xlat1.xyz * u_xlat8.xxx;
    u_xlat3.w = u_xlat18 * u_xlat8.x;
    u_xlat3.xyz = _Mihoyo_FogColor3.xyz * vec3(u_xlat19) + u_xlat1.xyz;
    u_xlat16_4.x = (-u_xlat6.x) + 2.0;
    u_xlat16_4.x = u_xlat6.x * u_xlat16_4.x;
    u_xlat1.xyz = u_xlat16_4.xxx * _HeigtFogColDelta2.xyz + _HeigtFogColBase2.xyz;
    u_xlat8.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol2.xyz;
    u_xlat6.x = u_xlat0.x + (-_HeigtFogRamp2.w);
    u_xlat6.x = u_xlat6.x * _HeigtFogColParams2.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat1.xyz = u_xlat6.xxx * u_xlat8.xyz + u_xlat1.xyz;
    u_xlat6.x = u_xlat0.x * _HeigtFogParams2.z + _HeigtFogParams2.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat18 = (-u_xlat6.x) + 2.0;
    u_xlat6.x = u_xlat18 * u_xlat6.x;
    u_xlat18 = u_xlat6.x * _HeigtFogColDelta2.w;
    u_xlat6.x = (u_xlatb2) ? u_xlat18 : u_xlat6.x;
    u_xlat6.x = log2(u_xlat6.x);
    u_xlat6.x = u_xlat6.x * _Mihoyo_FogColor2.w;
    u_xlat6.x = exp2(u_xlat6.x);
    u_xlat6.x = min(u_xlat6.x, _HeigtFogColBase2.w);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat18 = u_xlat12 * -1.44269502;
    u_xlat6.z = exp2(u_xlat18);
    u_xlat6.xz = (-u_xlat6.xz) + vec2(1.0, 1.0);
    u_xlat18 = u_xlat6.z / u_xlat12;
#ifdef UNITY_ADRENO_ES3
    u_xlatb12 = !!(0.00999999978<abs(u_xlat12));
#else
    u_xlatb12 = 0.00999999978<abs(u_xlat12);
#endif
    u_xlat16_4.x = (u_xlatb12) ? u_xlat18 : 1.0;
    u_xlat12 = u_xlat0.x * _HeigtFogParams2.y;
    u_xlat0.x = u_xlat0.x * _HeigtFogRamp2.x + _HeigtFogRamp2.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat16_4.x = u_xlat12 * u_xlat16_4.x;
    u_xlat16_4.x = exp2((-u_xlat16_4.x));
    u_xlat16_4.x = min(u_xlat16_4.x, 1.0);
    u_xlat16_4.x = (-u_xlat16_4.x) + 1.0;
    u_xlat16_10 = (-u_xlat0.x) + 2.0;
    u_xlat16_10 = u_xlat0.x * u_xlat16_10;
    u_xlat0.x = u_xlat16_10 * _HeigtFogRamp2.z + (-_HeigtFogRamp2.z);
    u_xlat0.x = u_xlat0.x + 1.0;
    u_xlat16_4.x = u_xlat0.x * u_xlat16_4.x;
    u_xlat0.x = min(u_xlat16_4.x, _HeigtFogColBase2.w);
    u_xlat12 = (-u_xlat0.x) + 1.0;
    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
    u_xlat2.w = u_xlat12 * u_xlat6.x;
    u_xlat2.xyz = _Mihoyo_FogColor2.xyz * u_xlat0.xxx + u_xlat1.xyz;
    u_xlat0 = (-u_xlat2) + u_xlat3;
    u_xlat0 = vec4(vec4(_LerpFactor, _LerpFactor, _LerpFactor, _LerpFactor)) * u_xlat0 + u_xlat2;
    vs_COLOR1 = u_xlat0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform lowp sampler2D _PropertyLightmapTex;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
ivec2 u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp float u_xlat10_2;
bool u_xlatb2;
mediump vec4 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
lowp vec3 u_xlat10_9;
ivec2 u_xlati9;
bool u_xlatb9;
vec3 u_xlat10;
lowp vec3 u_xlat10_10;
vec3 u_xlat13;
lowp vec3 u_xlat10_13;
mediump float u_xlat16_16;
lowp float u_xlat10_17;
bool u_xlatb17;
mediump float u_xlat16_24;
float u_xlat25;
void main()
{
    u_xlat16_0.x = (-_UMin) + _UMax;
    u_xlat16_8 = u_xlat16_0.x * 0.0250000004;
    u_xlat16_1 = u_xlat16_0.x * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_8 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb9 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb9 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1.x = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb9) * 0xffffffffu);
    if(u_xlati1.x != 0) {
        u_xlat10_9.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_2 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
        u_xlat10_10.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_2.xyz = vec3(u_xlat10_2) * u_xlat10_10.xyz;
        u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Reflectivity);
        u_xlat16_9.xyz = u_xlat10_9.xyz * _Color.xyz + u_xlat16_2.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb2 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb2 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat10.x = _Time.y * _Speed;
        u_xlat10.x = fract(u_xlat10.x);
        u_xlat10.x = u_xlat10.x + -0.5;
        u_xlat10.x = abs(u_xlat10.x) * _Magnitude + _MinValue;
        u_xlat10.xyz = u_xlat16_9.xyz * u_xlat10.xxx;
        u_xlat9.xyz = u_xlat16_9.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb2)) ? u_xlat10.xyz : u_xlat9.xyz;
        u_xlat10_9.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_4.xyz = u_xlat10_9.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;
        u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
        u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
        u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
        u_xlat16_2.xyz = u_xlat16_3.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
        u_xlat16_2.w = _BloomFactor;
        u_xlat16_3 = u_xlat16_2;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1.x == 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.0500000007 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.100000001 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.150000006 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.200000003 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.25 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.300000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.349999994 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.400000006 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.450000018 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.5 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.550000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.600000024 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.650000036 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.699999988 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.75 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.800000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.850000024 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.900000036 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.949999988 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.x = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.x != 0) {
            u_xlat10_9.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_5.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_0.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_0.x = u_xlat16_0.x + u_xlat16_0.x;
            u_xlat16_0.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_0.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_13.xyz = texture(_EnvTex, u_xlat16_0.xyz).xyz;
            u_xlat16_5.xyz = u_xlat10_5.xxx * u_xlat10_13.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Reflectivity);
            u_xlat16_9.xyz = u_xlat10_9.xyz * _Color.xyz + u_xlat16_5.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat13.x = _Time.y * _Speed;
            u_xlat13.x = fract(u_xlat13.x);
            u_xlat13.x = u_xlat13.x + -0.5;
            u_xlat13.x = abs(u_xlat13.x) * _Magnitude + _MinValue;
            u_xlat13.xyz = u_xlat16_9.xyz * u_xlat13.xxx;
            u_xlat9.xyz = u_xlat16_9.xyz * vec3(_LightMapIntensity);
            u_xlat16_0.xyz = (bool(u_xlatb5)) ? u_xlat13.xyz : u_xlat9.xyz;
            u_xlat10_9.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz;
            u_xlat16_4.xyz = u_xlat10_9.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
            u_xlat16_24 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_24 = min(max(u_xlat16_24, 0.0), 1.0);
#else
            u_xlat16_24 = clamp(u_xlat16_24, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(u_xlat16_24) + vs_COLOR1.xyz;
            SV_Target0.w = _BloomFactor;
            SV_Target0.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1.x != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_HEIGHT" "FOG_LERP" "_LightMap_ON" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump float _LerpFactor;
uniform 	vec4 _HeigtFogParams2;
uniform 	vec4 _HeigtFogParams3;
uniform 	vec4 _HeigtFogRamp2;
uniform 	vec4 _HeigtFogRamp3;
uniform 	vec4 _HeigtFogColBase2;
uniform 	vec4 _HeigtFogColBase3;
uniform 	vec4 _HeigtFogColDelta2;
uniform 	vec4 _HeigtFogColDelta3;
uniform 	vec4 _HeigtFogColParams2;
uniform 	vec4 _HeigtFogColParams3;
uniform 	vec4 _HeigtFogRadialCol2;
uniform 	vec4 _HeigtFogRadialCol3;
uniform 	vec4 _Mihoyo_FogColor2;
uniform 	vec4 _Mihoyo_FogColor3;
uniform 	vec4 _PropertyLightmapTexTS;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
bool u_xlatb2;
vec4 u_xlat3;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec2 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat8;
mediump float u_xlat16_9;
mediump float u_xlat16_10;
float u_xlat12;
bool u_xlatb12;
float u_xlat18;
float u_xlat19;
bool u_xlatb19;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD1.xy * _PropertyLightmapTexTS.xy + _PropertyLightmapTexTS.zw;
    vs_TEXCOORD1.xy = u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat2.y = u_xlat1.y;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat5.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat2.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat5.y = u_xlat16_4.x;
    u_xlat2.z = dot(u_xlat5.xy, u_xlat1.xz);
    vs_TEXCOORD3.xyz = u_xlat2.xyz;
    u_xlat18 = u_xlat0.y * _HeigtFogColParams3.x + _HeigtFogColParams3.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat16_3 = (-u_xlat18) + 2.0;
    u_xlat16_3 = u_xlat18 * u_xlat16_3;
    u_xlat1.xyz = vec3(u_xlat16_3) * _HeigtFogColDelta3.xyz + _HeigtFogColBase3.xyz;
    u_xlat2.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol3.xyz;
    u_xlat0.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
    u_xlat6.x = u_xlat0.y * _HeigtFogColParams2.x + _HeigtFogColParams2.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat0.x = dot(u_xlat0.xzw, u_xlat0.xzw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat18 = u_xlat0.x + (-_HeigtFogRamp3.w);
    u_xlat18 = u_xlat18 * _HeigtFogColParams3.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat18 = u_xlat0.x * _HeigtFogParams3.z + _HeigtFogParams3.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat19 = (-u_xlat18) + 2.0;
    u_xlat18 = u_xlat18 * u_xlat19;
    u_xlat19 = u_xlat18 * _HeigtFogColDelta3.w;
    u_xlat2.x = _ProjectionParams.z * 0.999899983;
#ifdef UNITY_ADRENO_ES3
    u_xlatb2 = !!(u_xlat0.x>=u_xlat2.x);
#else
    u_xlatb2 = u_xlat0.x>=u_xlat2.x;
#endif
    u_xlat18 = (u_xlatb2) ? u_xlat19 : u_xlat18;
    u_xlat18 = log2(u_xlat18);
    u_xlat18 = u_xlat18 * _Mihoyo_FogColor3.w;
    u_xlat18 = exp2(u_xlat18);
    u_xlat18 = min(u_xlat18, _HeigtFogColBase3.w);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat18 = (-u_xlat18) + 1.0;
    u_xlat19 = u_xlat0.z * _HeigtFogParams3.x;
    u_xlat12 = u_xlat0.z * _HeigtFogParams2.x;
    u_xlat8.x = u_xlat19 * -1.44269502;
    u_xlat8.x = exp2(u_xlat8.x);
    u_xlat8.x = (-u_xlat8.x) + 1.0;
    u_xlat8.x = u_xlat8.x / u_xlat19;
#ifdef UNITY_ADRENO_ES3
    u_xlatb19 = !!(0.00999999978<abs(u_xlat19));
#else
    u_xlatb19 = 0.00999999978<abs(u_xlat19);
#endif
    u_xlat16_3 = (u_xlatb19) ? u_xlat8.x : 1.0;
    u_xlat19 = u_xlat0.x * _HeigtFogParams3.y;
    u_xlat16_3 = u_xlat19 * u_xlat16_3;
    u_xlat16_3 = exp2((-u_xlat16_3));
    u_xlat16_3 = min(u_xlat16_3, 1.0);
    u_xlat16_3 = (-u_xlat16_3) + 1.0;
    u_xlat19 = u_xlat0.x * _HeigtFogRamp3.x + _HeigtFogRamp3.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat19 = min(max(u_xlat19, 0.0), 1.0);
#else
    u_xlat19 = clamp(u_xlat19, 0.0, 1.0);
#endif
    u_xlat16_9 = (-u_xlat19) + 2.0;
    u_xlat16_9 = u_xlat19 * u_xlat16_9;
    u_xlat19 = u_xlat16_9 * _HeigtFogRamp3.z + (-_HeigtFogRamp3.z);
    u_xlat19 = u_xlat19 + 1.0;
    u_xlat16_3 = u_xlat19 * u_xlat16_3;
    u_xlat19 = min(u_xlat16_3, _HeigtFogColBase3.w);
    u_xlat8.x = (-u_xlat19) + 1.0;
    u_xlat1.xyz = u_xlat1.xyz * u_xlat8.xxx;
    u_xlat3.w = u_xlat18 * u_xlat8.x;
    u_xlat3.xyz = _Mihoyo_FogColor3.xyz * vec3(u_xlat19) + u_xlat1.xyz;
    u_xlat16_4.x = (-u_xlat6.x) + 2.0;
    u_xlat16_4.x = u_xlat6.x * u_xlat16_4.x;
    u_xlat1.xyz = u_xlat16_4.xxx * _HeigtFogColDelta2.xyz + _HeigtFogColBase2.xyz;
    u_xlat8.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol2.xyz;
    u_xlat6.x = u_xlat0.x + (-_HeigtFogRamp2.w);
    u_xlat6.x = u_xlat6.x * _HeigtFogColParams2.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat1.xyz = u_xlat6.xxx * u_xlat8.xyz + u_xlat1.xyz;
    u_xlat6.x = u_xlat0.x * _HeigtFogParams2.z + _HeigtFogParams2.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat18 = (-u_xlat6.x) + 2.0;
    u_xlat6.x = u_xlat18 * u_xlat6.x;
    u_xlat18 = u_xlat6.x * _HeigtFogColDelta2.w;
    u_xlat6.x = (u_xlatb2) ? u_xlat18 : u_xlat6.x;
    u_xlat6.x = log2(u_xlat6.x);
    u_xlat6.x = u_xlat6.x * _Mihoyo_FogColor2.w;
    u_xlat6.x = exp2(u_xlat6.x);
    u_xlat6.x = min(u_xlat6.x, _HeigtFogColBase2.w);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat18 = u_xlat12 * -1.44269502;
    u_xlat6.z = exp2(u_xlat18);
    u_xlat6.xz = (-u_xlat6.xz) + vec2(1.0, 1.0);
    u_xlat18 = u_xlat6.z / u_xlat12;
#ifdef UNITY_ADRENO_ES3
    u_xlatb12 = !!(0.00999999978<abs(u_xlat12));
#else
    u_xlatb12 = 0.00999999978<abs(u_xlat12);
#endif
    u_xlat16_4.x = (u_xlatb12) ? u_xlat18 : 1.0;
    u_xlat12 = u_xlat0.x * _HeigtFogParams2.y;
    u_xlat0.x = u_xlat0.x * _HeigtFogRamp2.x + _HeigtFogRamp2.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat16_4.x = u_xlat12 * u_xlat16_4.x;
    u_xlat16_4.x = exp2((-u_xlat16_4.x));
    u_xlat16_4.x = min(u_xlat16_4.x, 1.0);
    u_xlat16_4.x = (-u_xlat16_4.x) + 1.0;
    u_xlat16_10 = (-u_xlat0.x) + 2.0;
    u_xlat16_10 = u_xlat0.x * u_xlat16_10;
    u_xlat0.x = u_xlat16_10 * _HeigtFogRamp2.z + (-_HeigtFogRamp2.z);
    u_xlat0.x = u_xlat0.x + 1.0;
    u_xlat16_4.x = u_xlat0.x * u_xlat16_4.x;
    u_xlat0.x = min(u_xlat16_4.x, _HeigtFogColBase2.w);
    u_xlat12 = (-u_xlat0.x) + 1.0;
    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
    u_xlat2.w = u_xlat12 * u_xlat6.x;
    u_xlat2.xyz = _Mihoyo_FogColor2.xyz * u_xlat0.xxx + u_xlat1.xyz;
    u_xlat0 = (-u_xlat2) + u_xlat3;
    u_xlat0 = vec4(vec4(_LerpFactor, _LerpFactor, _LerpFactor, _LerpFactor)) * u_xlat0 + u_xlat2;
    vs_COLOR1 = u_xlat0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform lowp sampler2D _PropertyLightmapTex;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
ivec2 u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp float u_xlat10_2;
bool u_xlatb2;
mediump vec4 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
lowp vec3 u_xlat10_9;
ivec2 u_xlati9;
bool u_xlatb9;
vec3 u_xlat10;
lowp vec3 u_xlat10_10;
vec3 u_xlat13;
lowp vec3 u_xlat10_13;
mediump float u_xlat16_16;
lowp float u_xlat10_17;
bool u_xlatb17;
mediump float u_xlat16_24;
float u_xlat25;
void main()
{
    u_xlat16_0.x = (-_UMin) + _UMax;
    u_xlat16_8 = u_xlat16_0.x * 0.0250000004;
    u_xlat16_1 = u_xlat16_0.x * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_8 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb9 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb9 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1.x = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb9) * 0xffffffffu);
    if(u_xlati1.x != 0) {
        u_xlat10_9.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_2 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
        u_xlat10_10.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_2.xyz = vec3(u_xlat10_2) * u_xlat10_10.xyz;
        u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Reflectivity);
        u_xlat16_9.xyz = u_xlat10_9.xyz * _Color.xyz + u_xlat16_2.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb2 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb2 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat10.x = _Time.y * _Speed;
        u_xlat10.x = fract(u_xlat10.x);
        u_xlat10.x = u_xlat10.x + -0.5;
        u_xlat10.x = abs(u_xlat10.x) * _Magnitude + _MinValue;
        u_xlat10.xyz = u_xlat16_9.xyz * u_xlat10.xxx;
        u_xlat9.xyz = u_xlat16_9.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb2)) ? u_xlat10.xyz : u_xlat9.xyz;
        u_xlat10_9.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_4.xyz = u_xlat10_9.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;
        u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
        u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
        u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
        u_xlat16_2.xyz = u_xlat16_3.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
        u_xlat16_2.w = _BloomFactor;
        u_xlat16_3 = u_xlat16_2;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1.x == 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.0500000007 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.100000001 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.150000006 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.200000003 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.25 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.300000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.349999994 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.400000006 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.450000018 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.5 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.550000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.600000024 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.650000036 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.699999988 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.75 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.800000012 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.850000024 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.900000036 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.y = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_16 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_16 = u_xlat16_16 + u_xlat16_16;
            u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_16)) + vs_TEXCOORD3.xyz;
            u_xlat10_6.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
            u_xlat16_6.xyz = vec3(u_xlat10_17) * u_xlat10_6.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_6.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat25 = _Time.y * _Speed;
            u_xlat25 = fract(u_xlat25);
            u_xlat25 = u_xlat25 + -0.5;
            u_xlat25 = abs(u_xlat25) * _Magnitude + _MinValue;
            u_xlat6.xyz = vec3(u_xlat25) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_4.xyz = (bool(u_xlatb17)) ? u_xlat6.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
            u_xlat16_7.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
            u_xlat16_16 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_16 = min(max(u_xlat16_16, 0.0), 1.0);
#else
            u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_4.xyz * vec3(u_xlat16_16) + vs_COLOR1.xyz;
            u_xlat16_2.w = _BloomFactor;
            u_xlat16_3 = u_xlat16_2;
        //ENDIF
        }
        u_xlati1.x = u_xlati1.y;
    } else {
        u_xlati1.y = -1;
    //ENDIF
    }
    u_xlati9.xy = ~u_xlati1.yx;
    u_xlati9.x = int(uint(u_xlati9.y) & uint(u_xlati9.x));
    if(u_xlati9.x != 0) {
        u_xlat16_9.x = u_xlat16_0.x * 0.949999988 + _UMin;
        u_xlat16_9.x = u_xlat16_0.x * 0.0250000004 + u_xlat16_9.x;
        u_xlat9.y = (-u_xlat16_8) * _ScaleTime + u_xlat16_9.x;
        u_xlat9.x = u_xlat16_8 * _ScaleTime + u_xlat16_9.x;
        u_xlat9.xy = u_xlat9.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(vs_TEXCOORD0.x>=u_xlat9.y);
#else
        u_xlatb17 = vs_TEXCOORD0.x>=u_xlat9.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb9 = !!(u_xlat9.x>=vs_TEXCOORD0.x);
#else
        u_xlatb9 = u_xlat9.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1.x = int(uint(u_xlatb9) * 0xffffffffu & uint(u_xlatb17) * 0xffffffffu);
        if(u_xlati1.x != 0) {
            u_xlat10_9.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_5.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_0.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_0.x = u_xlat16_0.x + u_xlat16_0.x;
            u_xlat16_0.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_0.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_13.xyz = texture(_EnvTex, u_xlat16_0.xyz).xyz;
            u_xlat16_5.xyz = u_xlat10_5.xxx * u_xlat10_13.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Reflectivity);
            u_xlat16_9.xyz = u_xlat10_9.xyz * _Color.xyz + u_xlat16_5.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat13.x = _Time.y * _Speed;
            u_xlat13.x = fract(u_xlat13.x);
            u_xlat13.x = u_xlat13.x + -0.5;
            u_xlat13.x = abs(u_xlat13.x) * _Magnitude + _MinValue;
            u_xlat13.xyz = u_xlat16_9.xyz * u_xlat13.xxx;
            u_xlat9.xyz = u_xlat16_9.xyz * vec3(_LightMapIntensity);
            u_xlat16_0.xyz = (bool(u_xlatb5)) ? u_xlat13.xyz : u_xlat9.xyz;
            u_xlat10_9.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz;
            u_xlat16_4.xyz = u_xlat10_9.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
            u_xlat16_24 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_24 = min(max(u_xlat16_24, 0.0), 1.0);
#else
            u_xlat16_24 = clamp(u_xlat16_24, 0.0, 1.0);
#endif
            u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(u_xlat16_24) + vs_COLOR1.xyz;
            SV_Target0.w = _BloomFactor;
            SV_Target0.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1.x != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LUMINANCE" "_LightMap_ON" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _FogColorNear;
uniform 	vec4 _FogColorFar;
uniform 	float _FogColorIntensity;
uniform 	float _FogIntensity;
uniform 	float _FogEffectStart;
uniform 	float _FogEffectLimit;
uniform 	float _FogStartDistance;
uniform 	float _FogEndDistance;
uniform 	vec4 _PropertyLightmapTexTS;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec3 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat2.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat5.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat2.y = u_xlat16_4.x;
    u_xlat5.z = dot(u_xlat2.xy, u_xlat1.xz);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
#ifdef UNITY_ADRENO_ES3
    u_xlatb21 = !!(0.5<_FogColorNear.w);
#else
    u_xlatb21 = 0.5<_FogColorNear.w;
#endif
    if(u_xlatb21){
        u_xlat1.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat21 = dot(u_xlat1.xzw, u_xlat1.xzw);
        u_xlat21 = sqrt(u_xlat21);
        u_xlat21 = u_xlat21 + (-_FogStartDistance);
        u_xlat21 = max(u_xlat21, 0.0);
        u_xlat1.xz = vec2(u_xlat21) * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat1.xz = u_xlat1.xz * (-u_xlat1.xz);
        u_xlat1.xz = u_xlat1.xz * vec2(1.44269502, 1.44269502);
        u_xlat1.xz = exp2(u_xlat1.xz);
        u_xlat21 = (-u_xlat1.x) + 1.0;
        u_xlat21 = u_xlat21 * _FogEffectLimit;
        u_xlat21 = max(u_xlat21, _FogEffectStart);
        u_xlat2.w = min(u_xlat21, _FogEffectLimit);
        u_xlat6.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat1.zzz * u_xlat6.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    } else {
        u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
        u_xlat0.x = sqrt(u_xlat0.x);
        u_xlat0.x = u_xlat0.x + (-_FogStartDistance);
        u_xlat0.x = max(u_xlat0.x, 0.0);
        u_xlat0.xy = u_xlat0.xx * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat0.xy = u_xlat0.xy * vec2(500.0, 1000.0);
        u_xlat14 = (-_FogStartDistance) + _FogEndDistance;
        u_xlat14 = max(u_xlat14, 0.100000001);
        u_xlat0.xy = u_xlat0.yx / vec2(u_xlat14);
        u_xlat7.x = u_xlat0.y * _FogEffectLimit;
        u_xlat7.x = max(u_xlat7.x, _FogEffectStart);
        u_xlat2.w = min(u_xlat7.x, _FogEffectLimit);
        u_xlat0.x = u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
        u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
        u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
        u_xlat0.x = (-u_xlat0.x) + 1.0;
        u_xlat7.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat0.xxx * u_xlat7.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    //ENDIF
    }
    u_xlat0.xy = in_TEXCOORD1.xy * _PropertyLightmapTexTS.xy + _PropertyLightmapTexTS.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat5.y = u_xlat1.y;
    vs_TEXCOORD3.xyz = u_xlat5.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform 	mediump float _LumiFactor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform lowp sampler2D _PropertyLightmapTex;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump float u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
int u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp vec3 u_xlat10_2;
mediump vec4 u_xlat16_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
int u_xlati4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp float u_xlat10_5;
int u_xlati5;
bool u_xlatb5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
vec2 u_xlat10;
mediump float u_xlat16_10;
int u_xlati10;
bool u_xlatb10;
mediump vec3 u_xlat16_11;
lowp float u_xlat10_11;
int u_xlati11;
bool u_xlatb11;
mediump vec3 u_xlat16_12;
vec2 u_xlat13;
mediump float u_xlat16_13;
int u_xlati13;
bool u_xlatb13;
mediump vec3 u_xlat16_14;
lowp float u_xlat10_14;
int u_xlati14;
bool u_xlatb14;
mediump vec3 u_xlat16_15;
vec2 u_xlat16;
mediump float u_xlat16_16;
int u_xlati16;
bool u_xlatb16;
mediump vec3 u_xlat16_17;
lowp float u_xlat10_17;
int u_xlati17;
bool u_xlatb17;
mediump vec3 u_xlat16_18;
vec3 u_xlat19;
mediump vec3 u_xlat16_19;
lowp vec3 u_xlat10_19;
int u_xlati19;
bool u_xlatb19;
vec3 u_xlat20;
mediump vec3 u_xlat16_20;
lowp vec3 u_xlat10_20;
bool u_xlatb20;
mediump float u_xlat16_21;
bool u_xlatb22;
vec3 u_xlat25;
mediump vec3 u_xlat16_25;
lowp vec3 u_xlat10_25;
bool u_xlatb25;
vec3 u_xlat26;
lowp vec3 u_xlat10_26;
int u_xlati26;
vec3 u_xlat31;
mediump vec3 u_xlat16_31;
lowp vec3 u_xlat10_31;
bool u_xlatb31;
vec3 u_xlat32;
lowp vec3 u_xlat10_32;
int u_xlati32;
vec3 u_xlat34;
mediump vec3 u_xlat16_34;
lowp vec3 u_xlat10_34;
bool u_xlatb34;
vec3 u_xlat35;
lowp vec3 u_xlat10_35;
int u_xlati35;
vec3 u_xlat37;
mediump vec3 u_xlat16_37;
lowp vec3 u_xlat10_37;
bool u_xlatb37;
vec3 u_xlat38;
lowp vec3 u_xlat10_38;
int u_xlati38;
vec3 u_xlat40;
mediump vec3 u_xlat16_40;
lowp vec3 u_xlat10_40;
int u_xlati40;
bool u_xlatb40;
vec3 u_xlat41;
lowp vec3 u_xlat10_41;
mediump float u_xlat16_42;
lowp float u_xlat10_65;
lowp float u_xlat10_82;
bool u_xlatb82;
void main()
{
    u_xlat16_0 = (-_UMin) + _UMax;
    u_xlat16_21 = u_xlat16_0 * 0.0250000004;
    u_xlat16_1 = u_xlat16_0 * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_21 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb22 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb22 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1 = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb22) * 0xffffffffu);
    if(u_xlati1 != 0) {
        u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_65 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_42 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_42 = u_xlat16_42 + u_xlat16_42;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_42)) + vs_TEXCOORD3.xyz;
        u_xlat10_4.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_4.xyz = vec3(u_xlat10_65) * u_xlat10_4.xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_Reflectivity);
        u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz + u_xlat16_4.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb4 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat25.x = _Time.y * _Speed;
        u_xlat25.x = fract(u_xlat25.x);
        u_xlat25.x = u_xlat25.x + -0.5;
        u_xlat25.x = abs(u_xlat25.x) * _Magnitude + _MinValue;
        u_xlat25.xyz = u_xlat16_2.xyz * u_xlat25.xxx;
        u_xlat5.xyz = u_xlat16_2.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb4)) ? u_xlat25.xyz : u_xlat5.xyz;
        u_xlat10_4.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_6.xyz = u_xlat10_4.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_7.xyz = u_xlat16_3.xyz * u_xlat16_6.xyz;
        u_xlat16_3.xyz = (-u_xlat16_3.xyz) * u_xlat16_6.xyz + vs_COLOR1.xyz;
        u_xlat16_3.xyz = vs_COLOR1.www * u_xlat16_3.xyz + u_xlat16_7.xyz;
        u_xlat16_4.x = dot(u_xlat16_3.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
        u_xlat16_4.xyz = (-u_xlat16_3.xyz) + u_xlat16_4.xxx;
        u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_4.xyz + u_xlat16_3.xyz;
        u_xlat16_3.xyz = u_xlat16_2.xyz;
        u_xlat16_3.w = _BloomFactor;
        u_xlat16_2.xyz = u_xlat16_2.xyz;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1 == 0) {
        u_xlat16_4.x = u_xlat16_0 * 0.0500000007 + _UMin;
        u_xlat16_4.x = u_xlat16_0 * 0.0250000004 + u_xlat16_4.x;
        u_xlat4.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_4.x;
        u_xlat4.x = u_xlat16_21 * _ScaleTime + u_xlat16_4.x;
        u_xlat4.xy = u_xlat4.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb25 = !!(vs_TEXCOORD0.x>=u_xlat4.y);
#else
        u_xlatb25 = vs_TEXCOORD0.x>=u_xlat4.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(u_xlat4.x>=vs_TEXCOORD0.x);
#else
        u_xlatb4 = u_xlat4.x>=vs_TEXCOORD0.x;
#endif
        u_xlati4 = int(uint(u_xlatb4) * 0xffffffffu & uint(u_xlatb25) * 0xffffffffu);
        if(u_xlati4 != 0) {
            u_xlat10_25.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_5 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_42 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_7.x = u_xlat16_42 + u_xlat16_42;
            u_xlat16_7.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_7.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_26.xyz = texture(_EnvTex, u_xlat16_7.xyz).xyz;
            u_xlat16_5.xyz = vec3(u_xlat10_5) * u_xlat10_26.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Reflectivity);
            u_xlat16_25.xyz = u_xlat10_25.xyz * _Color.xyz + u_xlat16_5.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat26.x = _Time.y * _Speed;
            u_xlat26.x = fract(u_xlat26.x);
            u_xlat26.x = u_xlat26.x + -0.5;
            u_xlat26.x = abs(u_xlat26.x) * _Magnitude + _MinValue;
            u_xlat26.xyz = u_xlat16_25.xyz * u_xlat26.xxx;
            u_xlat25.xyz = u_xlat16_25.xyz * vec3(_LightMapIntensity);
            u_xlat16_7.xyz = (bool(u_xlatb5)) ? u_xlat26.xyz : u_xlat25.xyz;
            u_xlat10_25.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * _Color.xyz;
            u_xlat16_8.xyz = u_xlat10_25.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_9.xyz = u_xlat16_7.xyz * u_xlat16_8.xyz;
            u_xlat16_7.xyz = (-u_xlat16_7.xyz) * u_xlat16_8.xyz + vs_COLOR1.xyz;
            u_xlat16_7.xyz = vs_COLOR1.www * u_xlat16_7.xyz + u_xlat16_9.xyz;
            u_xlat16_25.x = dot(u_xlat16_7.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_5.xyz = (-u_xlat16_7.xyz) + u_xlat16_25.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_5.xyz + u_xlat16_7.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati4;
    } else {
        u_xlati4 = -1;
    //ENDIF
    }
    u_xlati5 = ~u_xlati4;
    u_xlati26 = ~u_xlati1;
    u_xlati5 = int(uint(u_xlati26) & uint(u_xlati5));
    if(u_xlati5 != 0) {
        u_xlat16_10 = u_xlat16_0 * 0.100000001 + _UMin;
        u_xlat16_10 = u_xlat16_0 * 0.0250000004 + u_xlat16_10;
        u_xlat10.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_10;
        u_xlat10.x = u_xlat16_21 * _ScaleTime + u_xlat16_10;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb31 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb31 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati10 = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb31) * 0xffffffffu);
        if(u_xlati10 != 0) {
            u_xlat10_31.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_11 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_7.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_8.x = u_xlat16_7.x + u_xlat16_7.x;
            u_xlat16_8.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_8.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_32.xyz = texture(_EnvTex, u_xlat16_8.xyz).xyz;
            u_xlat16_11.xyz = vec3(u_xlat10_11) * u_xlat10_32.xyz;
            u_xlat16_11.xyz = u_xlat16_11.xyz * vec3(_Reflectivity);
            u_xlat16_31.xyz = u_xlat10_31.xyz * _Color.xyz + u_xlat16_11.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb11 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb11 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat32.x = _Time.y * _Speed;
            u_xlat32.x = fract(u_xlat32.x);
            u_xlat32.x = u_xlat32.x + -0.5;
            u_xlat32.x = abs(u_xlat32.x) * _Magnitude + _MinValue;
            u_xlat32.xyz = u_xlat16_31.xyz * u_xlat32.xxx;
            u_xlat31.xyz = u_xlat16_31.xyz * vec3(_LightMapIntensity);
            u_xlat16_8.xyz = (bool(u_xlatb11)) ? u_xlat32.xyz : u_xlat31.xyz;
            u_xlat10_31.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_8.xyz = u_xlat16_8.xyz * _Color.xyz;
            u_xlat16_9.xyz = u_xlat10_31.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_12.xyz = u_xlat16_8.xyz * u_xlat16_9.xyz;
            u_xlat16_8.xyz = (-u_xlat16_8.xyz) * u_xlat16_9.xyz + vs_COLOR1.xyz;
            u_xlat16_8.xyz = vs_COLOR1.www * u_xlat16_8.xyz + u_xlat16_12.xyz;
            u_xlat16_31.x = dot(u_xlat16_8.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_11.xyz = (-u_xlat16_8.xyz) + u_xlat16_31.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_11.xyz + u_xlat16_8.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati10;
    } else {
        u_xlati10 = -1;
    //ENDIF
    }
    u_xlati11 = ~u_xlati10;
    u_xlati32 = ~u_xlati1;
    u_xlati11 = int(uint(u_xlati32) & uint(u_xlati11));
    if(u_xlati11 != 0) {
        u_xlat16_13 = u_xlat16_0 * 0.150000006 + _UMin;
        u_xlat16_13 = u_xlat16_0 * 0.0250000004 + u_xlat16_13;
        u_xlat13.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_13;
        u_xlat13.x = u_xlat16_21 * _ScaleTime + u_xlat16_13;
        u_xlat13.xy = u_xlat13.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb34 = !!(vs_TEXCOORD0.x>=u_xlat13.y);
#else
        u_xlatb34 = vs_TEXCOORD0.x>=u_xlat13.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb13 = !!(u_xlat13.x>=vs_TEXCOORD0.x);
#else
        u_xlatb13 = u_xlat13.x>=vs_TEXCOORD0.x;
#endif
        u_xlati13 = int(uint(u_xlatb13) * 0xffffffffu & uint(u_xlatb34) * 0xffffffffu);
        if(u_xlati13 != 0) {
            u_xlat10_34.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_14 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_8.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_9.x = u_xlat16_8.x + u_xlat16_8.x;
            u_xlat16_9.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_9.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_35.xyz = texture(_EnvTex, u_xlat16_9.xyz).xyz;
            u_xlat16_14.xyz = vec3(u_xlat10_14) * u_xlat10_35.xyz;
            u_xlat16_14.xyz = u_xlat16_14.xyz * vec3(_Reflectivity);
            u_xlat16_34.xyz = u_xlat10_34.xyz * _Color.xyz + u_xlat16_14.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb14 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb14 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat35.x = _Time.y * _Speed;
            u_xlat35.x = fract(u_xlat35.x);
            u_xlat35.x = u_xlat35.x + -0.5;
            u_xlat35.x = abs(u_xlat35.x) * _Magnitude + _MinValue;
            u_xlat35.xyz = u_xlat16_34.xyz * u_xlat35.xxx;
            u_xlat34.xyz = u_xlat16_34.xyz * vec3(_LightMapIntensity);
            u_xlat16_9.xyz = (bool(u_xlatb14)) ? u_xlat35.xyz : u_xlat34.xyz;
            u_xlat10_34.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_9.xyz = u_xlat16_9.xyz * _Color.xyz;
            u_xlat16_12.xyz = u_xlat10_34.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_15.xyz = u_xlat16_9.xyz * u_xlat16_12.xyz;
            u_xlat16_9.xyz = (-u_xlat16_9.xyz) * u_xlat16_12.xyz + vs_COLOR1.xyz;
            u_xlat16_9.xyz = vs_COLOR1.www * u_xlat16_9.xyz + u_xlat16_15.xyz;
            u_xlat16_34.x = dot(u_xlat16_9.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_14.xyz = (-u_xlat16_9.xyz) + u_xlat16_34.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_14.xyz + u_xlat16_9.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati13;
    } else {
        u_xlati13 = -1;
    //ENDIF
    }
    u_xlati14 = ~u_xlati13;
    u_xlati35 = ~u_xlati1;
    u_xlati14 = int(uint(u_xlati35) & uint(u_xlati14));
    if(u_xlati14 != 0) {
        u_xlat16_16 = u_xlat16_0 * 0.200000003 + _UMin;
        u_xlat16_16 = u_xlat16_0 * 0.0250000004 + u_xlat16_16;
        u_xlat16.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_16;
        u_xlat16.x = u_xlat16_21 * _ScaleTime + u_xlat16_16;
        u_xlat16.xy = u_xlat16.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb37 = !!(vs_TEXCOORD0.x>=u_xlat16.y);
#else
        u_xlatb37 = vs_TEXCOORD0.x>=u_xlat16.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb16 = !!(u_xlat16.x>=vs_TEXCOORD0.x);
#else
        u_xlatb16 = u_xlat16.x>=vs_TEXCOORD0.x;
#endif
        u_xlati16 = int(uint(u_xlatb16) * 0xffffffffu & uint(u_xlatb37) * 0xffffffffu);
        if(u_xlati16 != 0) {
            u_xlat10_37.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_9.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_9.x + u_xlat16_9.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_17.xyz = vec3(u_xlat10_17) * u_xlat10_38.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_Reflectivity);
            u_xlat16_37.xyz = u_xlat10_37.xyz * _Color.xyz + u_xlat16_17.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_37.xyz * u_xlat38.xxx;
            u_xlat37.xyz = u_xlat16_37.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb17)) ? u_xlat38.xyz : u_xlat37.xyz;
            u_xlat10_37.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_37.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_37.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_17.xyz = (-u_xlat16_12.xyz) + u_xlat16_37.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_17.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati16;
    } else {
        u_xlati16 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati16;
    u_xlati38 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati38) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.25 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.300000012 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.349999994 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.400000006 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.450000018 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.5 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.550000012 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.600000024 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.650000036 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.699999988 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.75 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.800000012 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.850000024 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.900000036 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.949999988 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati1 != 0) {
            u_xlat10_19.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_82 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_20.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = vec3(u_xlat10_82) * u_xlat10_20.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_19.xyz = u_xlat10_19.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb82 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb82 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat20.x = _Time.y * _Speed;
            u_xlat20.x = fract(u_xlat20.x);
            u_xlat20.x = u_xlat20.x + -0.5;
            u_xlat20.x = abs(u_xlat20.x) * _Magnitude + _MinValue;
            u_xlat20.xyz = u_xlat16_19.xyz * u_xlat20.xxx;
            u_xlat19.xyz = u_xlat16_19.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb82)) ? u_xlat20.xyz : u_xlat19.xyz;
            u_xlat10_19.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_19.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_19.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_19.xyz = (-u_xlat16_12.xyz) + u_xlat16_19.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_19.xyz + u_xlat16_12.xyz;
            SV_Target0.xyz = u_xlat16_2.xyz;
            SV_Target0.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1 != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LUMINANCE" "_LightMap_ON" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _FogColorNear;
uniform 	vec4 _FogColorFar;
uniform 	float _FogColorIntensity;
uniform 	float _FogIntensity;
uniform 	float _FogEffectStart;
uniform 	float _FogEffectLimit;
uniform 	float _FogStartDistance;
uniform 	float _FogEndDistance;
uniform 	vec4 _PropertyLightmapTexTS;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec3 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat2.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat5.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat2.y = u_xlat16_4.x;
    u_xlat5.z = dot(u_xlat2.xy, u_xlat1.xz);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
#ifdef UNITY_ADRENO_ES3
    u_xlatb21 = !!(0.5<_FogColorNear.w);
#else
    u_xlatb21 = 0.5<_FogColorNear.w;
#endif
    if(u_xlatb21){
        u_xlat1.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat21 = dot(u_xlat1.xzw, u_xlat1.xzw);
        u_xlat21 = sqrt(u_xlat21);
        u_xlat21 = u_xlat21 + (-_FogStartDistance);
        u_xlat21 = max(u_xlat21, 0.0);
        u_xlat1.xz = vec2(u_xlat21) * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat1.xz = u_xlat1.xz * (-u_xlat1.xz);
        u_xlat1.xz = u_xlat1.xz * vec2(1.44269502, 1.44269502);
        u_xlat1.xz = exp2(u_xlat1.xz);
        u_xlat21 = (-u_xlat1.x) + 1.0;
        u_xlat21 = u_xlat21 * _FogEffectLimit;
        u_xlat21 = max(u_xlat21, _FogEffectStart);
        u_xlat2.w = min(u_xlat21, _FogEffectLimit);
        u_xlat6.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat1.zzz * u_xlat6.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    } else {
        u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
        u_xlat0.x = sqrt(u_xlat0.x);
        u_xlat0.x = u_xlat0.x + (-_FogStartDistance);
        u_xlat0.x = max(u_xlat0.x, 0.0);
        u_xlat0.xy = u_xlat0.xx * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat0.xy = u_xlat0.xy * vec2(500.0, 1000.0);
        u_xlat14 = (-_FogStartDistance) + _FogEndDistance;
        u_xlat14 = max(u_xlat14, 0.100000001);
        u_xlat0.xy = u_xlat0.yx / vec2(u_xlat14);
        u_xlat7.x = u_xlat0.y * _FogEffectLimit;
        u_xlat7.x = max(u_xlat7.x, _FogEffectStart);
        u_xlat2.w = min(u_xlat7.x, _FogEffectLimit);
        u_xlat0.x = u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
        u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
        u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
        u_xlat0.x = (-u_xlat0.x) + 1.0;
        u_xlat7.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat0.xxx * u_xlat7.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    //ENDIF
    }
    u_xlat0.xy = in_TEXCOORD1.xy * _PropertyLightmapTexTS.xy + _PropertyLightmapTexTS.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat5.y = u_xlat1.y;
    vs_TEXCOORD3.xyz = u_xlat5.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform 	mediump float _LumiFactor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform lowp sampler2D _PropertyLightmapTex;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump float u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
int u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp vec3 u_xlat10_2;
mediump vec4 u_xlat16_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
int u_xlati4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp float u_xlat10_5;
int u_xlati5;
bool u_xlatb5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
vec2 u_xlat10;
mediump float u_xlat16_10;
int u_xlati10;
bool u_xlatb10;
mediump vec3 u_xlat16_11;
lowp float u_xlat10_11;
int u_xlati11;
bool u_xlatb11;
mediump vec3 u_xlat16_12;
vec2 u_xlat13;
mediump float u_xlat16_13;
int u_xlati13;
bool u_xlatb13;
mediump vec3 u_xlat16_14;
lowp float u_xlat10_14;
int u_xlati14;
bool u_xlatb14;
mediump vec3 u_xlat16_15;
vec2 u_xlat16;
mediump float u_xlat16_16;
int u_xlati16;
bool u_xlatb16;
mediump vec3 u_xlat16_17;
lowp float u_xlat10_17;
int u_xlati17;
bool u_xlatb17;
mediump vec3 u_xlat16_18;
vec3 u_xlat19;
mediump vec3 u_xlat16_19;
lowp vec3 u_xlat10_19;
int u_xlati19;
bool u_xlatb19;
vec3 u_xlat20;
mediump vec3 u_xlat16_20;
lowp vec3 u_xlat10_20;
bool u_xlatb20;
mediump float u_xlat16_21;
bool u_xlatb22;
vec3 u_xlat25;
mediump vec3 u_xlat16_25;
lowp vec3 u_xlat10_25;
bool u_xlatb25;
vec3 u_xlat26;
lowp vec3 u_xlat10_26;
int u_xlati26;
vec3 u_xlat31;
mediump vec3 u_xlat16_31;
lowp vec3 u_xlat10_31;
bool u_xlatb31;
vec3 u_xlat32;
lowp vec3 u_xlat10_32;
int u_xlati32;
vec3 u_xlat34;
mediump vec3 u_xlat16_34;
lowp vec3 u_xlat10_34;
bool u_xlatb34;
vec3 u_xlat35;
lowp vec3 u_xlat10_35;
int u_xlati35;
vec3 u_xlat37;
mediump vec3 u_xlat16_37;
lowp vec3 u_xlat10_37;
bool u_xlatb37;
vec3 u_xlat38;
lowp vec3 u_xlat10_38;
int u_xlati38;
vec3 u_xlat40;
mediump vec3 u_xlat16_40;
lowp vec3 u_xlat10_40;
int u_xlati40;
bool u_xlatb40;
vec3 u_xlat41;
lowp vec3 u_xlat10_41;
mediump float u_xlat16_42;
lowp float u_xlat10_65;
lowp float u_xlat10_82;
bool u_xlatb82;
void main()
{
    u_xlat16_0 = (-_UMin) + _UMax;
    u_xlat16_21 = u_xlat16_0 * 0.0250000004;
    u_xlat16_1 = u_xlat16_0 * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_21 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb22 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb22 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1 = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb22) * 0xffffffffu);
    if(u_xlati1 != 0) {
        u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_65 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_42 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_42 = u_xlat16_42 + u_xlat16_42;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_42)) + vs_TEXCOORD3.xyz;
        u_xlat10_4.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_4.xyz = vec3(u_xlat10_65) * u_xlat10_4.xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_Reflectivity);
        u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz + u_xlat16_4.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb4 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat25.x = _Time.y * _Speed;
        u_xlat25.x = fract(u_xlat25.x);
        u_xlat25.x = u_xlat25.x + -0.5;
        u_xlat25.x = abs(u_xlat25.x) * _Magnitude + _MinValue;
        u_xlat25.xyz = u_xlat16_2.xyz * u_xlat25.xxx;
        u_xlat5.xyz = u_xlat16_2.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb4)) ? u_xlat25.xyz : u_xlat5.xyz;
        u_xlat10_4.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_6.xyz = u_xlat10_4.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_7.xyz = u_xlat16_3.xyz * u_xlat16_6.xyz;
        u_xlat16_3.xyz = (-u_xlat16_3.xyz) * u_xlat16_6.xyz + vs_COLOR1.xyz;
        u_xlat16_3.xyz = vs_COLOR1.www * u_xlat16_3.xyz + u_xlat16_7.xyz;
        u_xlat16_4.x = dot(u_xlat16_3.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
        u_xlat16_4.xyz = (-u_xlat16_3.xyz) + u_xlat16_4.xxx;
        u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_4.xyz + u_xlat16_3.xyz;
        u_xlat16_3.xyz = u_xlat16_2.xyz;
        u_xlat16_3.w = _BloomFactor;
        u_xlat16_2.xyz = u_xlat16_2.xyz;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1 == 0) {
        u_xlat16_4.x = u_xlat16_0 * 0.0500000007 + _UMin;
        u_xlat16_4.x = u_xlat16_0 * 0.0250000004 + u_xlat16_4.x;
        u_xlat4.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_4.x;
        u_xlat4.x = u_xlat16_21 * _ScaleTime + u_xlat16_4.x;
        u_xlat4.xy = u_xlat4.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb25 = !!(vs_TEXCOORD0.x>=u_xlat4.y);
#else
        u_xlatb25 = vs_TEXCOORD0.x>=u_xlat4.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(u_xlat4.x>=vs_TEXCOORD0.x);
#else
        u_xlatb4 = u_xlat4.x>=vs_TEXCOORD0.x;
#endif
        u_xlati4 = int(uint(u_xlatb4) * 0xffffffffu & uint(u_xlatb25) * 0xffffffffu);
        if(u_xlati4 != 0) {
            u_xlat10_25.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_5 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_42 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_7.x = u_xlat16_42 + u_xlat16_42;
            u_xlat16_7.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_7.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_26.xyz = texture(_EnvTex, u_xlat16_7.xyz).xyz;
            u_xlat16_5.xyz = vec3(u_xlat10_5) * u_xlat10_26.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Reflectivity);
            u_xlat16_25.xyz = u_xlat10_25.xyz * _Color.xyz + u_xlat16_5.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat26.x = _Time.y * _Speed;
            u_xlat26.x = fract(u_xlat26.x);
            u_xlat26.x = u_xlat26.x + -0.5;
            u_xlat26.x = abs(u_xlat26.x) * _Magnitude + _MinValue;
            u_xlat26.xyz = u_xlat16_25.xyz * u_xlat26.xxx;
            u_xlat25.xyz = u_xlat16_25.xyz * vec3(_LightMapIntensity);
            u_xlat16_7.xyz = (bool(u_xlatb5)) ? u_xlat26.xyz : u_xlat25.xyz;
            u_xlat10_25.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * _Color.xyz;
            u_xlat16_8.xyz = u_xlat10_25.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_9.xyz = u_xlat16_7.xyz * u_xlat16_8.xyz;
            u_xlat16_7.xyz = (-u_xlat16_7.xyz) * u_xlat16_8.xyz + vs_COLOR1.xyz;
            u_xlat16_7.xyz = vs_COLOR1.www * u_xlat16_7.xyz + u_xlat16_9.xyz;
            u_xlat16_25.x = dot(u_xlat16_7.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_5.xyz = (-u_xlat16_7.xyz) + u_xlat16_25.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_5.xyz + u_xlat16_7.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati4;
    } else {
        u_xlati4 = -1;
    //ENDIF
    }
    u_xlati5 = ~u_xlati4;
    u_xlati26 = ~u_xlati1;
    u_xlati5 = int(uint(u_xlati26) & uint(u_xlati5));
    if(u_xlati5 != 0) {
        u_xlat16_10 = u_xlat16_0 * 0.100000001 + _UMin;
        u_xlat16_10 = u_xlat16_0 * 0.0250000004 + u_xlat16_10;
        u_xlat10.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_10;
        u_xlat10.x = u_xlat16_21 * _ScaleTime + u_xlat16_10;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb31 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb31 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati10 = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb31) * 0xffffffffu);
        if(u_xlati10 != 0) {
            u_xlat10_31.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_11 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_7.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_8.x = u_xlat16_7.x + u_xlat16_7.x;
            u_xlat16_8.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_8.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_32.xyz = texture(_EnvTex, u_xlat16_8.xyz).xyz;
            u_xlat16_11.xyz = vec3(u_xlat10_11) * u_xlat10_32.xyz;
            u_xlat16_11.xyz = u_xlat16_11.xyz * vec3(_Reflectivity);
            u_xlat16_31.xyz = u_xlat10_31.xyz * _Color.xyz + u_xlat16_11.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb11 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb11 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat32.x = _Time.y * _Speed;
            u_xlat32.x = fract(u_xlat32.x);
            u_xlat32.x = u_xlat32.x + -0.5;
            u_xlat32.x = abs(u_xlat32.x) * _Magnitude + _MinValue;
            u_xlat32.xyz = u_xlat16_31.xyz * u_xlat32.xxx;
            u_xlat31.xyz = u_xlat16_31.xyz * vec3(_LightMapIntensity);
            u_xlat16_8.xyz = (bool(u_xlatb11)) ? u_xlat32.xyz : u_xlat31.xyz;
            u_xlat10_31.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_8.xyz = u_xlat16_8.xyz * _Color.xyz;
            u_xlat16_9.xyz = u_xlat10_31.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_12.xyz = u_xlat16_8.xyz * u_xlat16_9.xyz;
            u_xlat16_8.xyz = (-u_xlat16_8.xyz) * u_xlat16_9.xyz + vs_COLOR1.xyz;
            u_xlat16_8.xyz = vs_COLOR1.www * u_xlat16_8.xyz + u_xlat16_12.xyz;
            u_xlat16_31.x = dot(u_xlat16_8.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_11.xyz = (-u_xlat16_8.xyz) + u_xlat16_31.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_11.xyz + u_xlat16_8.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati10;
    } else {
        u_xlati10 = -1;
    //ENDIF
    }
    u_xlati11 = ~u_xlati10;
    u_xlati32 = ~u_xlati1;
    u_xlati11 = int(uint(u_xlati32) & uint(u_xlati11));
    if(u_xlati11 != 0) {
        u_xlat16_13 = u_xlat16_0 * 0.150000006 + _UMin;
        u_xlat16_13 = u_xlat16_0 * 0.0250000004 + u_xlat16_13;
        u_xlat13.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_13;
        u_xlat13.x = u_xlat16_21 * _ScaleTime + u_xlat16_13;
        u_xlat13.xy = u_xlat13.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb34 = !!(vs_TEXCOORD0.x>=u_xlat13.y);
#else
        u_xlatb34 = vs_TEXCOORD0.x>=u_xlat13.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb13 = !!(u_xlat13.x>=vs_TEXCOORD0.x);
#else
        u_xlatb13 = u_xlat13.x>=vs_TEXCOORD0.x;
#endif
        u_xlati13 = int(uint(u_xlatb13) * 0xffffffffu & uint(u_xlatb34) * 0xffffffffu);
        if(u_xlati13 != 0) {
            u_xlat10_34.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_14 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_8.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_9.x = u_xlat16_8.x + u_xlat16_8.x;
            u_xlat16_9.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_9.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_35.xyz = texture(_EnvTex, u_xlat16_9.xyz).xyz;
            u_xlat16_14.xyz = vec3(u_xlat10_14) * u_xlat10_35.xyz;
            u_xlat16_14.xyz = u_xlat16_14.xyz * vec3(_Reflectivity);
            u_xlat16_34.xyz = u_xlat10_34.xyz * _Color.xyz + u_xlat16_14.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb14 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb14 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat35.x = _Time.y * _Speed;
            u_xlat35.x = fract(u_xlat35.x);
            u_xlat35.x = u_xlat35.x + -0.5;
            u_xlat35.x = abs(u_xlat35.x) * _Magnitude + _MinValue;
            u_xlat35.xyz = u_xlat16_34.xyz * u_xlat35.xxx;
            u_xlat34.xyz = u_xlat16_34.xyz * vec3(_LightMapIntensity);
            u_xlat16_9.xyz = (bool(u_xlatb14)) ? u_xlat35.xyz : u_xlat34.xyz;
            u_xlat10_34.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_9.xyz = u_xlat16_9.xyz * _Color.xyz;
            u_xlat16_12.xyz = u_xlat10_34.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_15.xyz = u_xlat16_9.xyz * u_xlat16_12.xyz;
            u_xlat16_9.xyz = (-u_xlat16_9.xyz) * u_xlat16_12.xyz + vs_COLOR1.xyz;
            u_xlat16_9.xyz = vs_COLOR1.www * u_xlat16_9.xyz + u_xlat16_15.xyz;
            u_xlat16_34.x = dot(u_xlat16_9.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_14.xyz = (-u_xlat16_9.xyz) + u_xlat16_34.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_14.xyz + u_xlat16_9.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati13;
    } else {
        u_xlati13 = -1;
    //ENDIF
    }
    u_xlati14 = ~u_xlati13;
    u_xlati35 = ~u_xlati1;
    u_xlati14 = int(uint(u_xlati35) & uint(u_xlati14));
    if(u_xlati14 != 0) {
        u_xlat16_16 = u_xlat16_0 * 0.200000003 + _UMin;
        u_xlat16_16 = u_xlat16_0 * 0.0250000004 + u_xlat16_16;
        u_xlat16.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_16;
        u_xlat16.x = u_xlat16_21 * _ScaleTime + u_xlat16_16;
        u_xlat16.xy = u_xlat16.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb37 = !!(vs_TEXCOORD0.x>=u_xlat16.y);
#else
        u_xlatb37 = vs_TEXCOORD0.x>=u_xlat16.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb16 = !!(u_xlat16.x>=vs_TEXCOORD0.x);
#else
        u_xlatb16 = u_xlat16.x>=vs_TEXCOORD0.x;
#endif
        u_xlati16 = int(uint(u_xlatb16) * 0xffffffffu & uint(u_xlatb37) * 0xffffffffu);
        if(u_xlati16 != 0) {
            u_xlat10_37.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_9.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_9.x + u_xlat16_9.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_17.xyz = vec3(u_xlat10_17) * u_xlat10_38.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_Reflectivity);
            u_xlat16_37.xyz = u_xlat10_37.xyz * _Color.xyz + u_xlat16_17.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_37.xyz * u_xlat38.xxx;
            u_xlat37.xyz = u_xlat16_37.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb17)) ? u_xlat38.xyz : u_xlat37.xyz;
            u_xlat10_37.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_37.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_37.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_17.xyz = (-u_xlat16_12.xyz) + u_xlat16_37.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_17.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati16;
    } else {
        u_xlati16 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati16;
    u_xlati38 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati38) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.25 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.300000012 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.349999994 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.400000006 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.450000018 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.5 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.550000012 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.600000024 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.650000036 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.699999988 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.75 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.800000012 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.850000024 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.900000036 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.949999988 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati1 != 0) {
            u_xlat10_19.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_82 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_20.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = vec3(u_xlat10_82) * u_xlat10_20.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_19.xyz = u_xlat10_19.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb82 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb82 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat20.x = _Time.y * _Speed;
            u_xlat20.x = fract(u_xlat20.x);
            u_xlat20.x = u_xlat20.x + -0.5;
            u_xlat20.x = abs(u_xlat20.x) * _Magnitude + _MinValue;
            u_xlat20.xyz = u_xlat16_19.xyz * u_xlat20.xxx;
            u_xlat19.xyz = u_xlat16_19.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb82)) ? u_xlat20.xyz : u_xlat19.xyz;
            u_xlat10_19.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_19.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_19.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_19.xyz = (-u_xlat16_12.xyz) + u_xlat16_19.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_19.xyz + u_xlat16_12.xyz;
            SV_Target0.xyz = u_xlat16_2.xyz;
            SV_Target0.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1 != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LUMINANCE" "_LightMap_ON" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _FogColorNear;
uniform 	vec4 _FogColorFar;
uniform 	float _FogColorIntensity;
uniform 	float _FogIntensity;
uniform 	float _FogEffectStart;
uniform 	float _FogEffectLimit;
uniform 	float _FogStartDistance;
uniform 	float _FogEndDistance;
uniform 	vec4 _PropertyLightmapTexTS;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec3 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat2.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat5.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat2.y = u_xlat16_4.x;
    u_xlat5.z = dot(u_xlat2.xy, u_xlat1.xz);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
#ifdef UNITY_ADRENO_ES3
    u_xlatb21 = !!(0.5<_FogColorNear.w);
#else
    u_xlatb21 = 0.5<_FogColorNear.w;
#endif
    if(u_xlatb21){
        u_xlat1.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat21 = dot(u_xlat1.xzw, u_xlat1.xzw);
        u_xlat21 = sqrt(u_xlat21);
        u_xlat21 = u_xlat21 + (-_FogStartDistance);
        u_xlat21 = max(u_xlat21, 0.0);
        u_xlat1.xz = vec2(u_xlat21) * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat1.xz = u_xlat1.xz * (-u_xlat1.xz);
        u_xlat1.xz = u_xlat1.xz * vec2(1.44269502, 1.44269502);
        u_xlat1.xz = exp2(u_xlat1.xz);
        u_xlat21 = (-u_xlat1.x) + 1.0;
        u_xlat21 = u_xlat21 * _FogEffectLimit;
        u_xlat21 = max(u_xlat21, _FogEffectStart);
        u_xlat2.w = min(u_xlat21, _FogEffectLimit);
        u_xlat6.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat1.zzz * u_xlat6.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    } else {
        u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
        u_xlat0.x = sqrt(u_xlat0.x);
        u_xlat0.x = u_xlat0.x + (-_FogStartDistance);
        u_xlat0.x = max(u_xlat0.x, 0.0);
        u_xlat0.xy = u_xlat0.xx * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat0.xy = u_xlat0.xy * vec2(500.0, 1000.0);
        u_xlat14 = (-_FogStartDistance) + _FogEndDistance;
        u_xlat14 = max(u_xlat14, 0.100000001);
        u_xlat0.xy = u_xlat0.yx / vec2(u_xlat14);
        u_xlat7.x = u_xlat0.y * _FogEffectLimit;
        u_xlat7.x = max(u_xlat7.x, _FogEffectStart);
        u_xlat2.w = min(u_xlat7.x, _FogEffectLimit);
        u_xlat0.x = u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
        u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
        u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
        u_xlat0.x = (-u_xlat0.x) + 1.0;
        u_xlat7.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat0.xxx * u_xlat7.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    //ENDIF
    }
    u_xlat0.xy = in_TEXCOORD1.xy * _PropertyLightmapTexTS.xy + _PropertyLightmapTexTS.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat5.y = u_xlat1.y;
    vs_TEXCOORD3.xyz = u_xlat5.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform 	mediump float _LumiFactor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform lowp sampler2D _PropertyLightmapTex;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump float u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
int u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp vec3 u_xlat10_2;
mediump vec4 u_xlat16_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
int u_xlati4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp float u_xlat10_5;
int u_xlati5;
bool u_xlatb5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
vec2 u_xlat10;
mediump float u_xlat16_10;
int u_xlati10;
bool u_xlatb10;
mediump vec3 u_xlat16_11;
lowp float u_xlat10_11;
int u_xlati11;
bool u_xlatb11;
mediump vec3 u_xlat16_12;
vec2 u_xlat13;
mediump float u_xlat16_13;
int u_xlati13;
bool u_xlatb13;
mediump vec3 u_xlat16_14;
lowp float u_xlat10_14;
int u_xlati14;
bool u_xlatb14;
mediump vec3 u_xlat16_15;
vec2 u_xlat16;
mediump float u_xlat16_16;
int u_xlati16;
bool u_xlatb16;
mediump vec3 u_xlat16_17;
lowp float u_xlat10_17;
int u_xlati17;
bool u_xlatb17;
mediump vec3 u_xlat16_18;
vec3 u_xlat19;
mediump vec3 u_xlat16_19;
lowp vec3 u_xlat10_19;
int u_xlati19;
bool u_xlatb19;
vec3 u_xlat20;
mediump vec3 u_xlat16_20;
lowp vec3 u_xlat10_20;
bool u_xlatb20;
mediump float u_xlat16_21;
bool u_xlatb22;
vec3 u_xlat25;
mediump vec3 u_xlat16_25;
lowp vec3 u_xlat10_25;
bool u_xlatb25;
vec3 u_xlat26;
lowp vec3 u_xlat10_26;
int u_xlati26;
vec3 u_xlat31;
mediump vec3 u_xlat16_31;
lowp vec3 u_xlat10_31;
bool u_xlatb31;
vec3 u_xlat32;
lowp vec3 u_xlat10_32;
int u_xlati32;
vec3 u_xlat34;
mediump vec3 u_xlat16_34;
lowp vec3 u_xlat10_34;
bool u_xlatb34;
vec3 u_xlat35;
lowp vec3 u_xlat10_35;
int u_xlati35;
vec3 u_xlat37;
mediump vec3 u_xlat16_37;
lowp vec3 u_xlat10_37;
bool u_xlatb37;
vec3 u_xlat38;
lowp vec3 u_xlat10_38;
int u_xlati38;
vec3 u_xlat40;
mediump vec3 u_xlat16_40;
lowp vec3 u_xlat10_40;
int u_xlati40;
bool u_xlatb40;
vec3 u_xlat41;
lowp vec3 u_xlat10_41;
mediump float u_xlat16_42;
lowp float u_xlat10_65;
lowp float u_xlat10_82;
bool u_xlatb82;
void main()
{
    u_xlat16_0 = (-_UMin) + _UMax;
    u_xlat16_21 = u_xlat16_0 * 0.0250000004;
    u_xlat16_1 = u_xlat16_0 * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_21 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb22 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb22 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1 = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb22) * 0xffffffffu);
    if(u_xlati1 != 0) {
        u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_65 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_42 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_42 = u_xlat16_42 + u_xlat16_42;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_42)) + vs_TEXCOORD3.xyz;
        u_xlat10_4.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_4.xyz = vec3(u_xlat10_65) * u_xlat10_4.xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_Reflectivity);
        u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz + u_xlat16_4.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb4 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat25.x = _Time.y * _Speed;
        u_xlat25.x = fract(u_xlat25.x);
        u_xlat25.x = u_xlat25.x + -0.5;
        u_xlat25.x = abs(u_xlat25.x) * _Magnitude + _MinValue;
        u_xlat25.xyz = u_xlat16_2.xyz * u_xlat25.xxx;
        u_xlat5.xyz = u_xlat16_2.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb4)) ? u_xlat25.xyz : u_xlat5.xyz;
        u_xlat10_4.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_6.xyz = u_xlat10_4.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_7.xyz = u_xlat16_3.xyz * u_xlat16_6.xyz;
        u_xlat16_3.xyz = (-u_xlat16_3.xyz) * u_xlat16_6.xyz + vs_COLOR1.xyz;
        u_xlat16_3.xyz = vs_COLOR1.www * u_xlat16_3.xyz + u_xlat16_7.xyz;
        u_xlat16_4.x = dot(u_xlat16_3.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
        u_xlat16_4.xyz = (-u_xlat16_3.xyz) + u_xlat16_4.xxx;
        u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_4.xyz + u_xlat16_3.xyz;
        u_xlat16_3.xyz = u_xlat16_2.xyz;
        u_xlat16_3.w = _BloomFactor;
        u_xlat16_2.xyz = u_xlat16_2.xyz;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1 == 0) {
        u_xlat16_4.x = u_xlat16_0 * 0.0500000007 + _UMin;
        u_xlat16_4.x = u_xlat16_0 * 0.0250000004 + u_xlat16_4.x;
        u_xlat4.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_4.x;
        u_xlat4.x = u_xlat16_21 * _ScaleTime + u_xlat16_4.x;
        u_xlat4.xy = u_xlat4.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb25 = !!(vs_TEXCOORD0.x>=u_xlat4.y);
#else
        u_xlatb25 = vs_TEXCOORD0.x>=u_xlat4.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(u_xlat4.x>=vs_TEXCOORD0.x);
#else
        u_xlatb4 = u_xlat4.x>=vs_TEXCOORD0.x;
#endif
        u_xlati4 = int(uint(u_xlatb4) * 0xffffffffu & uint(u_xlatb25) * 0xffffffffu);
        if(u_xlati4 != 0) {
            u_xlat10_25.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_5 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_42 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_7.x = u_xlat16_42 + u_xlat16_42;
            u_xlat16_7.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_7.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_26.xyz = texture(_EnvTex, u_xlat16_7.xyz).xyz;
            u_xlat16_5.xyz = vec3(u_xlat10_5) * u_xlat10_26.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Reflectivity);
            u_xlat16_25.xyz = u_xlat10_25.xyz * _Color.xyz + u_xlat16_5.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat26.x = _Time.y * _Speed;
            u_xlat26.x = fract(u_xlat26.x);
            u_xlat26.x = u_xlat26.x + -0.5;
            u_xlat26.x = abs(u_xlat26.x) * _Magnitude + _MinValue;
            u_xlat26.xyz = u_xlat16_25.xyz * u_xlat26.xxx;
            u_xlat25.xyz = u_xlat16_25.xyz * vec3(_LightMapIntensity);
            u_xlat16_7.xyz = (bool(u_xlatb5)) ? u_xlat26.xyz : u_xlat25.xyz;
            u_xlat10_25.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * _Color.xyz;
            u_xlat16_8.xyz = u_xlat10_25.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_9.xyz = u_xlat16_7.xyz * u_xlat16_8.xyz;
            u_xlat16_7.xyz = (-u_xlat16_7.xyz) * u_xlat16_8.xyz + vs_COLOR1.xyz;
            u_xlat16_7.xyz = vs_COLOR1.www * u_xlat16_7.xyz + u_xlat16_9.xyz;
            u_xlat16_25.x = dot(u_xlat16_7.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_5.xyz = (-u_xlat16_7.xyz) + u_xlat16_25.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_5.xyz + u_xlat16_7.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati4;
    } else {
        u_xlati4 = -1;
    //ENDIF
    }
    u_xlati5 = ~u_xlati4;
    u_xlati26 = ~u_xlati1;
    u_xlati5 = int(uint(u_xlati26) & uint(u_xlati5));
    if(u_xlati5 != 0) {
        u_xlat16_10 = u_xlat16_0 * 0.100000001 + _UMin;
        u_xlat16_10 = u_xlat16_0 * 0.0250000004 + u_xlat16_10;
        u_xlat10.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_10;
        u_xlat10.x = u_xlat16_21 * _ScaleTime + u_xlat16_10;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb31 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb31 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati10 = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb31) * 0xffffffffu);
        if(u_xlati10 != 0) {
            u_xlat10_31.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_11 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_7.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_8.x = u_xlat16_7.x + u_xlat16_7.x;
            u_xlat16_8.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_8.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_32.xyz = texture(_EnvTex, u_xlat16_8.xyz).xyz;
            u_xlat16_11.xyz = vec3(u_xlat10_11) * u_xlat10_32.xyz;
            u_xlat16_11.xyz = u_xlat16_11.xyz * vec3(_Reflectivity);
            u_xlat16_31.xyz = u_xlat10_31.xyz * _Color.xyz + u_xlat16_11.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb11 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb11 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat32.x = _Time.y * _Speed;
            u_xlat32.x = fract(u_xlat32.x);
            u_xlat32.x = u_xlat32.x + -0.5;
            u_xlat32.x = abs(u_xlat32.x) * _Magnitude + _MinValue;
            u_xlat32.xyz = u_xlat16_31.xyz * u_xlat32.xxx;
            u_xlat31.xyz = u_xlat16_31.xyz * vec3(_LightMapIntensity);
            u_xlat16_8.xyz = (bool(u_xlatb11)) ? u_xlat32.xyz : u_xlat31.xyz;
            u_xlat10_31.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_8.xyz = u_xlat16_8.xyz * _Color.xyz;
            u_xlat16_9.xyz = u_xlat10_31.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_12.xyz = u_xlat16_8.xyz * u_xlat16_9.xyz;
            u_xlat16_8.xyz = (-u_xlat16_8.xyz) * u_xlat16_9.xyz + vs_COLOR1.xyz;
            u_xlat16_8.xyz = vs_COLOR1.www * u_xlat16_8.xyz + u_xlat16_12.xyz;
            u_xlat16_31.x = dot(u_xlat16_8.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_11.xyz = (-u_xlat16_8.xyz) + u_xlat16_31.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_11.xyz + u_xlat16_8.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati10;
    } else {
        u_xlati10 = -1;
    //ENDIF
    }
    u_xlati11 = ~u_xlati10;
    u_xlati32 = ~u_xlati1;
    u_xlati11 = int(uint(u_xlati32) & uint(u_xlati11));
    if(u_xlati11 != 0) {
        u_xlat16_13 = u_xlat16_0 * 0.150000006 + _UMin;
        u_xlat16_13 = u_xlat16_0 * 0.0250000004 + u_xlat16_13;
        u_xlat13.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_13;
        u_xlat13.x = u_xlat16_21 * _ScaleTime + u_xlat16_13;
        u_xlat13.xy = u_xlat13.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb34 = !!(vs_TEXCOORD0.x>=u_xlat13.y);
#else
        u_xlatb34 = vs_TEXCOORD0.x>=u_xlat13.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb13 = !!(u_xlat13.x>=vs_TEXCOORD0.x);
#else
        u_xlatb13 = u_xlat13.x>=vs_TEXCOORD0.x;
#endif
        u_xlati13 = int(uint(u_xlatb13) * 0xffffffffu & uint(u_xlatb34) * 0xffffffffu);
        if(u_xlati13 != 0) {
            u_xlat10_34.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_14 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_8.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_9.x = u_xlat16_8.x + u_xlat16_8.x;
            u_xlat16_9.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_9.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_35.xyz = texture(_EnvTex, u_xlat16_9.xyz).xyz;
            u_xlat16_14.xyz = vec3(u_xlat10_14) * u_xlat10_35.xyz;
            u_xlat16_14.xyz = u_xlat16_14.xyz * vec3(_Reflectivity);
            u_xlat16_34.xyz = u_xlat10_34.xyz * _Color.xyz + u_xlat16_14.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb14 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb14 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat35.x = _Time.y * _Speed;
            u_xlat35.x = fract(u_xlat35.x);
            u_xlat35.x = u_xlat35.x + -0.5;
            u_xlat35.x = abs(u_xlat35.x) * _Magnitude + _MinValue;
            u_xlat35.xyz = u_xlat16_34.xyz * u_xlat35.xxx;
            u_xlat34.xyz = u_xlat16_34.xyz * vec3(_LightMapIntensity);
            u_xlat16_9.xyz = (bool(u_xlatb14)) ? u_xlat35.xyz : u_xlat34.xyz;
            u_xlat10_34.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_9.xyz = u_xlat16_9.xyz * _Color.xyz;
            u_xlat16_12.xyz = u_xlat10_34.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_15.xyz = u_xlat16_9.xyz * u_xlat16_12.xyz;
            u_xlat16_9.xyz = (-u_xlat16_9.xyz) * u_xlat16_12.xyz + vs_COLOR1.xyz;
            u_xlat16_9.xyz = vs_COLOR1.www * u_xlat16_9.xyz + u_xlat16_15.xyz;
            u_xlat16_34.x = dot(u_xlat16_9.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_14.xyz = (-u_xlat16_9.xyz) + u_xlat16_34.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_14.xyz + u_xlat16_9.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati13;
    } else {
        u_xlati13 = -1;
    //ENDIF
    }
    u_xlati14 = ~u_xlati13;
    u_xlati35 = ~u_xlati1;
    u_xlati14 = int(uint(u_xlati35) & uint(u_xlati14));
    if(u_xlati14 != 0) {
        u_xlat16_16 = u_xlat16_0 * 0.200000003 + _UMin;
        u_xlat16_16 = u_xlat16_0 * 0.0250000004 + u_xlat16_16;
        u_xlat16.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_16;
        u_xlat16.x = u_xlat16_21 * _ScaleTime + u_xlat16_16;
        u_xlat16.xy = u_xlat16.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb37 = !!(vs_TEXCOORD0.x>=u_xlat16.y);
#else
        u_xlatb37 = vs_TEXCOORD0.x>=u_xlat16.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb16 = !!(u_xlat16.x>=vs_TEXCOORD0.x);
#else
        u_xlatb16 = u_xlat16.x>=vs_TEXCOORD0.x;
#endif
        u_xlati16 = int(uint(u_xlatb16) * 0xffffffffu & uint(u_xlatb37) * 0xffffffffu);
        if(u_xlati16 != 0) {
            u_xlat10_37.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_9.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_9.x + u_xlat16_9.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_17.xyz = vec3(u_xlat10_17) * u_xlat10_38.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_Reflectivity);
            u_xlat16_37.xyz = u_xlat10_37.xyz * _Color.xyz + u_xlat16_17.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_37.xyz * u_xlat38.xxx;
            u_xlat37.xyz = u_xlat16_37.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb17)) ? u_xlat38.xyz : u_xlat37.xyz;
            u_xlat10_37.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_37.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_37.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_17.xyz = (-u_xlat16_12.xyz) + u_xlat16_37.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_17.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati16;
    } else {
        u_xlati16 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati16;
    u_xlati38 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati38) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.25 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.300000012 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.349999994 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.400000006 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.450000018 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.5 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.550000012 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.600000024 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.650000036 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.699999988 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.75 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.800000012 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.850000024 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.900000036 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.949999988 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati1 != 0) {
            u_xlat10_19.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_82 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_20.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = vec3(u_xlat10_82) * u_xlat10_20.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_19.xyz = u_xlat10_19.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb82 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb82 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat20.x = _Time.y * _Speed;
            u_xlat20.x = fract(u_xlat20.x);
            u_xlat20.x = u_xlat20.x + -0.5;
            u_xlat20.x = abs(u_xlat20.x) * _Magnitude + _MinValue;
            u_xlat20.xyz = u_xlat16_19.xyz * u_xlat20.xxx;
            u_xlat19.xyz = u_xlat16_19.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb82)) ? u_xlat20.xyz : u_xlat19.xyz;
            u_xlat10_19.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_19.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_19.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_19.xyz = (-u_xlat16_12.xyz) + u_xlat16_19.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_19.xyz + u_xlat16_12.xyz;
            SV_Target0.xyz = u_xlat16_2.xyz;
            SV_Target0.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1 != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LUMINANCE" "FOG_LERP" "_LightMap_ON" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _FogColorNear;
uniform 	vec4 _FogColorFar;
uniform 	float _FogColorIntensity;
uniform 	float _FogIntensity;
uniform 	float _FogEffectStart;
uniform 	float _FogEffectLimit;
uniform 	float _FogStartDistance;
uniform 	float _FogEndDistance;
uniform 	vec4 _PropertyLightmapTexTS;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec3 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat2.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat5.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat2.y = u_xlat16_4.x;
    u_xlat5.z = dot(u_xlat2.xy, u_xlat1.xz);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
#ifdef UNITY_ADRENO_ES3
    u_xlatb21 = !!(0.5<_FogColorNear.w);
#else
    u_xlatb21 = 0.5<_FogColorNear.w;
#endif
    if(u_xlatb21){
        u_xlat1.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat21 = dot(u_xlat1.xzw, u_xlat1.xzw);
        u_xlat21 = sqrt(u_xlat21);
        u_xlat21 = u_xlat21 + (-_FogStartDistance);
        u_xlat21 = max(u_xlat21, 0.0);
        u_xlat1.xz = vec2(u_xlat21) * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat1.xz = u_xlat1.xz * (-u_xlat1.xz);
        u_xlat1.xz = u_xlat1.xz * vec2(1.44269502, 1.44269502);
        u_xlat1.xz = exp2(u_xlat1.xz);
        u_xlat21 = (-u_xlat1.x) + 1.0;
        u_xlat21 = u_xlat21 * _FogEffectLimit;
        u_xlat21 = max(u_xlat21, _FogEffectStart);
        u_xlat2.w = min(u_xlat21, _FogEffectLimit);
        u_xlat6.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat1.zzz * u_xlat6.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    } else {
        u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
        u_xlat0.x = sqrt(u_xlat0.x);
        u_xlat0.x = u_xlat0.x + (-_FogStartDistance);
        u_xlat0.x = max(u_xlat0.x, 0.0);
        u_xlat0.xy = u_xlat0.xx * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat0.xy = u_xlat0.xy * vec2(500.0, 1000.0);
        u_xlat14 = (-_FogStartDistance) + _FogEndDistance;
        u_xlat14 = max(u_xlat14, 0.100000001);
        u_xlat0.xy = u_xlat0.yx / vec2(u_xlat14);
        u_xlat7.x = u_xlat0.y * _FogEffectLimit;
        u_xlat7.x = max(u_xlat7.x, _FogEffectStart);
        u_xlat2.w = min(u_xlat7.x, _FogEffectLimit);
        u_xlat0.x = u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
        u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
        u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
        u_xlat0.x = (-u_xlat0.x) + 1.0;
        u_xlat7.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat0.xxx * u_xlat7.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    //ENDIF
    }
    u_xlat0.xy = in_TEXCOORD1.xy * _PropertyLightmapTexTS.xy + _PropertyLightmapTexTS.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat5.y = u_xlat1.y;
    vs_TEXCOORD3.xyz = u_xlat5.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform 	mediump float _LumiFactor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform lowp sampler2D _PropertyLightmapTex;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump float u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
int u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp vec3 u_xlat10_2;
mediump vec4 u_xlat16_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
int u_xlati4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp float u_xlat10_5;
int u_xlati5;
bool u_xlatb5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
vec2 u_xlat10;
mediump float u_xlat16_10;
int u_xlati10;
bool u_xlatb10;
mediump vec3 u_xlat16_11;
lowp float u_xlat10_11;
int u_xlati11;
bool u_xlatb11;
mediump vec3 u_xlat16_12;
vec2 u_xlat13;
mediump float u_xlat16_13;
int u_xlati13;
bool u_xlatb13;
mediump vec3 u_xlat16_14;
lowp float u_xlat10_14;
int u_xlati14;
bool u_xlatb14;
mediump vec3 u_xlat16_15;
vec2 u_xlat16;
mediump float u_xlat16_16;
int u_xlati16;
bool u_xlatb16;
mediump vec3 u_xlat16_17;
lowp float u_xlat10_17;
int u_xlati17;
bool u_xlatb17;
mediump vec3 u_xlat16_18;
vec3 u_xlat19;
mediump vec3 u_xlat16_19;
lowp vec3 u_xlat10_19;
int u_xlati19;
bool u_xlatb19;
vec3 u_xlat20;
mediump vec3 u_xlat16_20;
lowp vec3 u_xlat10_20;
bool u_xlatb20;
mediump float u_xlat16_21;
bool u_xlatb22;
vec3 u_xlat25;
mediump vec3 u_xlat16_25;
lowp vec3 u_xlat10_25;
bool u_xlatb25;
vec3 u_xlat26;
lowp vec3 u_xlat10_26;
int u_xlati26;
vec3 u_xlat31;
mediump vec3 u_xlat16_31;
lowp vec3 u_xlat10_31;
bool u_xlatb31;
vec3 u_xlat32;
lowp vec3 u_xlat10_32;
int u_xlati32;
vec3 u_xlat34;
mediump vec3 u_xlat16_34;
lowp vec3 u_xlat10_34;
bool u_xlatb34;
vec3 u_xlat35;
lowp vec3 u_xlat10_35;
int u_xlati35;
vec3 u_xlat37;
mediump vec3 u_xlat16_37;
lowp vec3 u_xlat10_37;
bool u_xlatb37;
vec3 u_xlat38;
lowp vec3 u_xlat10_38;
int u_xlati38;
vec3 u_xlat40;
mediump vec3 u_xlat16_40;
lowp vec3 u_xlat10_40;
int u_xlati40;
bool u_xlatb40;
vec3 u_xlat41;
lowp vec3 u_xlat10_41;
mediump float u_xlat16_42;
lowp float u_xlat10_65;
lowp float u_xlat10_82;
bool u_xlatb82;
void main()
{
    u_xlat16_0 = (-_UMin) + _UMax;
    u_xlat16_21 = u_xlat16_0 * 0.0250000004;
    u_xlat16_1 = u_xlat16_0 * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_21 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb22 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb22 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1 = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb22) * 0xffffffffu);
    if(u_xlati1 != 0) {
        u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_65 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_42 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_42 = u_xlat16_42 + u_xlat16_42;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_42)) + vs_TEXCOORD3.xyz;
        u_xlat10_4.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_4.xyz = vec3(u_xlat10_65) * u_xlat10_4.xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_Reflectivity);
        u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz + u_xlat16_4.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb4 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat25.x = _Time.y * _Speed;
        u_xlat25.x = fract(u_xlat25.x);
        u_xlat25.x = u_xlat25.x + -0.5;
        u_xlat25.x = abs(u_xlat25.x) * _Magnitude + _MinValue;
        u_xlat25.xyz = u_xlat16_2.xyz * u_xlat25.xxx;
        u_xlat5.xyz = u_xlat16_2.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb4)) ? u_xlat25.xyz : u_xlat5.xyz;
        u_xlat10_4.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_6.xyz = u_xlat10_4.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_7.xyz = u_xlat16_3.xyz * u_xlat16_6.xyz;
        u_xlat16_3.xyz = (-u_xlat16_3.xyz) * u_xlat16_6.xyz + vs_COLOR1.xyz;
        u_xlat16_3.xyz = vs_COLOR1.www * u_xlat16_3.xyz + u_xlat16_7.xyz;
        u_xlat16_4.x = dot(u_xlat16_3.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
        u_xlat16_4.xyz = (-u_xlat16_3.xyz) + u_xlat16_4.xxx;
        u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_4.xyz + u_xlat16_3.xyz;
        u_xlat16_3.xyz = u_xlat16_2.xyz;
        u_xlat16_3.w = _BloomFactor;
        u_xlat16_2.xyz = u_xlat16_2.xyz;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1 == 0) {
        u_xlat16_4.x = u_xlat16_0 * 0.0500000007 + _UMin;
        u_xlat16_4.x = u_xlat16_0 * 0.0250000004 + u_xlat16_4.x;
        u_xlat4.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_4.x;
        u_xlat4.x = u_xlat16_21 * _ScaleTime + u_xlat16_4.x;
        u_xlat4.xy = u_xlat4.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb25 = !!(vs_TEXCOORD0.x>=u_xlat4.y);
#else
        u_xlatb25 = vs_TEXCOORD0.x>=u_xlat4.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(u_xlat4.x>=vs_TEXCOORD0.x);
#else
        u_xlatb4 = u_xlat4.x>=vs_TEXCOORD0.x;
#endif
        u_xlati4 = int(uint(u_xlatb4) * 0xffffffffu & uint(u_xlatb25) * 0xffffffffu);
        if(u_xlati4 != 0) {
            u_xlat10_25.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_5 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_42 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_7.x = u_xlat16_42 + u_xlat16_42;
            u_xlat16_7.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_7.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_26.xyz = texture(_EnvTex, u_xlat16_7.xyz).xyz;
            u_xlat16_5.xyz = vec3(u_xlat10_5) * u_xlat10_26.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Reflectivity);
            u_xlat16_25.xyz = u_xlat10_25.xyz * _Color.xyz + u_xlat16_5.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat26.x = _Time.y * _Speed;
            u_xlat26.x = fract(u_xlat26.x);
            u_xlat26.x = u_xlat26.x + -0.5;
            u_xlat26.x = abs(u_xlat26.x) * _Magnitude + _MinValue;
            u_xlat26.xyz = u_xlat16_25.xyz * u_xlat26.xxx;
            u_xlat25.xyz = u_xlat16_25.xyz * vec3(_LightMapIntensity);
            u_xlat16_7.xyz = (bool(u_xlatb5)) ? u_xlat26.xyz : u_xlat25.xyz;
            u_xlat10_25.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * _Color.xyz;
            u_xlat16_8.xyz = u_xlat10_25.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_9.xyz = u_xlat16_7.xyz * u_xlat16_8.xyz;
            u_xlat16_7.xyz = (-u_xlat16_7.xyz) * u_xlat16_8.xyz + vs_COLOR1.xyz;
            u_xlat16_7.xyz = vs_COLOR1.www * u_xlat16_7.xyz + u_xlat16_9.xyz;
            u_xlat16_25.x = dot(u_xlat16_7.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_5.xyz = (-u_xlat16_7.xyz) + u_xlat16_25.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_5.xyz + u_xlat16_7.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati4;
    } else {
        u_xlati4 = -1;
    //ENDIF
    }
    u_xlati5 = ~u_xlati4;
    u_xlati26 = ~u_xlati1;
    u_xlati5 = int(uint(u_xlati26) & uint(u_xlati5));
    if(u_xlati5 != 0) {
        u_xlat16_10 = u_xlat16_0 * 0.100000001 + _UMin;
        u_xlat16_10 = u_xlat16_0 * 0.0250000004 + u_xlat16_10;
        u_xlat10.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_10;
        u_xlat10.x = u_xlat16_21 * _ScaleTime + u_xlat16_10;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb31 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb31 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati10 = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb31) * 0xffffffffu);
        if(u_xlati10 != 0) {
            u_xlat10_31.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_11 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_7.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_8.x = u_xlat16_7.x + u_xlat16_7.x;
            u_xlat16_8.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_8.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_32.xyz = texture(_EnvTex, u_xlat16_8.xyz).xyz;
            u_xlat16_11.xyz = vec3(u_xlat10_11) * u_xlat10_32.xyz;
            u_xlat16_11.xyz = u_xlat16_11.xyz * vec3(_Reflectivity);
            u_xlat16_31.xyz = u_xlat10_31.xyz * _Color.xyz + u_xlat16_11.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb11 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb11 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat32.x = _Time.y * _Speed;
            u_xlat32.x = fract(u_xlat32.x);
            u_xlat32.x = u_xlat32.x + -0.5;
            u_xlat32.x = abs(u_xlat32.x) * _Magnitude + _MinValue;
            u_xlat32.xyz = u_xlat16_31.xyz * u_xlat32.xxx;
            u_xlat31.xyz = u_xlat16_31.xyz * vec3(_LightMapIntensity);
            u_xlat16_8.xyz = (bool(u_xlatb11)) ? u_xlat32.xyz : u_xlat31.xyz;
            u_xlat10_31.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_8.xyz = u_xlat16_8.xyz * _Color.xyz;
            u_xlat16_9.xyz = u_xlat10_31.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_12.xyz = u_xlat16_8.xyz * u_xlat16_9.xyz;
            u_xlat16_8.xyz = (-u_xlat16_8.xyz) * u_xlat16_9.xyz + vs_COLOR1.xyz;
            u_xlat16_8.xyz = vs_COLOR1.www * u_xlat16_8.xyz + u_xlat16_12.xyz;
            u_xlat16_31.x = dot(u_xlat16_8.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_11.xyz = (-u_xlat16_8.xyz) + u_xlat16_31.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_11.xyz + u_xlat16_8.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati10;
    } else {
        u_xlati10 = -1;
    //ENDIF
    }
    u_xlati11 = ~u_xlati10;
    u_xlati32 = ~u_xlati1;
    u_xlati11 = int(uint(u_xlati32) & uint(u_xlati11));
    if(u_xlati11 != 0) {
        u_xlat16_13 = u_xlat16_0 * 0.150000006 + _UMin;
        u_xlat16_13 = u_xlat16_0 * 0.0250000004 + u_xlat16_13;
        u_xlat13.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_13;
        u_xlat13.x = u_xlat16_21 * _ScaleTime + u_xlat16_13;
        u_xlat13.xy = u_xlat13.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb34 = !!(vs_TEXCOORD0.x>=u_xlat13.y);
#else
        u_xlatb34 = vs_TEXCOORD0.x>=u_xlat13.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb13 = !!(u_xlat13.x>=vs_TEXCOORD0.x);
#else
        u_xlatb13 = u_xlat13.x>=vs_TEXCOORD0.x;
#endif
        u_xlati13 = int(uint(u_xlatb13) * 0xffffffffu & uint(u_xlatb34) * 0xffffffffu);
        if(u_xlati13 != 0) {
            u_xlat10_34.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_14 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_8.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_9.x = u_xlat16_8.x + u_xlat16_8.x;
            u_xlat16_9.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_9.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_35.xyz = texture(_EnvTex, u_xlat16_9.xyz).xyz;
            u_xlat16_14.xyz = vec3(u_xlat10_14) * u_xlat10_35.xyz;
            u_xlat16_14.xyz = u_xlat16_14.xyz * vec3(_Reflectivity);
            u_xlat16_34.xyz = u_xlat10_34.xyz * _Color.xyz + u_xlat16_14.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb14 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb14 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat35.x = _Time.y * _Speed;
            u_xlat35.x = fract(u_xlat35.x);
            u_xlat35.x = u_xlat35.x + -0.5;
            u_xlat35.x = abs(u_xlat35.x) * _Magnitude + _MinValue;
            u_xlat35.xyz = u_xlat16_34.xyz * u_xlat35.xxx;
            u_xlat34.xyz = u_xlat16_34.xyz * vec3(_LightMapIntensity);
            u_xlat16_9.xyz = (bool(u_xlatb14)) ? u_xlat35.xyz : u_xlat34.xyz;
            u_xlat10_34.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_9.xyz = u_xlat16_9.xyz * _Color.xyz;
            u_xlat16_12.xyz = u_xlat10_34.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_15.xyz = u_xlat16_9.xyz * u_xlat16_12.xyz;
            u_xlat16_9.xyz = (-u_xlat16_9.xyz) * u_xlat16_12.xyz + vs_COLOR1.xyz;
            u_xlat16_9.xyz = vs_COLOR1.www * u_xlat16_9.xyz + u_xlat16_15.xyz;
            u_xlat16_34.x = dot(u_xlat16_9.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_14.xyz = (-u_xlat16_9.xyz) + u_xlat16_34.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_14.xyz + u_xlat16_9.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati13;
    } else {
        u_xlati13 = -1;
    //ENDIF
    }
    u_xlati14 = ~u_xlati13;
    u_xlati35 = ~u_xlati1;
    u_xlati14 = int(uint(u_xlati35) & uint(u_xlati14));
    if(u_xlati14 != 0) {
        u_xlat16_16 = u_xlat16_0 * 0.200000003 + _UMin;
        u_xlat16_16 = u_xlat16_0 * 0.0250000004 + u_xlat16_16;
        u_xlat16.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_16;
        u_xlat16.x = u_xlat16_21 * _ScaleTime + u_xlat16_16;
        u_xlat16.xy = u_xlat16.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb37 = !!(vs_TEXCOORD0.x>=u_xlat16.y);
#else
        u_xlatb37 = vs_TEXCOORD0.x>=u_xlat16.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb16 = !!(u_xlat16.x>=vs_TEXCOORD0.x);
#else
        u_xlatb16 = u_xlat16.x>=vs_TEXCOORD0.x;
#endif
        u_xlati16 = int(uint(u_xlatb16) * 0xffffffffu & uint(u_xlatb37) * 0xffffffffu);
        if(u_xlati16 != 0) {
            u_xlat10_37.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_9.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_9.x + u_xlat16_9.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_17.xyz = vec3(u_xlat10_17) * u_xlat10_38.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_Reflectivity);
            u_xlat16_37.xyz = u_xlat10_37.xyz * _Color.xyz + u_xlat16_17.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_37.xyz * u_xlat38.xxx;
            u_xlat37.xyz = u_xlat16_37.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb17)) ? u_xlat38.xyz : u_xlat37.xyz;
            u_xlat10_37.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_37.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_37.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_17.xyz = (-u_xlat16_12.xyz) + u_xlat16_37.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_17.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati16;
    } else {
        u_xlati16 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati16;
    u_xlati38 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati38) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.25 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.300000012 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.349999994 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.400000006 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.450000018 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.5 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.550000012 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.600000024 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.650000036 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.699999988 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.75 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.800000012 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.850000024 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.900000036 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.949999988 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati1 != 0) {
            u_xlat10_19.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_82 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_20.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = vec3(u_xlat10_82) * u_xlat10_20.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_19.xyz = u_xlat10_19.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb82 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb82 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat20.x = _Time.y * _Speed;
            u_xlat20.x = fract(u_xlat20.x);
            u_xlat20.x = u_xlat20.x + -0.5;
            u_xlat20.x = abs(u_xlat20.x) * _Magnitude + _MinValue;
            u_xlat20.xyz = u_xlat16_19.xyz * u_xlat20.xxx;
            u_xlat19.xyz = u_xlat16_19.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb82)) ? u_xlat20.xyz : u_xlat19.xyz;
            u_xlat10_19.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_19.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_19.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_19.xyz = (-u_xlat16_12.xyz) + u_xlat16_19.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_19.xyz + u_xlat16_12.xyz;
            SV_Target0.xyz = u_xlat16_2.xyz;
            SV_Target0.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1 != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LUMINANCE" "FOG_LERP" "_LightMap_ON" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _FogColorNear;
uniform 	vec4 _FogColorFar;
uniform 	float _FogColorIntensity;
uniform 	float _FogIntensity;
uniform 	float _FogEffectStart;
uniform 	float _FogEffectLimit;
uniform 	float _FogStartDistance;
uniform 	float _FogEndDistance;
uniform 	vec4 _PropertyLightmapTexTS;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec3 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat2.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat5.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat2.y = u_xlat16_4.x;
    u_xlat5.z = dot(u_xlat2.xy, u_xlat1.xz);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
#ifdef UNITY_ADRENO_ES3
    u_xlatb21 = !!(0.5<_FogColorNear.w);
#else
    u_xlatb21 = 0.5<_FogColorNear.w;
#endif
    if(u_xlatb21){
        u_xlat1.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat21 = dot(u_xlat1.xzw, u_xlat1.xzw);
        u_xlat21 = sqrt(u_xlat21);
        u_xlat21 = u_xlat21 + (-_FogStartDistance);
        u_xlat21 = max(u_xlat21, 0.0);
        u_xlat1.xz = vec2(u_xlat21) * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat1.xz = u_xlat1.xz * (-u_xlat1.xz);
        u_xlat1.xz = u_xlat1.xz * vec2(1.44269502, 1.44269502);
        u_xlat1.xz = exp2(u_xlat1.xz);
        u_xlat21 = (-u_xlat1.x) + 1.0;
        u_xlat21 = u_xlat21 * _FogEffectLimit;
        u_xlat21 = max(u_xlat21, _FogEffectStart);
        u_xlat2.w = min(u_xlat21, _FogEffectLimit);
        u_xlat6.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat1.zzz * u_xlat6.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    } else {
        u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
        u_xlat0.x = sqrt(u_xlat0.x);
        u_xlat0.x = u_xlat0.x + (-_FogStartDistance);
        u_xlat0.x = max(u_xlat0.x, 0.0);
        u_xlat0.xy = u_xlat0.xx * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat0.xy = u_xlat0.xy * vec2(500.0, 1000.0);
        u_xlat14 = (-_FogStartDistance) + _FogEndDistance;
        u_xlat14 = max(u_xlat14, 0.100000001);
        u_xlat0.xy = u_xlat0.yx / vec2(u_xlat14);
        u_xlat7.x = u_xlat0.y * _FogEffectLimit;
        u_xlat7.x = max(u_xlat7.x, _FogEffectStart);
        u_xlat2.w = min(u_xlat7.x, _FogEffectLimit);
        u_xlat0.x = u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
        u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
        u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
        u_xlat0.x = (-u_xlat0.x) + 1.0;
        u_xlat7.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat0.xxx * u_xlat7.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    //ENDIF
    }
    u_xlat0.xy = in_TEXCOORD1.xy * _PropertyLightmapTexTS.xy + _PropertyLightmapTexTS.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat5.y = u_xlat1.y;
    vs_TEXCOORD3.xyz = u_xlat5.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform 	mediump float _LumiFactor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform lowp sampler2D _PropertyLightmapTex;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump float u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
int u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp vec3 u_xlat10_2;
mediump vec4 u_xlat16_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
int u_xlati4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp float u_xlat10_5;
int u_xlati5;
bool u_xlatb5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
vec2 u_xlat10;
mediump float u_xlat16_10;
int u_xlati10;
bool u_xlatb10;
mediump vec3 u_xlat16_11;
lowp float u_xlat10_11;
int u_xlati11;
bool u_xlatb11;
mediump vec3 u_xlat16_12;
vec2 u_xlat13;
mediump float u_xlat16_13;
int u_xlati13;
bool u_xlatb13;
mediump vec3 u_xlat16_14;
lowp float u_xlat10_14;
int u_xlati14;
bool u_xlatb14;
mediump vec3 u_xlat16_15;
vec2 u_xlat16;
mediump float u_xlat16_16;
int u_xlati16;
bool u_xlatb16;
mediump vec3 u_xlat16_17;
lowp float u_xlat10_17;
int u_xlati17;
bool u_xlatb17;
mediump vec3 u_xlat16_18;
vec3 u_xlat19;
mediump vec3 u_xlat16_19;
lowp vec3 u_xlat10_19;
int u_xlati19;
bool u_xlatb19;
vec3 u_xlat20;
mediump vec3 u_xlat16_20;
lowp vec3 u_xlat10_20;
bool u_xlatb20;
mediump float u_xlat16_21;
bool u_xlatb22;
vec3 u_xlat25;
mediump vec3 u_xlat16_25;
lowp vec3 u_xlat10_25;
bool u_xlatb25;
vec3 u_xlat26;
lowp vec3 u_xlat10_26;
int u_xlati26;
vec3 u_xlat31;
mediump vec3 u_xlat16_31;
lowp vec3 u_xlat10_31;
bool u_xlatb31;
vec3 u_xlat32;
lowp vec3 u_xlat10_32;
int u_xlati32;
vec3 u_xlat34;
mediump vec3 u_xlat16_34;
lowp vec3 u_xlat10_34;
bool u_xlatb34;
vec3 u_xlat35;
lowp vec3 u_xlat10_35;
int u_xlati35;
vec3 u_xlat37;
mediump vec3 u_xlat16_37;
lowp vec3 u_xlat10_37;
bool u_xlatb37;
vec3 u_xlat38;
lowp vec3 u_xlat10_38;
int u_xlati38;
vec3 u_xlat40;
mediump vec3 u_xlat16_40;
lowp vec3 u_xlat10_40;
int u_xlati40;
bool u_xlatb40;
vec3 u_xlat41;
lowp vec3 u_xlat10_41;
mediump float u_xlat16_42;
lowp float u_xlat10_65;
lowp float u_xlat10_82;
bool u_xlatb82;
void main()
{
    u_xlat16_0 = (-_UMin) + _UMax;
    u_xlat16_21 = u_xlat16_0 * 0.0250000004;
    u_xlat16_1 = u_xlat16_0 * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_21 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb22 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb22 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1 = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb22) * 0xffffffffu);
    if(u_xlati1 != 0) {
        u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_65 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_42 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_42 = u_xlat16_42 + u_xlat16_42;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_42)) + vs_TEXCOORD3.xyz;
        u_xlat10_4.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_4.xyz = vec3(u_xlat10_65) * u_xlat10_4.xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_Reflectivity);
        u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz + u_xlat16_4.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb4 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat25.x = _Time.y * _Speed;
        u_xlat25.x = fract(u_xlat25.x);
        u_xlat25.x = u_xlat25.x + -0.5;
        u_xlat25.x = abs(u_xlat25.x) * _Magnitude + _MinValue;
        u_xlat25.xyz = u_xlat16_2.xyz * u_xlat25.xxx;
        u_xlat5.xyz = u_xlat16_2.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb4)) ? u_xlat25.xyz : u_xlat5.xyz;
        u_xlat10_4.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_6.xyz = u_xlat10_4.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_7.xyz = u_xlat16_3.xyz * u_xlat16_6.xyz;
        u_xlat16_3.xyz = (-u_xlat16_3.xyz) * u_xlat16_6.xyz + vs_COLOR1.xyz;
        u_xlat16_3.xyz = vs_COLOR1.www * u_xlat16_3.xyz + u_xlat16_7.xyz;
        u_xlat16_4.x = dot(u_xlat16_3.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
        u_xlat16_4.xyz = (-u_xlat16_3.xyz) + u_xlat16_4.xxx;
        u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_4.xyz + u_xlat16_3.xyz;
        u_xlat16_3.xyz = u_xlat16_2.xyz;
        u_xlat16_3.w = _BloomFactor;
        u_xlat16_2.xyz = u_xlat16_2.xyz;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1 == 0) {
        u_xlat16_4.x = u_xlat16_0 * 0.0500000007 + _UMin;
        u_xlat16_4.x = u_xlat16_0 * 0.0250000004 + u_xlat16_4.x;
        u_xlat4.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_4.x;
        u_xlat4.x = u_xlat16_21 * _ScaleTime + u_xlat16_4.x;
        u_xlat4.xy = u_xlat4.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb25 = !!(vs_TEXCOORD0.x>=u_xlat4.y);
#else
        u_xlatb25 = vs_TEXCOORD0.x>=u_xlat4.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(u_xlat4.x>=vs_TEXCOORD0.x);
#else
        u_xlatb4 = u_xlat4.x>=vs_TEXCOORD0.x;
#endif
        u_xlati4 = int(uint(u_xlatb4) * 0xffffffffu & uint(u_xlatb25) * 0xffffffffu);
        if(u_xlati4 != 0) {
            u_xlat10_25.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_5 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_42 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_7.x = u_xlat16_42 + u_xlat16_42;
            u_xlat16_7.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_7.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_26.xyz = texture(_EnvTex, u_xlat16_7.xyz).xyz;
            u_xlat16_5.xyz = vec3(u_xlat10_5) * u_xlat10_26.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Reflectivity);
            u_xlat16_25.xyz = u_xlat10_25.xyz * _Color.xyz + u_xlat16_5.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat26.x = _Time.y * _Speed;
            u_xlat26.x = fract(u_xlat26.x);
            u_xlat26.x = u_xlat26.x + -0.5;
            u_xlat26.x = abs(u_xlat26.x) * _Magnitude + _MinValue;
            u_xlat26.xyz = u_xlat16_25.xyz * u_xlat26.xxx;
            u_xlat25.xyz = u_xlat16_25.xyz * vec3(_LightMapIntensity);
            u_xlat16_7.xyz = (bool(u_xlatb5)) ? u_xlat26.xyz : u_xlat25.xyz;
            u_xlat10_25.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * _Color.xyz;
            u_xlat16_8.xyz = u_xlat10_25.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_9.xyz = u_xlat16_7.xyz * u_xlat16_8.xyz;
            u_xlat16_7.xyz = (-u_xlat16_7.xyz) * u_xlat16_8.xyz + vs_COLOR1.xyz;
            u_xlat16_7.xyz = vs_COLOR1.www * u_xlat16_7.xyz + u_xlat16_9.xyz;
            u_xlat16_25.x = dot(u_xlat16_7.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_5.xyz = (-u_xlat16_7.xyz) + u_xlat16_25.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_5.xyz + u_xlat16_7.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati4;
    } else {
        u_xlati4 = -1;
    //ENDIF
    }
    u_xlati5 = ~u_xlati4;
    u_xlati26 = ~u_xlati1;
    u_xlati5 = int(uint(u_xlati26) & uint(u_xlati5));
    if(u_xlati5 != 0) {
        u_xlat16_10 = u_xlat16_0 * 0.100000001 + _UMin;
        u_xlat16_10 = u_xlat16_0 * 0.0250000004 + u_xlat16_10;
        u_xlat10.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_10;
        u_xlat10.x = u_xlat16_21 * _ScaleTime + u_xlat16_10;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb31 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb31 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati10 = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb31) * 0xffffffffu);
        if(u_xlati10 != 0) {
            u_xlat10_31.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_11 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_7.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_8.x = u_xlat16_7.x + u_xlat16_7.x;
            u_xlat16_8.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_8.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_32.xyz = texture(_EnvTex, u_xlat16_8.xyz).xyz;
            u_xlat16_11.xyz = vec3(u_xlat10_11) * u_xlat10_32.xyz;
            u_xlat16_11.xyz = u_xlat16_11.xyz * vec3(_Reflectivity);
            u_xlat16_31.xyz = u_xlat10_31.xyz * _Color.xyz + u_xlat16_11.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb11 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb11 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat32.x = _Time.y * _Speed;
            u_xlat32.x = fract(u_xlat32.x);
            u_xlat32.x = u_xlat32.x + -0.5;
            u_xlat32.x = abs(u_xlat32.x) * _Magnitude + _MinValue;
            u_xlat32.xyz = u_xlat16_31.xyz * u_xlat32.xxx;
            u_xlat31.xyz = u_xlat16_31.xyz * vec3(_LightMapIntensity);
            u_xlat16_8.xyz = (bool(u_xlatb11)) ? u_xlat32.xyz : u_xlat31.xyz;
            u_xlat10_31.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_8.xyz = u_xlat16_8.xyz * _Color.xyz;
            u_xlat16_9.xyz = u_xlat10_31.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_12.xyz = u_xlat16_8.xyz * u_xlat16_9.xyz;
            u_xlat16_8.xyz = (-u_xlat16_8.xyz) * u_xlat16_9.xyz + vs_COLOR1.xyz;
            u_xlat16_8.xyz = vs_COLOR1.www * u_xlat16_8.xyz + u_xlat16_12.xyz;
            u_xlat16_31.x = dot(u_xlat16_8.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_11.xyz = (-u_xlat16_8.xyz) + u_xlat16_31.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_11.xyz + u_xlat16_8.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati10;
    } else {
        u_xlati10 = -1;
    //ENDIF
    }
    u_xlati11 = ~u_xlati10;
    u_xlati32 = ~u_xlati1;
    u_xlati11 = int(uint(u_xlati32) & uint(u_xlati11));
    if(u_xlati11 != 0) {
        u_xlat16_13 = u_xlat16_0 * 0.150000006 + _UMin;
        u_xlat16_13 = u_xlat16_0 * 0.0250000004 + u_xlat16_13;
        u_xlat13.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_13;
        u_xlat13.x = u_xlat16_21 * _ScaleTime + u_xlat16_13;
        u_xlat13.xy = u_xlat13.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb34 = !!(vs_TEXCOORD0.x>=u_xlat13.y);
#else
        u_xlatb34 = vs_TEXCOORD0.x>=u_xlat13.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb13 = !!(u_xlat13.x>=vs_TEXCOORD0.x);
#else
        u_xlatb13 = u_xlat13.x>=vs_TEXCOORD0.x;
#endif
        u_xlati13 = int(uint(u_xlatb13) * 0xffffffffu & uint(u_xlatb34) * 0xffffffffu);
        if(u_xlati13 != 0) {
            u_xlat10_34.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_14 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_8.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_9.x = u_xlat16_8.x + u_xlat16_8.x;
            u_xlat16_9.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_9.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_35.xyz = texture(_EnvTex, u_xlat16_9.xyz).xyz;
            u_xlat16_14.xyz = vec3(u_xlat10_14) * u_xlat10_35.xyz;
            u_xlat16_14.xyz = u_xlat16_14.xyz * vec3(_Reflectivity);
            u_xlat16_34.xyz = u_xlat10_34.xyz * _Color.xyz + u_xlat16_14.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb14 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb14 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat35.x = _Time.y * _Speed;
            u_xlat35.x = fract(u_xlat35.x);
            u_xlat35.x = u_xlat35.x + -0.5;
            u_xlat35.x = abs(u_xlat35.x) * _Magnitude + _MinValue;
            u_xlat35.xyz = u_xlat16_34.xyz * u_xlat35.xxx;
            u_xlat34.xyz = u_xlat16_34.xyz * vec3(_LightMapIntensity);
            u_xlat16_9.xyz = (bool(u_xlatb14)) ? u_xlat35.xyz : u_xlat34.xyz;
            u_xlat10_34.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_9.xyz = u_xlat16_9.xyz * _Color.xyz;
            u_xlat16_12.xyz = u_xlat10_34.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_15.xyz = u_xlat16_9.xyz * u_xlat16_12.xyz;
            u_xlat16_9.xyz = (-u_xlat16_9.xyz) * u_xlat16_12.xyz + vs_COLOR1.xyz;
            u_xlat16_9.xyz = vs_COLOR1.www * u_xlat16_9.xyz + u_xlat16_15.xyz;
            u_xlat16_34.x = dot(u_xlat16_9.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_14.xyz = (-u_xlat16_9.xyz) + u_xlat16_34.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_14.xyz + u_xlat16_9.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati13;
    } else {
        u_xlati13 = -1;
    //ENDIF
    }
    u_xlati14 = ~u_xlati13;
    u_xlati35 = ~u_xlati1;
    u_xlati14 = int(uint(u_xlati35) & uint(u_xlati14));
    if(u_xlati14 != 0) {
        u_xlat16_16 = u_xlat16_0 * 0.200000003 + _UMin;
        u_xlat16_16 = u_xlat16_0 * 0.0250000004 + u_xlat16_16;
        u_xlat16.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_16;
        u_xlat16.x = u_xlat16_21 * _ScaleTime + u_xlat16_16;
        u_xlat16.xy = u_xlat16.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb37 = !!(vs_TEXCOORD0.x>=u_xlat16.y);
#else
        u_xlatb37 = vs_TEXCOORD0.x>=u_xlat16.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb16 = !!(u_xlat16.x>=vs_TEXCOORD0.x);
#else
        u_xlatb16 = u_xlat16.x>=vs_TEXCOORD0.x;
#endif
        u_xlati16 = int(uint(u_xlatb16) * 0xffffffffu & uint(u_xlatb37) * 0xffffffffu);
        if(u_xlati16 != 0) {
            u_xlat10_37.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_9.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_9.x + u_xlat16_9.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_17.xyz = vec3(u_xlat10_17) * u_xlat10_38.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_Reflectivity);
            u_xlat16_37.xyz = u_xlat10_37.xyz * _Color.xyz + u_xlat16_17.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_37.xyz * u_xlat38.xxx;
            u_xlat37.xyz = u_xlat16_37.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb17)) ? u_xlat38.xyz : u_xlat37.xyz;
            u_xlat10_37.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_37.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_37.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_17.xyz = (-u_xlat16_12.xyz) + u_xlat16_37.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_17.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati16;
    } else {
        u_xlati16 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati16;
    u_xlati38 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati38) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.25 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.300000012 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.349999994 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.400000006 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.450000018 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.5 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.550000012 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.600000024 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.650000036 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.699999988 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.75 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.800000012 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.850000024 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.900000036 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.949999988 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati1 != 0) {
            u_xlat10_19.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_82 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_20.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = vec3(u_xlat10_82) * u_xlat10_20.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_19.xyz = u_xlat10_19.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb82 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb82 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat20.x = _Time.y * _Speed;
            u_xlat20.x = fract(u_xlat20.x);
            u_xlat20.x = u_xlat20.x + -0.5;
            u_xlat20.x = abs(u_xlat20.x) * _Magnitude + _MinValue;
            u_xlat20.xyz = u_xlat16_19.xyz * u_xlat20.xxx;
            u_xlat19.xyz = u_xlat16_19.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb82)) ? u_xlat20.xyz : u_xlat19.xyz;
            u_xlat10_19.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_19.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_19.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_19.xyz = (-u_xlat16_12.xyz) + u_xlat16_19.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_19.xyz + u_xlat16_12.xyz;
            SV_Target0.xyz = u_xlat16_2.xyz;
            SV_Target0.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1 != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LUMINANCE" "FOG_LERP" "_LightMap_ON" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _FogColorNear;
uniform 	vec4 _FogColorFar;
uniform 	float _FogColorIntensity;
uniform 	float _FogIntensity;
uniform 	float _FogEffectStart;
uniform 	float _FogEffectLimit;
uniform 	float _FogStartDistance;
uniform 	float _FogEndDistance;
uniform 	vec4 _PropertyLightmapTexTS;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec3 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat2.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat5.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat2.y = u_xlat16_4.x;
    u_xlat5.z = dot(u_xlat2.xy, u_xlat1.xz);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
#ifdef UNITY_ADRENO_ES3
    u_xlatb21 = !!(0.5<_FogColorNear.w);
#else
    u_xlatb21 = 0.5<_FogColorNear.w;
#endif
    if(u_xlatb21){
        u_xlat1.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat21 = dot(u_xlat1.xzw, u_xlat1.xzw);
        u_xlat21 = sqrt(u_xlat21);
        u_xlat21 = u_xlat21 + (-_FogStartDistance);
        u_xlat21 = max(u_xlat21, 0.0);
        u_xlat1.xz = vec2(u_xlat21) * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat1.xz = u_xlat1.xz * (-u_xlat1.xz);
        u_xlat1.xz = u_xlat1.xz * vec2(1.44269502, 1.44269502);
        u_xlat1.xz = exp2(u_xlat1.xz);
        u_xlat21 = (-u_xlat1.x) + 1.0;
        u_xlat21 = u_xlat21 * _FogEffectLimit;
        u_xlat21 = max(u_xlat21, _FogEffectStart);
        u_xlat2.w = min(u_xlat21, _FogEffectLimit);
        u_xlat6.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat1.zzz * u_xlat6.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    } else {
        u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
        u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
        u_xlat0.x = sqrt(u_xlat0.x);
        u_xlat0.x = u_xlat0.x + (-_FogStartDistance);
        u_xlat0.x = max(u_xlat0.x, 0.0);
        u_xlat0.xy = u_xlat0.xx * vec2(_FogIntensity, _FogColorIntensity);
        u_xlat0.xy = u_xlat0.xy * vec2(500.0, 1000.0);
        u_xlat14 = (-_FogStartDistance) + _FogEndDistance;
        u_xlat14 = max(u_xlat14, 0.100000001);
        u_xlat0.xy = u_xlat0.yx / vec2(u_xlat14);
        u_xlat7.x = u_xlat0.y * _FogEffectLimit;
        u_xlat7.x = max(u_xlat7.x, _FogEffectStart);
        u_xlat2.w = min(u_xlat7.x, _FogEffectLimit);
        u_xlat0.x = u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
        u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
        u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
        u_xlat0.x = (-u_xlat0.x) + 1.0;
        u_xlat7.xyz = _FogColorNear.xyz + (-_FogColorFar.xyz);
        u_xlat2.xyz = u_xlat0.xxx * u_xlat7.xyz + _FogColorFar.xyz;
        vs_COLOR1 = u_xlat2;
    //ENDIF
    }
    u_xlat0.xy = in_TEXCOORD1.xy * _PropertyLightmapTexTS.xy + _PropertyLightmapTexTS.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat5.y = u_xlat1.y;
    vs_TEXCOORD3.xyz = u_xlat5.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform 	mediump float _LumiFactor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform lowp sampler2D _PropertyLightmapTex;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump float u_xlat16_0;
vec2 u_xlat1;
mediump float u_xlat16_1;
int u_xlati1;
bool u_xlatb1;
mediump vec4 u_xlat16_2;
lowp vec3 u_xlat10_2;
mediump vec4 u_xlat16_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
int u_xlati4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp float u_xlat10_5;
int u_xlati5;
bool u_xlatb5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
vec2 u_xlat10;
mediump float u_xlat16_10;
int u_xlati10;
bool u_xlatb10;
mediump vec3 u_xlat16_11;
lowp float u_xlat10_11;
int u_xlati11;
bool u_xlatb11;
mediump vec3 u_xlat16_12;
vec2 u_xlat13;
mediump float u_xlat16_13;
int u_xlati13;
bool u_xlatb13;
mediump vec3 u_xlat16_14;
lowp float u_xlat10_14;
int u_xlati14;
bool u_xlatb14;
mediump vec3 u_xlat16_15;
vec2 u_xlat16;
mediump float u_xlat16_16;
int u_xlati16;
bool u_xlatb16;
mediump vec3 u_xlat16_17;
lowp float u_xlat10_17;
int u_xlati17;
bool u_xlatb17;
mediump vec3 u_xlat16_18;
vec3 u_xlat19;
mediump vec3 u_xlat16_19;
lowp vec3 u_xlat10_19;
int u_xlati19;
bool u_xlatb19;
vec3 u_xlat20;
mediump vec3 u_xlat16_20;
lowp vec3 u_xlat10_20;
bool u_xlatb20;
mediump float u_xlat16_21;
bool u_xlatb22;
vec3 u_xlat25;
mediump vec3 u_xlat16_25;
lowp vec3 u_xlat10_25;
bool u_xlatb25;
vec3 u_xlat26;
lowp vec3 u_xlat10_26;
int u_xlati26;
vec3 u_xlat31;
mediump vec3 u_xlat16_31;
lowp vec3 u_xlat10_31;
bool u_xlatb31;
vec3 u_xlat32;
lowp vec3 u_xlat10_32;
int u_xlati32;
vec3 u_xlat34;
mediump vec3 u_xlat16_34;
lowp vec3 u_xlat10_34;
bool u_xlatb34;
vec3 u_xlat35;
lowp vec3 u_xlat10_35;
int u_xlati35;
vec3 u_xlat37;
mediump vec3 u_xlat16_37;
lowp vec3 u_xlat10_37;
bool u_xlatb37;
vec3 u_xlat38;
lowp vec3 u_xlat10_38;
int u_xlati38;
vec3 u_xlat40;
mediump vec3 u_xlat16_40;
lowp vec3 u_xlat10_40;
int u_xlati40;
bool u_xlatb40;
vec3 u_xlat41;
lowp vec3 u_xlat10_41;
mediump float u_xlat16_42;
lowp float u_xlat10_65;
lowp float u_xlat10_82;
bool u_xlatb82;
void main()
{
    u_xlat16_0 = (-_UMin) + _UMax;
    u_xlat16_21 = u_xlat16_0 * 0.0250000004;
    u_xlat16_1 = u_xlat16_0 * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_1;
    u_xlat1.x = u_xlat16_21 * _ScaleTime + u_xlat16_1;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb22 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb22 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati1 = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb22) * 0xffffffffu);
    if(u_xlati1 != 0) {
        u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_65 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_42 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_42 = u_xlat16_42 + u_xlat16_42;
        u_xlat16_3.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_42)) + vs_TEXCOORD3.xyz;
        u_xlat10_4.xyz = texture(_EnvTex, u_xlat16_3.xyz).xyz;
        u_xlat16_4.xyz = vec3(u_xlat10_65) * u_xlat10_4.xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_Reflectivity);
        u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz + u_xlat16_4.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb4 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat25.x = _Time.y * _Speed;
        u_xlat25.x = fract(u_xlat25.x);
        u_xlat25.x = u_xlat25.x + -0.5;
        u_xlat25.x = abs(u_xlat25.x) * _Magnitude + _MinValue;
        u_xlat25.xyz = u_xlat16_2.xyz * u_xlat25.xxx;
        u_xlat5.xyz = u_xlat16_2.xyz * vec3(_LightMapIntensity);
        u_xlat16_3.xyz = (bool(u_xlatb4)) ? u_xlat25.xyz : u_xlat5.xyz;
        u_xlat10_4.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;
        u_xlat16_6.xyz = u_xlat10_4.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_7.xyz = u_xlat16_3.xyz * u_xlat16_6.xyz;
        u_xlat16_3.xyz = (-u_xlat16_3.xyz) * u_xlat16_6.xyz + vs_COLOR1.xyz;
        u_xlat16_3.xyz = vs_COLOR1.www * u_xlat16_3.xyz + u_xlat16_7.xyz;
        u_xlat16_4.x = dot(u_xlat16_3.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
        u_xlat16_4.xyz = (-u_xlat16_3.xyz) + u_xlat16_4.xxx;
        u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_4.xyz + u_xlat16_3.xyz;
        u_xlat16_3.xyz = u_xlat16_2.xyz;
        u_xlat16_3.w = _BloomFactor;
        u_xlat16_2.xyz = u_xlat16_2.xyz;
    } else {
        u_xlat16_2.x = float(0.0);
        u_xlat16_2.y = float(0.0);
        u_xlat16_2.z = float(0.0);
    //ENDIF
    }
    if(u_xlati1 == 0) {
        u_xlat16_4.x = u_xlat16_0 * 0.0500000007 + _UMin;
        u_xlat16_4.x = u_xlat16_0 * 0.0250000004 + u_xlat16_4.x;
        u_xlat4.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_4.x;
        u_xlat4.x = u_xlat16_21 * _ScaleTime + u_xlat16_4.x;
        u_xlat4.xy = u_xlat4.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb25 = !!(vs_TEXCOORD0.x>=u_xlat4.y);
#else
        u_xlatb25 = vs_TEXCOORD0.x>=u_xlat4.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb4 = !!(u_xlat4.x>=vs_TEXCOORD0.x);
#else
        u_xlatb4 = u_xlat4.x>=vs_TEXCOORD0.x;
#endif
        u_xlati4 = int(uint(u_xlatb4) * 0xffffffffu & uint(u_xlatb25) * 0xffffffffu);
        if(u_xlati4 != 0) {
            u_xlat10_25.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_5 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_42 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_7.x = u_xlat16_42 + u_xlat16_42;
            u_xlat16_7.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_7.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_26.xyz = texture(_EnvTex, u_xlat16_7.xyz).xyz;
            u_xlat16_5.xyz = vec3(u_xlat10_5) * u_xlat10_26.xyz;
            u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Reflectivity);
            u_xlat16_25.xyz = u_xlat10_25.xyz * _Color.xyz + u_xlat16_5.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat26.x = _Time.y * _Speed;
            u_xlat26.x = fract(u_xlat26.x);
            u_xlat26.x = u_xlat26.x + -0.5;
            u_xlat26.x = abs(u_xlat26.x) * _Magnitude + _MinValue;
            u_xlat26.xyz = u_xlat16_25.xyz * u_xlat26.xxx;
            u_xlat25.xyz = u_xlat16_25.xyz * vec3(_LightMapIntensity);
            u_xlat16_7.xyz = (bool(u_xlatb5)) ? u_xlat26.xyz : u_xlat25.xyz;
            u_xlat10_25.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * _Color.xyz;
            u_xlat16_8.xyz = u_xlat10_25.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_9.xyz = u_xlat16_7.xyz * u_xlat16_8.xyz;
            u_xlat16_7.xyz = (-u_xlat16_7.xyz) * u_xlat16_8.xyz + vs_COLOR1.xyz;
            u_xlat16_7.xyz = vs_COLOR1.www * u_xlat16_7.xyz + u_xlat16_9.xyz;
            u_xlat16_25.x = dot(u_xlat16_7.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_5.xyz = (-u_xlat16_7.xyz) + u_xlat16_25.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_5.xyz + u_xlat16_7.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati4;
    } else {
        u_xlati4 = -1;
    //ENDIF
    }
    u_xlati5 = ~u_xlati4;
    u_xlati26 = ~u_xlati1;
    u_xlati5 = int(uint(u_xlati26) & uint(u_xlati5));
    if(u_xlati5 != 0) {
        u_xlat16_10 = u_xlat16_0 * 0.100000001 + _UMin;
        u_xlat16_10 = u_xlat16_0 * 0.0250000004 + u_xlat16_10;
        u_xlat10.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_10;
        u_xlat10.x = u_xlat16_21 * _ScaleTime + u_xlat16_10;
        u_xlat10.xy = u_xlat10.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb31 = !!(vs_TEXCOORD0.x>=u_xlat10.y);
#else
        u_xlatb31 = vs_TEXCOORD0.x>=u_xlat10.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb10 = !!(u_xlat10.x>=vs_TEXCOORD0.x);
#else
        u_xlatb10 = u_xlat10.x>=vs_TEXCOORD0.x;
#endif
        u_xlati10 = int(uint(u_xlatb10) * 0xffffffffu & uint(u_xlatb31) * 0xffffffffu);
        if(u_xlati10 != 0) {
            u_xlat10_31.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_11 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_7.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_8.x = u_xlat16_7.x + u_xlat16_7.x;
            u_xlat16_8.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_8.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_32.xyz = texture(_EnvTex, u_xlat16_8.xyz).xyz;
            u_xlat16_11.xyz = vec3(u_xlat10_11) * u_xlat10_32.xyz;
            u_xlat16_11.xyz = u_xlat16_11.xyz * vec3(_Reflectivity);
            u_xlat16_31.xyz = u_xlat10_31.xyz * _Color.xyz + u_xlat16_11.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb11 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb11 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat32.x = _Time.y * _Speed;
            u_xlat32.x = fract(u_xlat32.x);
            u_xlat32.x = u_xlat32.x + -0.5;
            u_xlat32.x = abs(u_xlat32.x) * _Magnitude + _MinValue;
            u_xlat32.xyz = u_xlat16_31.xyz * u_xlat32.xxx;
            u_xlat31.xyz = u_xlat16_31.xyz * vec3(_LightMapIntensity);
            u_xlat16_8.xyz = (bool(u_xlatb11)) ? u_xlat32.xyz : u_xlat31.xyz;
            u_xlat10_31.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_8.xyz = u_xlat16_8.xyz * _Color.xyz;
            u_xlat16_9.xyz = u_xlat10_31.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_12.xyz = u_xlat16_8.xyz * u_xlat16_9.xyz;
            u_xlat16_8.xyz = (-u_xlat16_8.xyz) * u_xlat16_9.xyz + vs_COLOR1.xyz;
            u_xlat16_8.xyz = vs_COLOR1.www * u_xlat16_8.xyz + u_xlat16_12.xyz;
            u_xlat16_31.x = dot(u_xlat16_8.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_11.xyz = (-u_xlat16_8.xyz) + u_xlat16_31.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_11.xyz + u_xlat16_8.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati10;
    } else {
        u_xlati10 = -1;
    //ENDIF
    }
    u_xlati11 = ~u_xlati10;
    u_xlati32 = ~u_xlati1;
    u_xlati11 = int(uint(u_xlati32) & uint(u_xlati11));
    if(u_xlati11 != 0) {
        u_xlat16_13 = u_xlat16_0 * 0.150000006 + _UMin;
        u_xlat16_13 = u_xlat16_0 * 0.0250000004 + u_xlat16_13;
        u_xlat13.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_13;
        u_xlat13.x = u_xlat16_21 * _ScaleTime + u_xlat16_13;
        u_xlat13.xy = u_xlat13.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb34 = !!(vs_TEXCOORD0.x>=u_xlat13.y);
#else
        u_xlatb34 = vs_TEXCOORD0.x>=u_xlat13.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb13 = !!(u_xlat13.x>=vs_TEXCOORD0.x);
#else
        u_xlatb13 = u_xlat13.x>=vs_TEXCOORD0.x;
#endif
        u_xlati13 = int(uint(u_xlatb13) * 0xffffffffu & uint(u_xlatb34) * 0xffffffffu);
        if(u_xlati13 != 0) {
            u_xlat10_34.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_14 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_8.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_9.x = u_xlat16_8.x + u_xlat16_8.x;
            u_xlat16_9.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_9.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_35.xyz = texture(_EnvTex, u_xlat16_9.xyz).xyz;
            u_xlat16_14.xyz = vec3(u_xlat10_14) * u_xlat10_35.xyz;
            u_xlat16_14.xyz = u_xlat16_14.xyz * vec3(_Reflectivity);
            u_xlat16_34.xyz = u_xlat10_34.xyz * _Color.xyz + u_xlat16_14.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb14 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb14 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat35.x = _Time.y * _Speed;
            u_xlat35.x = fract(u_xlat35.x);
            u_xlat35.x = u_xlat35.x + -0.5;
            u_xlat35.x = abs(u_xlat35.x) * _Magnitude + _MinValue;
            u_xlat35.xyz = u_xlat16_34.xyz * u_xlat35.xxx;
            u_xlat34.xyz = u_xlat16_34.xyz * vec3(_LightMapIntensity);
            u_xlat16_9.xyz = (bool(u_xlatb14)) ? u_xlat35.xyz : u_xlat34.xyz;
            u_xlat10_34.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_9.xyz = u_xlat16_9.xyz * _Color.xyz;
            u_xlat16_12.xyz = u_xlat10_34.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_15.xyz = u_xlat16_9.xyz * u_xlat16_12.xyz;
            u_xlat16_9.xyz = (-u_xlat16_9.xyz) * u_xlat16_12.xyz + vs_COLOR1.xyz;
            u_xlat16_9.xyz = vs_COLOR1.www * u_xlat16_9.xyz + u_xlat16_15.xyz;
            u_xlat16_34.x = dot(u_xlat16_9.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_14.xyz = (-u_xlat16_9.xyz) + u_xlat16_34.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_14.xyz + u_xlat16_9.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati13;
    } else {
        u_xlati13 = -1;
    //ENDIF
    }
    u_xlati14 = ~u_xlati13;
    u_xlati35 = ~u_xlati1;
    u_xlati14 = int(uint(u_xlati35) & uint(u_xlati14));
    if(u_xlati14 != 0) {
        u_xlat16_16 = u_xlat16_0 * 0.200000003 + _UMin;
        u_xlat16_16 = u_xlat16_0 * 0.0250000004 + u_xlat16_16;
        u_xlat16.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_16;
        u_xlat16.x = u_xlat16_21 * _ScaleTime + u_xlat16_16;
        u_xlat16.xy = u_xlat16.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb37 = !!(vs_TEXCOORD0.x>=u_xlat16.y);
#else
        u_xlatb37 = vs_TEXCOORD0.x>=u_xlat16.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb16 = !!(u_xlat16.x>=vs_TEXCOORD0.x);
#else
        u_xlatb16 = u_xlat16.x>=vs_TEXCOORD0.x;
#endif
        u_xlati16 = int(uint(u_xlatb16) * 0xffffffffu & uint(u_xlatb37) * 0xffffffffu);
        if(u_xlati16 != 0) {
            u_xlat10_37.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_17 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_9.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_9.x + u_xlat16_9.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_38.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_17.xyz = vec3(u_xlat10_17) * u_xlat10_38.xyz;
            u_xlat16_17.xyz = u_xlat16_17.xyz * vec3(_Reflectivity);
            u_xlat16_37.xyz = u_xlat10_37.xyz * _Color.xyz + u_xlat16_17.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb17 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb17 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat38.x = _Time.y * _Speed;
            u_xlat38.x = fract(u_xlat38.x);
            u_xlat38.x = u_xlat38.x + -0.5;
            u_xlat38.x = abs(u_xlat38.x) * _Magnitude + _MinValue;
            u_xlat38.xyz = u_xlat16_37.xyz * u_xlat38.xxx;
            u_xlat37.xyz = u_xlat16_37.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb17)) ? u_xlat38.xyz : u_xlat37.xyz;
            u_xlat10_37.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_37.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_37.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_17.xyz = (-u_xlat16_12.xyz) + u_xlat16_37.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_17.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati16;
    } else {
        u_xlati16 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati16;
    u_xlati38 = ~u_xlati1;
    u_xlati17 = int(uint(u_xlati38) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.25 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.300000012 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.349999994 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.400000006 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.450000018 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.5 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.550000012 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.600000024 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.650000036 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.699999988 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.75 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.800000012 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.850000024 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.900000036 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati19 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati19 != 0) {
            u_xlat10_40.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_20.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_41.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = u_xlat10_20.xxx * u_xlat10_41.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_40.xyz = u_xlat10_40.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb20 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb20 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat41.x = _Time.y * _Speed;
            u_xlat41.x = fract(u_xlat41.x);
            u_xlat41.x = u_xlat41.x + -0.5;
            u_xlat41.x = abs(u_xlat41.x) * _Magnitude + _MinValue;
            u_xlat41.xyz = u_xlat16_40.xyz * u_xlat41.xxx;
            u_xlat40.xyz = u_xlat16_40.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb20)) ? u_xlat41.xyz : u_xlat40.xyz;
            u_xlat10_40.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_40.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_40.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_40.xyz = (-u_xlat16_12.xyz) + u_xlat16_40.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_40.xyz + u_xlat16_12.xyz;
            u_xlat16_3.xyz = u_xlat16_2.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        //ENDIF
        }
        u_xlati1 = u_xlati19;
    } else {
        u_xlati19 = -1;
    //ENDIF
    }
    u_xlati19 = ~u_xlati19;
    u_xlati40 = ~u_xlati1;
    u_xlati19 = int(uint(u_xlati40) & uint(u_xlati19));
    if(u_xlati19 != 0) {
        u_xlat16_19.x = u_xlat16_0 * 0.949999988 + _UMin;
        u_xlat16_19.x = u_xlat16_0 * 0.0250000004 + u_xlat16_19.x;
        u_xlat19.y = (-u_xlat16_21) * _ScaleTime + u_xlat16_19.x;
        u_xlat19.x = u_xlat16_21 * _ScaleTime + u_xlat16_19.x;
        u_xlat19.xy = u_xlat19.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat19.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat19.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb19 = !!(u_xlat19.x>=vs_TEXCOORD0.x);
#else
        u_xlatb19 = u_xlat19.x>=vs_TEXCOORD0.x;
#endif
        u_xlati1 = int(uint(u_xlatb19) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati1 != 0) {
            u_xlat10_19.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_82 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_12.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;
            u_xlat16_12.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_20.xyz = texture(_EnvTex, u_xlat16_12.xyz).xyz;
            u_xlat16_20.xyz = vec3(u_xlat10_82) * u_xlat10_20.xyz;
            u_xlat16_20.xyz = u_xlat16_20.xyz * vec3(_Reflectivity);
            u_xlat16_19.xyz = u_xlat10_19.xyz * _Color.xyz + u_xlat16_20.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb82 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb82 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat20.x = _Time.y * _Speed;
            u_xlat20.x = fract(u_xlat20.x);
            u_xlat20.x = u_xlat20.x + -0.5;
            u_xlat20.x = abs(u_xlat20.x) * _Magnitude + _MinValue;
            u_xlat20.xyz = u_xlat16_19.xyz * u_xlat20.xxx;
            u_xlat19.xyz = u_xlat16_19.xyz * vec3(_LightMapIntensity);
            u_xlat16_12.xyz = (bool(u_xlatb82)) ? u_xlat20.xyz : u_xlat19.xyz;
            u_xlat10_19.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * _Color.xyz;
            u_xlat16_15.xyz = u_xlat10_19.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_18.xyz = u_xlat16_12.xyz * u_xlat16_15.xyz;
            u_xlat16_12.xyz = (-u_xlat16_12.xyz) * u_xlat16_15.xyz + vs_COLOR1.xyz;
            u_xlat16_12.xyz = vs_COLOR1.www * u_xlat16_12.xyz + u_xlat16_18.xyz;
            u_xlat16_19.x = dot(u_xlat16_12.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_19.xyz = (-u_xlat16_12.xyz) + u_xlat16_19.xxx;
            u_xlat16_2.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_19.xyz + u_xlat16_12.xyz;
            SV_Target0.xyz = u_xlat16_2.xyz;
            SV_Target0.w = _BloomFactor;
            u_xlat16_2.xyz = u_xlat16_2.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati1 != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_2.w = _BloomFactor;
    SV_Target0 = u_xlat16_2;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LUMINANCE" "FOG_HEIGHT" "_LightMap_ON" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _HeigtFogParams;
uniform 	vec4 _HeigtFogRamp;
uniform 	vec4 _HeigtFogColBase;
uniform 	vec4 _HeigtFogColDelta;
uniform 	vec4 _HeigtFogColParams;
uniform 	vec4 _HeigtFogRadialCol;
uniform 	vec4 _Mihoyo_FogColor;
uniform 	vec4 _PropertyLightmapTexTS;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec2 u_xlat5;
float u_xlat6;
bool u_xlatb6;
mediump float u_xlat16_9;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat18;
float u_xlat19;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD1.xy * _PropertyLightmapTexTS.xy + _PropertyLightmapTexTS.zw;
    vs_TEXCOORD1.xy = u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat2.y = u_xlat1.y;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat5.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat2.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat5.y = u_xlat16_4.x;
    u_xlat2.z = dot(u_xlat5.xy, u_xlat1.xz);
    vs_TEXCOORD3.xyz = u_xlat2.xyz;
    u_xlat18 = u_xlat0.y * _HeigtFogColParams.x + _HeigtFogColParams.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
    u_xlat16_3 = (-u_xlat18) + 2.0;
    u_xlat16_3 = u_xlat18 * u_xlat16_3;
    u_xlat1.xyz = vec3(u_xlat16_3) * _HeigtFogColDelta.xyz + _HeigtFogColBase.xyz;
    u_xlat2.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol.xyz;
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = u_xlat0.y * _HeigtFogParams.x;
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat12.x = u_xlat0.x + (-_HeigtFogRamp.w);
    u_xlat12.x = u_xlat12.x * _HeigtFogColParams.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat12.x = min(max(u_xlat12.x, 0.0), 1.0);
#else
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
#endif
    u_xlat1.xyz = u_xlat12.xxx * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat12.x = _ProjectionParams.z * 0.999899983;
#ifdef UNITY_ADRENO_ES3
    u_xlatb12 = !!(u_xlat0.x>=u_xlat12.x);
#else
    u_xlatb12 = u_xlat0.x>=u_xlat12.x;
#endif
    u_xlat18 = u_xlat0.x * _HeigtFogParams.z + _HeigtFogParams.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat19 = (-u_xlat18) + 2.0;
    u_xlat18 = u_xlat18 * u_xlat19;
    u_xlat19 = u_xlat18 * _HeigtFogColDelta.w;
    u_xlat12.x = (u_xlatb12) ? u_xlat19 : u_xlat18;
    u_xlat12.x = log2(u_xlat12.x);
    u_xlat12.x = u_xlat12.x * _Mihoyo_FogColor.w;
    u_xlat12.x = exp2(u_xlat12.x);
    u_xlat12.x = min(u_xlat12.x, _HeigtFogColBase.w);
    u_xlat1.xyz = u_xlat12.xxx * u_xlat1.xyz;
    u_xlat18 = u_xlat6 * -1.44269502;
    u_xlat12.y = exp2(u_xlat18);
    u_xlat12.xy = (-u_xlat12.xy) + vec2(1.0, 1.0);
    u_xlat18 = u_xlat12.y / u_xlat6;
#ifdef UNITY_ADRENO_ES3
    u_xlatb6 = !!(0.00999999978<abs(u_xlat6));
#else
    u_xlatb6 = 0.00999999978<abs(u_xlat6);
#endif
    u_xlat16_3 = (u_xlatb6) ? u_xlat18 : 1.0;
    u_xlat6 = u_xlat0.x * _HeigtFogParams.y;
    u_xlat0.x = u_xlat0.x * _HeigtFogRamp.x + _HeigtFogRamp.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat16_3 = u_xlat6 * u_xlat16_3;
    u_xlat16_3 = exp2((-u_xlat16_3));
    u_xlat16_3 = min(u_xlat16_3, 1.0);
    u_xlat16_3 = (-u_xlat16_3) + 1.0;
    u_xlat16_9 = (-u_xlat0.x) + 2.0;
    u_xlat16_9 = u_xlat0.x * u_xlat16_9;
    u_xlat0.x = u_xlat16_9 * _HeigtFogRamp.z + (-_HeigtFogRamp.z);
    u_xlat0.x = u_xlat0.x + 1.0;
    u_xlat16_3 = u_xlat0.x * u_xlat16_3;
    u_xlat0.x = min(u_xlat16_3, _HeigtFogColBase.w);
    u_xlat6 = (-u_xlat0.x) + 1.0;
    u_xlat1.xyz = vec3(u_xlat6) * u_xlat1.xyz;
    u_xlat2.w = u_xlat6 * u_xlat12.x;
    u_xlat2.xyz = _Mihoyo_FogColor.xyz * u_xlat0.xxx + u_xlat1.xyz;
    vs_COLOR1 = u_xlat2;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform 	mediump float _LumiFactor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform lowp sampler2D _PropertyLightmapTex;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump float u_xlat16_0;
vec2 u_xlat1;
mediump vec4 u_xlat16_1;
bool u_xlatb1;
ivec2 u_xlati2;
mediump vec4 u_xlat16_3;
lowp float u_xlat10_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
ivec2 u_xlati5;
bool u_xlatb5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
lowp vec3 u_xlat10_7;
int u_xlati7;
bool u_xlatb7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
lowp float u_xlat10_9;
int u_xlati9;
bool u_xlatb9;
mediump vec3 u_xlat16_10;
vec2 u_xlat11;
mediump float u_xlat16_11;
int u_xlati11;
bool u_xlatb11;
mediump vec3 u_xlat16_12;
lowp float u_xlat10_12;
int u_xlati12;
bool u_xlatb12;
mediump vec3 u_xlat16_13;
vec2 u_xlat14;
mediump float u_xlat16_14;
int u_xlati14;
bool u_xlatb14;
mediump vec3 u_xlat16_15;
lowp float u_xlat10_15;
int u_xlati15;
bool u_xlatb15;
mediump vec3 u_xlat16_16;
vec3 u_xlat17;
mediump vec3 u_xlat16_17;
lowp vec3 u_xlat10_17;
int u_xlati17;
bool u_xlatb17;
vec3 u_xlat18;
mediump vec3 u_xlat16_18;
lowp vec3 u_xlat10_18;
bool u_xlatb18;
mediump float u_xlat16_19;
bool u_xlatb20;
vec3 u_xlat21;
mediump vec3 u_xlat16_21;
lowp vec3 u_xlat10_21;
bool u_xlatb21;
lowp vec3 u_xlat10_22;
vec3 u_xlat24;
vec3 u_xlat26;
mediump vec3 u_xlat16_26;
lowp vec3 u_xlat10_26;
bool u_xlatb26;
vec3 u_xlat28;
lowp vec3 u_xlat10_28;
int u_xlati28;
vec3 u_xlat30;
mediump vec3 u_xlat16_30;
lowp vec3 u_xlat10_30;
bool u_xlatb30;
vec3 u_xlat31;
lowp vec3 u_xlat10_31;
int u_xlati31;
vec3 u_xlat33;
mediump vec3 u_xlat16_33;
lowp vec3 u_xlat10_33;
bool u_xlatb33;
vec3 u_xlat34;
lowp vec3 u_xlat10_34;
int u_xlati34;
vec3 u_xlat36;
mediump vec3 u_xlat16_36;
lowp vec3 u_xlat10_36;
int u_xlati36;
bool u_xlatb36;
vec3 u_xlat37;
lowp vec3 u_xlat10_37;
mediump float u_xlat16_38;
mediump float u_xlat16_40;
lowp float u_xlat10_40;
bool u_xlatb40;
float u_xlat59;
mediump float u_xlat16_63;
mediump float u_xlat16_65;
mediump float u_xlat16_67;
mediump float u_xlat16_70;
lowp float u_xlat10_74;
bool u_xlatb74;
void main()
{
    u_xlat16_0 = (-_UMin) + _UMax;
    u_xlat16_19 = u_xlat16_0 * 0.0250000004;
    u_xlat16_1.x = u_xlat16_0 * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_1.x;
    u_xlat1.x = u_xlat16_19 * _ScaleTime + u_xlat16_1.x;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb20 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb20 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati2.x = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb20) * 0xffffffffu);
    if(u_xlati2.x != 0) {
        u_xlat10_21.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_3 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_38 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_38 = u_xlat16_38 + u_xlat16_38;
        u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_38)) + vs_TEXCOORD3.xyz;
        u_xlat10_22.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
        u_xlat16_3.xyz = vec3(u_xlat10_3) * u_xlat10_22.xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_Reflectivity);
        u_xlat16_21.xyz = u_xlat10_21.xyz * _Color.xyz + u_xlat16_3.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat24.x = _Time.y * _Speed;
        u_xlat24.x = fract(u_xlat24.x);
        u_xlat24.x = u_xlat24.x + -0.5;
        u_xlat24.x = abs(u_xlat24.x) * _Magnitude + _MinValue;
        u_xlat24.xyz = u_xlat16_21.xyz * u_xlat24.xxx;
        u_xlat21.xyz = u_xlat16_21.xyz * vec3(_LightMapIntensity);
        u_xlat16_4.xyz = (bool(u_xlatb5)) ? u_xlat24.xyz : u_xlat21.xyz;
        u_xlat10_21.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
        u_xlat16_6.xyz = u_xlat10_21.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_6.xyz = u_xlat16_4.xyz * u_xlat16_6.xyz;
        u_xlat16_38 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
        u_xlat16_38 = min(max(u_xlat16_38, 0.0), 1.0);
#else
        u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
#endif
        u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(u_xlat16_38) + vs_COLOR1.xyz;
        u_xlat16_21.x = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
        u_xlat16_21.xyz = (-u_xlat16_6.xyz) + u_xlat16_21.xxx;
        u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_21.xyz + u_xlat16_6.xyz;
        u_xlat16_3.xyz = u_xlat16_1.xyz;
        u_xlat16_3.w = _BloomFactor;
        u_xlat16_1.xyz = u_xlat16_1.xyz;
    } else {
        u_xlat16_1.x = float(0.0);
        u_xlat16_1.y = float(0.0);
        u_xlat16_1.z = float(0.0);
    //ENDIF
    }
    if(u_xlati2.x == 0) {
        u_xlat16_21.x = u_xlat16_0 * 0.0500000007 + _UMin;
        u_xlat16_21.x = u_xlat16_0 * 0.0250000004 + u_xlat16_21.x;
        u_xlat21.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_21.x;
        u_xlat21.x = u_xlat16_19 * _ScaleTime + u_xlat16_21.x;
        u_xlat21.xy = u_xlat21.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat21.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat21.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb21 = !!(u_xlat21.x>=vs_TEXCOORD0.x);
#else
        u_xlatb21 = u_xlat21.x>=vs_TEXCOORD0.x;
#endif
        u_xlati2.y = int(uint(u_xlatb21) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati2.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_40 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_38 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_6.x = u_xlat16_38 + u_xlat16_38;
            u_xlat16_6.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_6.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_6.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_40) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb40 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb40 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat59 = _Time.y * _Speed;
            u_xlat59 = fract(u_xlat59);
            u_xlat59 = u_xlat59 + -0.5;
            u_xlat59 = abs(u_xlat59) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat59) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_6.xyz = (bool(u_xlatb40)) ? u_xlat7.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * _Color.xyz;
            u_xlat16_8.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_8.xyz;
            u_xlat16_63 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_63 = min(max(u_xlat16_63, 0.0), 1.0);
#else
            u_xlat16_63 = clamp(u_xlat16_63, 0.0, 1.0);
#endif
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(u_xlat16_63) + vs_COLOR1.xyz;
            u_xlat16_40 = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_5.xyz = (-u_xlat16_6.xyz) + vec3(u_xlat16_40);
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_5.xyz + u_xlat16_6.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati2.y;
    } else {
        u_xlati2.y = -1;
    //ENDIF
    }
    u_xlati5.xy = ~u_xlati2.yx;
    u_xlati5.x = int(uint(u_xlati5.y) & uint(u_xlati5.x));
    if(u_xlati5.x != 0) {
        u_xlat16_7.x = u_xlat16_0 * 0.100000001 + _UMin;
        u_xlat16_7.x = u_xlat16_0 * 0.0250000004 + u_xlat16_7.x;
        u_xlat7.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_7.x;
        u_xlat7.x = u_xlat16_19 * _ScaleTime + u_xlat16_7.x;
        u_xlat7.xy = u_xlat7.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb26 = !!(vs_TEXCOORD0.x>=u_xlat7.y);
#else
        u_xlatb26 = vs_TEXCOORD0.x>=u_xlat7.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb7 = !!(u_xlat7.x>=vs_TEXCOORD0.x);
#else
        u_xlatb7 = u_xlat7.x>=vs_TEXCOORD0.x;
#endif
        u_xlati7 = int(uint(u_xlatb7) * 0xffffffffu & uint(u_xlatb26) * 0xffffffffu);
        if(u_xlati7 != 0) {
            u_xlat10_26.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_9 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_6.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_8.x = u_xlat16_6.x + u_xlat16_6.x;
            u_xlat16_8.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_8.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_28.xyz = texture(_EnvTex, u_xlat16_8.xyz).xyz;
            u_xlat16_9.xyz = vec3(u_xlat10_9) * u_xlat10_28.xyz;
            u_xlat16_9.xyz = u_xlat16_9.xyz * vec3(_Reflectivity);
            u_xlat16_26.xyz = u_xlat10_26.xyz * _Color.xyz + u_xlat16_9.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb9 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb9 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28.x = _Time.y * _Speed;
            u_xlat28.x = fract(u_xlat28.x);
            u_xlat28.x = u_xlat28.x + -0.5;
            u_xlat28.x = abs(u_xlat28.x) * _Magnitude + _MinValue;
            u_xlat28.xyz = u_xlat16_26.xyz * u_xlat28.xxx;
            u_xlat26.xyz = u_xlat16_26.xyz * vec3(_LightMapIntensity);
            u_xlat16_8.xyz = (bool(u_xlatb9)) ? u_xlat28.xyz : u_xlat26.xyz;
            u_xlat10_26.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_8.xyz = u_xlat16_8.xyz * _Color.xyz;
            u_xlat16_10.xyz = u_xlat10_26.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_8.xyz * u_xlat16_10.xyz;
            u_xlat16_65 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_65 = min(max(u_xlat16_65, 0.0), 1.0);
#else
            u_xlat16_65 = clamp(u_xlat16_65, 0.0, 1.0);
#endif
            u_xlat16_8.xyz = u_xlat16_8.xyz * vec3(u_xlat16_65) + vs_COLOR1.xyz;
            u_xlat16_26.x = dot(u_xlat16_8.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_9.xyz = (-u_xlat16_8.xyz) + u_xlat16_26.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_9.xyz + u_xlat16_8.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati7;
    } else {
        u_xlati7 = -1;
    //ENDIF
    }
    u_xlati9 = ~u_xlati7;
    u_xlati28 = ~u_xlati2.x;
    u_xlati9 = int(uint(u_xlati28) & uint(u_xlati9));
    if(u_xlati9 != 0) {
        u_xlat16_11 = u_xlat16_0 * 0.150000006 + _UMin;
        u_xlat16_11 = u_xlat16_0 * 0.0250000004 + u_xlat16_11;
        u_xlat11.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_11;
        u_xlat11.x = u_xlat16_19 * _ScaleTime + u_xlat16_11;
        u_xlat11.xy = u_xlat11.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb30 = !!(vs_TEXCOORD0.x>=u_xlat11.y);
#else
        u_xlatb30 = vs_TEXCOORD0.x>=u_xlat11.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb11 = !!(u_xlat11.x>=vs_TEXCOORD0.x);
#else
        u_xlatb11 = u_xlat11.x>=vs_TEXCOORD0.x;
#endif
        u_xlati11 = int(uint(u_xlatb11) * 0xffffffffu & uint(u_xlatb30) * 0xffffffffu);
        if(u_xlati11 != 0) {
            u_xlat10_30.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_12 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_8.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_10.x = u_xlat16_8.x + u_xlat16_8.x;
            u_xlat16_10.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_10.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_31.xyz = texture(_EnvTex, u_xlat16_10.xyz).xyz;
            u_xlat16_12.xyz = vec3(u_xlat10_12) * u_xlat10_31.xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(_Reflectivity);
            u_xlat16_30.xyz = u_xlat10_30.xyz * _Color.xyz + u_xlat16_12.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb12 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb12 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat31.x = _Time.y * _Speed;
            u_xlat31.x = fract(u_xlat31.x);
            u_xlat31.x = u_xlat31.x + -0.5;
            u_xlat31.x = abs(u_xlat31.x) * _Magnitude + _MinValue;
            u_xlat31.xyz = u_xlat16_30.xyz * u_xlat31.xxx;
            u_xlat30.xyz = u_xlat16_30.xyz * vec3(_LightMapIntensity);
            u_xlat16_10.xyz = (bool(u_xlatb12)) ? u_xlat31.xyz : u_xlat30.xyz;
            u_xlat10_30.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_10.xyz = u_xlat16_10.xyz * _Color.xyz;
            u_xlat16_13.xyz = u_xlat10_30.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_10.xyz = u_xlat16_10.xyz * u_xlat16_13.xyz;
            u_xlat16_67 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_67 = min(max(u_xlat16_67, 0.0), 1.0);
#else
            u_xlat16_67 = clamp(u_xlat16_67, 0.0, 1.0);
#endif
            u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(u_xlat16_67) + vs_COLOR1.xyz;
            u_xlat16_30.x = dot(u_xlat16_10.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_12.xyz = (-u_xlat16_10.xyz) + u_xlat16_30.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_12.xyz + u_xlat16_10.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati11;
    } else {
        u_xlati11 = -1;
    //ENDIF
    }
    u_xlati12 = ~u_xlati11;
    u_xlati31 = ~u_xlati2.x;
    u_xlati12 = int(uint(u_xlati31) & uint(u_xlati12));
    if(u_xlati12 != 0) {
        u_xlat16_14 = u_xlat16_0 * 0.200000003 + _UMin;
        u_xlat16_14 = u_xlat16_0 * 0.0250000004 + u_xlat16_14;
        u_xlat14.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_14;
        u_xlat14.x = u_xlat16_19 * _ScaleTime + u_xlat16_14;
        u_xlat14.xy = u_xlat14.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb33 = !!(vs_TEXCOORD0.x>=u_xlat14.y);
#else
        u_xlatb33 = vs_TEXCOORD0.x>=u_xlat14.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb14 = !!(u_xlat14.x>=vs_TEXCOORD0.x);
#else
        u_xlatb14 = u_xlat14.x>=vs_TEXCOORD0.x;
#endif
        u_xlati14 = int(uint(u_xlatb14) * 0xffffffffu & uint(u_xlatb33) * 0xffffffffu);
        if(u_xlati14 != 0) {
            u_xlat10_33.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_15 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_10.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_10.x + u_xlat16_10.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_34.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_15.xyz = vec3(u_xlat10_15) * u_xlat10_34.xyz;
            u_xlat16_15.xyz = u_xlat16_15.xyz * vec3(_Reflectivity);
            u_xlat16_33.xyz = u_xlat10_33.xyz * _Color.xyz + u_xlat16_15.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb15 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb15 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat34.x = _Time.y * _Speed;
            u_xlat34.x = fract(u_xlat34.x);
            u_xlat34.x = u_xlat34.x + -0.5;
            u_xlat34.x = abs(u_xlat34.x) * _Magnitude + _MinValue;
            u_xlat34.xyz = u_xlat16_33.xyz * u_xlat34.xxx;
            u_xlat33.xyz = u_xlat16_33.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb15)) ? u_xlat34.xyz : u_xlat33.xyz;
            u_xlat10_33.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_33.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_33.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_15.xyz = (-u_xlat16_13.xyz) + u_xlat16_33.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_15.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati14;
    } else {
        u_xlati14 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati14;
    u_xlati34 = ~u_xlati2.x;
    u_xlati15 = int(uint(u_xlati34) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.25 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.300000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.349999994 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.400000006 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.450000018 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.5 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.550000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.600000024 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.650000036 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.699999988 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.75 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.800000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.850000024 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.900000036 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.949999988 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati2.x = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati2.x != 0) {
            u_xlat10_17.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_74 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_18.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = vec3(u_xlat10_74) * u_xlat10_18.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_17.xyz = u_xlat10_17.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb74 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb74 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat18.x = _Time.y * _Speed;
            u_xlat18.x = fract(u_xlat18.x);
            u_xlat18.x = u_xlat18.x + -0.5;
            u_xlat18.x = abs(u_xlat18.x) * _Magnitude + _MinValue;
            u_xlat18.xyz = u_xlat16_17.xyz * u_xlat18.xxx;
            u_xlat17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb74)) ? u_xlat18.xyz : u_xlat17.xyz;
            u_xlat10_17.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_17.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_17.xyz = (-u_xlat16_13.xyz) + u_xlat16_17.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_17.xyz + u_xlat16_13.xyz;
            SV_Target0.xyz = u_xlat16_1.xyz;
            SV_Target0.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati2.x != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_1.w = _BloomFactor;
    SV_Target0 = u_xlat16_1;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LUMINANCE" "FOG_HEIGHT" "_LightMap_ON" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _HeigtFogParams;
uniform 	vec4 _HeigtFogRamp;
uniform 	vec4 _HeigtFogColBase;
uniform 	vec4 _HeigtFogColDelta;
uniform 	vec4 _HeigtFogColParams;
uniform 	vec4 _HeigtFogRadialCol;
uniform 	vec4 _Mihoyo_FogColor;
uniform 	vec4 _PropertyLightmapTexTS;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec2 u_xlat5;
float u_xlat6;
bool u_xlatb6;
mediump float u_xlat16_9;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat18;
float u_xlat19;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD1.xy * _PropertyLightmapTexTS.xy + _PropertyLightmapTexTS.zw;
    vs_TEXCOORD1.xy = u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat2.y = u_xlat1.y;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat5.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat2.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat5.y = u_xlat16_4.x;
    u_xlat2.z = dot(u_xlat5.xy, u_xlat1.xz);
    vs_TEXCOORD3.xyz = u_xlat2.xyz;
    u_xlat18 = u_xlat0.y * _HeigtFogColParams.x + _HeigtFogColParams.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
    u_xlat16_3 = (-u_xlat18) + 2.0;
    u_xlat16_3 = u_xlat18 * u_xlat16_3;
    u_xlat1.xyz = vec3(u_xlat16_3) * _HeigtFogColDelta.xyz + _HeigtFogColBase.xyz;
    u_xlat2.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol.xyz;
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = u_xlat0.y * _HeigtFogParams.x;
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat12.x = u_xlat0.x + (-_HeigtFogRamp.w);
    u_xlat12.x = u_xlat12.x * _HeigtFogColParams.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat12.x = min(max(u_xlat12.x, 0.0), 1.0);
#else
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
#endif
    u_xlat1.xyz = u_xlat12.xxx * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat12.x = _ProjectionParams.z * 0.999899983;
#ifdef UNITY_ADRENO_ES3
    u_xlatb12 = !!(u_xlat0.x>=u_xlat12.x);
#else
    u_xlatb12 = u_xlat0.x>=u_xlat12.x;
#endif
    u_xlat18 = u_xlat0.x * _HeigtFogParams.z + _HeigtFogParams.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat19 = (-u_xlat18) + 2.0;
    u_xlat18 = u_xlat18 * u_xlat19;
    u_xlat19 = u_xlat18 * _HeigtFogColDelta.w;
    u_xlat12.x = (u_xlatb12) ? u_xlat19 : u_xlat18;
    u_xlat12.x = log2(u_xlat12.x);
    u_xlat12.x = u_xlat12.x * _Mihoyo_FogColor.w;
    u_xlat12.x = exp2(u_xlat12.x);
    u_xlat12.x = min(u_xlat12.x, _HeigtFogColBase.w);
    u_xlat1.xyz = u_xlat12.xxx * u_xlat1.xyz;
    u_xlat18 = u_xlat6 * -1.44269502;
    u_xlat12.y = exp2(u_xlat18);
    u_xlat12.xy = (-u_xlat12.xy) + vec2(1.0, 1.0);
    u_xlat18 = u_xlat12.y / u_xlat6;
#ifdef UNITY_ADRENO_ES3
    u_xlatb6 = !!(0.00999999978<abs(u_xlat6));
#else
    u_xlatb6 = 0.00999999978<abs(u_xlat6);
#endif
    u_xlat16_3 = (u_xlatb6) ? u_xlat18 : 1.0;
    u_xlat6 = u_xlat0.x * _HeigtFogParams.y;
    u_xlat0.x = u_xlat0.x * _HeigtFogRamp.x + _HeigtFogRamp.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat16_3 = u_xlat6 * u_xlat16_3;
    u_xlat16_3 = exp2((-u_xlat16_3));
    u_xlat16_3 = min(u_xlat16_3, 1.0);
    u_xlat16_3 = (-u_xlat16_3) + 1.0;
    u_xlat16_9 = (-u_xlat0.x) + 2.0;
    u_xlat16_9 = u_xlat0.x * u_xlat16_9;
    u_xlat0.x = u_xlat16_9 * _HeigtFogRamp.z + (-_HeigtFogRamp.z);
    u_xlat0.x = u_xlat0.x + 1.0;
    u_xlat16_3 = u_xlat0.x * u_xlat16_3;
    u_xlat0.x = min(u_xlat16_3, _HeigtFogColBase.w);
    u_xlat6 = (-u_xlat0.x) + 1.0;
    u_xlat1.xyz = vec3(u_xlat6) * u_xlat1.xyz;
    u_xlat2.w = u_xlat6 * u_xlat12.x;
    u_xlat2.xyz = _Mihoyo_FogColor.xyz * u_xlat0.xxx + u_xlat1.xyz;
    vs_COLOR1 = u_xlat2;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform 	mediump float _LumiFactor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform lowp sampler2D _PropertyLightmapTex;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump float u_xlat16_0;
vec2 u_xlat1;
mediump vec4 u_xlat16_1;
bool u_xlatb1;
ivec2 u_xlati2;
mediump vec4 u_xlat16_3;
lowp float u_xlat10_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
ivec2 u_xlati5;
bool u_xlatb5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
lowp vec3 u_xlat10_7;
int u_xlati7;
bool u_xlatb7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
lowp float u_xlat10_9;
int u_xlati9;
bool u_xlatb9;
mediump vec3 u_xlat16_10;
vec2 u_xlat11;
mediump float u_xlat16_11;
int u_xlati11;
bool u_xlatb11;
mediump vec3 u_xlat16_12;
lowp float u_xlat10_12;
int u_xlati12;
bool u_xlatb12;
mediump vec3 u_xlat16_13;
vec2 u_xlat14;
mediump float u_xlat16_14;
int u_xlati14;
bool u_xlatb14;
mediump vec3 u_xlat16_15;
lowp float u_xlat10_15;
int u_xlati15;
bool u_xlatb15;
mediump vec3 u_xlat16_16;
vec3 u_xlat17;
mediump vec3 u_xlat16_17;
lowp vec3 u_xlat10_17;
int u_xlati17;
bool u_xlatb17;
vec3 u_xlat18;
mediump vec3 u_xlat16_18;
lowp vec3 u_xlat10_18;
bool u_xlatb18;
mediump float u_xlat16_19;
bool u_xlatb20;
vec3 u_xlat21;
mediump vec3 u_xlat16_21;
lowp vec3 u_xlat10_21;
bool u_xlatb21;
lowp vec3 u_xlat10_22;
vec3 u_xlat24;
vec3 u_xlat26;
mediump vec3 u_xlat16_26;
lowp vec3 u_xlat10_26;
bool u_xlatb26;
vec3 u_xlat28;
lowp vec3 u_xlat10_28;
int u_xlati28;
vec3 u_xlat30;
mediump vec3 u_xlat16_30;
lowp vec3 u_xlat10_30;
bool u_xlatb30;
vec3 u_xlat31;
lowp vec3 u_xlat10_31;
int u_xlati31;
vec3 u_xlat33;
mediump vec3 u_xlat16_33;
lowp vec3 u_xlat10_33;
bool u_xlatb33;
vec3 u_xlat34;
lowp vec3 u_xlat10_34;
int u_xlati34;
vec3 u_xlat36;
mediump vec3 u_xlat16_36;
lowp vec3 u_xlat10_36;
int u_xlati36;
bool u_xlatb36;
vec3 u_xlat37;
lowp vec3 u_xlat10_37;
mediump float u_xlat16_38;
mediump float u_xlat16_40;
lowp float u_xlat10_40;
bool u_xlatb40;
float u_xlat59;
mediump float u_xlat16_63;
mediump float u_xlat16_65;
mediump float u_xlat16_67;
mediump float u_xlat16_70;
lowp float u_xlat10_74;
bool u_xlatb74;
void main()
{
    u_xlat16_0 = (-_UMin) + _UMax;
    u_xlat16_19 = u_xlat16_0 * 0.0250000004;
    u_xlat16_1.x = u_xlat16_0 * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_1.x;
    u_xlat1.x = u_xlat16_19 * _ScaleTime + u_xlat16_1.x;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb20 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb20 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati2.x = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb20) * 0xffffffffu);
    if(u_xlati2.x != 0) {
        u_xlat10_21.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_3 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_38 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_38 = u_xlat16_38 + u_xlat16_38;
        u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_38)) + vs_TEXCOORD3.xyz;
        u_xlat10_22.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
        u_xlat16_3.xyz = vec3(u_xlat10_3) * u_xlat10_22.xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_Reflectivity);
        u_xlat16_21.xyz = u_xlat10_21.xyz * _Color.xyz + u_xlat16_3.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat24.x = _Time.y * _Speed;
        u_xlat24.x = fract(u_xlat24.x);
        u_xlat24.x = u_xlat24.x + -0.5;
        u_xlat24.x = abs(u_xlat24.x) * _Magnitude + _MinValue;
        u_xlat24.xyz = u_xlat16_21.xyz * u_xlat24.xxx;
        u_xlat21.xyz = u_xlat16_21.xyz * vec3(_LightMapIntensity);
        u_xlat16_4.xyz = (bool(u_xlatb5)) ? u_xlat24.xyz : u_xlat21.xyz;
        u_xlat10_21.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
        u_xlat16_6.xyz = u_xlat10_21.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_6.xyz = u_xlat16_4.xyz * u_xlat16_6.xyz;
        u_xlat16_38 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
        u_xlat16_38 = min(max(u_xlat16_38, 0.0), 1.0);
#else
        u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
#endif
        u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(u_xlat16_38) + vs_COLOR1.xyz;
        u_xlat16_21.x = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
        u_xlat16_21.xyz = (-u_xlat16_6.xyz) + u_xlat16_21.xxx;
        u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_21.xyz + u_xlat16_6.xyz;
        u_xlat16_3.xyz = u_xlat16_1.xyz;
        u_xlat16_3.w = _BloomFactor;
        u_xlat16_1.xyz = u_xlat16_1.xyz;
    } else {
        u_xlat16_1.x = float(0.0);
        u_xlat16_1.y = float(0.0);
        u_xlat16_1.z = float(0.0);
    //ENDIF
    }
    if(u_xlati2.x == 0) {
        u_xlat16_21.x = u_xlat16_0 * 0.0500000007 + _UMin;
        u_xlat16_21.x = u_xlat16_0 * 0.0250000004 + u_xlat16_21.x;
        u_xlat21.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_21.x;
        u_xlat21.x = u_xlat16_19 * _ScaleTime + u_xlat16_21.x;
        u_xlat21.xy = u_xlat21.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat21.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat21.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb21 = !!(u_xlat21.x>=vs_TEXCOORD0.x);
#else
        u_xlatb21 = u_xlat21.x>=vs_TEXCOORD0.x;
#endif
        u_xlati2.y = int(uint(u_xlatb21) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati2.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_40 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_38 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_6.x = u_xlat16_38 + u_xlat16_38;
            u_xlat16_6.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_6.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_6.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_40) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb40 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb40 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat59 = _Time.y * _Speed;
            u_xlat59 = fract(u_xlat59);
            u_xlat59 = u_xlat59 + -0.5;
            u_xlat59 = abs(u_xlat59) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat59) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_6.xyz = (bool(u_xlatb40)) ? u_xlat7.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * _Color.xyz;
            u_xlat16_8.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_8.xyz;
            u_xlat16_63 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_63 = min(max(u_xlat16_63, 0.0), 1.0);
#else
            u_xlat16_63 = clamp(u_xlat16_63, 0.0, 1.0);
#endif
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(u_xlat16_63) + vs_COLOR1.xyz;
            u_xlat16_40 = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_5.xyz = (-u_xlat16_6.xyz) + vec3(u_xlat16_40);
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_5.xyz + u_xlat16_6.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati2.y;
    } else {
        u_xlati2.y = -1;
    //ENDIF
    }
    u_xlati5.xy = ~u_xlati2.yx;
    u_xlati5.x = int(uint(u_xlati5.y) & uint(u_xlati5.x));
    if(u_xlati5.x != 0) {
        u_xlat16_7.x = u_xlat16_0 * 0.100000001 + _UMin;
        u_xlat16_7.x = u_xlat16_0 * 0.0250000004 + u_xlat16_7.x;
        u_xlat7.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_7.x;
        u_xlat7.x = u_xlat16_19 * _ScaleTime + u_xlat16_7.x;
        u_xlat7.xy = u_xlat7.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb26 = !!(vs_TEXCOORD0.x>=u_xlat7.y);
#else
        u_xlatb26 = vs_TEXCOORD0.x>=u_xlat7.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb7 = !!(u_xlat7.x>=vs_TEXCOORD0.x);
#else
        u_xlatb7 = u_xlat7.x>=vs_TEXCOORD0.x;
#endif
        u_xlati7 = int(uint(u_xlatb7) * 0xffffffffu & uint(u_xlatb26) * 0xffffffffu);
        if(u_xlati7 != 0) {
            u_xlat10_26.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_9 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_6.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_8.x = u_xlat16_6.x + u_xlat16_6.x;
            u_xlat16_8.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_8.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_28.xyz = texture(_EnvTex, u_xlat16_8.xyz).xyz;
            u_xlat16_9.xyz = vec3(u_xlat10_9) * u_xlat10_28.xyz;
            u_xlat16_9.xyz = u_xlat16_9.xyz * vec3(_Reflectivity);
            u_xlat16_26.xyz = u_xlat10_26.xyz * _Color.xyz + u_xlat16_9.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb9 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb9 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28.x = _Time.y * _Speed;
            u_xlat28.x = fract(u_xlat28.x);
            u_xlat28.x = u_xlat28.x + -0.5;
            u_xlat28.x = abs(u_xlat28.x) * _Magnitude + _MinValue;
            u_xlat28.xyz = u_xlat16_26.xyz * u_xlat28.xxx;
            u_xlat26.xyz = u_xlat16_26.xyz * vec3(_LightMapIntensity);
            u_xlat16_8.xyz = (bool(u_xlatb9)) ? u_xlat28.xyz : u_xlat26.xyz;
            u_xlat10_26.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_8.xyz = u_xlat16_8.xyz * _Color.xyz;
            u_xlat16_10.xyz = u_xlat10_26.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_8.xyz * u_xlat16_10.xyz;
            u_xlat16_65 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_65 = min(max(u_xlat16_65, 0.0), 1.0);
#else
            u_xlat16_65 = clamp(u_xlat16_65, 0.0, 1.0);
#endif
            u_xlat16_8.xyz = u_xlat16_8.xyz * vec3(u_xlat16_65) + vs_COLOR1.xyz;
            u_xlat16_26.x = dot(u_xlat16_8.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_9.xyz = (-u_xlat16_8.xyz) + u_xlat16_26.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_9.xyz + u_xlat16_8.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati7;
    } else {
        u_xlati7 = -1;
    //ENDIF
    }
    u_xlati9 = ~u_xlati7;
    u_xlati28 = ~u_xlati2.x;
    u_xlati9 = int(uint(u_xlati28) & uint(u_xlati9));
    if(u_xlati9 != 0) {
        u_xlat16_11 = u_xlat16_0 * 0.150000006 + _UMin;
        u_xlat16_11 = u_xlat16_0 * 0.0250000004 + u_xlat16_11;
        u_xlat11.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_11;
        u_xlat11.x = u_xlat16_19 * _ScaleTime + u_xlat16_11;
        u_xlat11.xy = u_xlat11.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb30 = !!(vs_TEXCOORD0.x>=u_xlat11.y);
#else
        u_xlatb30 = vs_TEXCOORD0.x>=u_xlat11.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb11 = !!(u_xlat11.x>=vs_TEXCOORD0.x);
#else
        u_xlatb11 = u_xlat11.x>=vs_TEXCOORD0.x;
#endif
        u_xlati11 = int(uint(u_xlatb11) * 0xffffffffu & uint(u_xlatb30) * 0xffffffffu);
        if(u_xlati11 != 0) {
            u_xlat10_30.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_12 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_8.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_10.x = u_xlat16_8.x + u_xlat16_8.x;
            u_xlat16_10.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_10.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_31.xyz = texture(_EnvTex, u_xlat16_10.xyz).xyz;
            u_xlat16_12.xyz = vec3(u_xlat10_12) * u_xlat10_31.xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(_Reflectivity);
            u_xlat16_30.xyz = u_xlat10_30.xyz * _Color.xyz + u_xlat16_12.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb12 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb12 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat31.x = _Time.y * _Speed;
            u_xlat31.x = fract(u_xlat31.x);
            u_xlat31.x = u_xlat31.x + -0.5;
            u_xlat31.x = abs(u_xlat31.x) * _Magnitude + _MinValue;
            u_xlat31.xyz = u_xlat16_30.xyz * u_xlat31.xxx;
            u_xlat30.xyz = u_xlat16_30.xyz * vec3(_LightMapIntensity);
            u_xlat16_10.xyz = (bool(u_xlatb12)) ? u_xlat31.xyz : u_xlat30.xyz;
            u_xlat10_30.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_10.xyz = u_xlat16_10.xyz * _Color.xyz;
            u_xlat16_13.xyz = u_xlat10_30.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_10.xyz = u_xlat16_10.xyz * u_xlat16_13.xyz;
            u_xlat16_67 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_67 = min(max(u_xlat16_67, 0.0), 1.0);
#else
            u_xlat16_67 = clamp(u_xlat16_67, 0.0, 1.0);
#endif
            u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(u_xlat16_67) + vs_COLOR1.xyz;
            u_xlat16_30.x = dot(u_xlat16_10.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_12.xyz = (-u_xlat16_10.xyz) + u_xlat16_30.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_12.xyz + u_xlat16_10.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati11;
    } else {
        u_xlati11 = -1;
    //ENDIF
    }
    u_xlati12 = ~u_xlati11;
    u_xlati31 = ~u_xlati2.x;
    u_xlati12 = int(uint(u_xlati31) & uint(u_xlati12));
    if(u_xlati12 != 0) {
        u_xlat16_14 = u_xlat16_0 * 0.200000003 + _UMin;
        u_xlat16_14 = u_xlat16_0 * 0.0250000004 + u_xlat16_14;
        u_xlat14.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_14;
        u_xlat14.x = u_xlat16_19 * _ScaleTime + u_xlat16_14;
        u_xlat14.xy = u_xlat14.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb33 = !!(vs_TEXCOORD0.x>=u_xlat14.y);
#else
        u_xlatb33 = vs_TEXCOORD0.x>=u_xlat14.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb14 = !!(u_xlat14.x>=vs_TEXCOORD0.x);
#else
        u_xlatb14 = u_xlat14.x>=vs_TEXCOORD0.x;
#endif
        u_xlati14 = int(uint(u_xlatb14) * 0xffffffffu & uint(u_xlatb33) * 0xffffffffu);
        if(u_xlati14 != 0) {
            u_xlat10_33.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_15 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_10.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_10.x + u_xlat16_10.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_34.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_15.xyz = vec3(u_xlat10_15) * u_xlat10_34.xyz;
            u_xlat16_15.xyz = u_xlat16_15.xyz * vec3(_Reflectivity);
            u_xlat16_33.xyz = u_xlat10_33.xyz * _Color.xyz + u_xlat16_15.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb15 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb15 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat34.x = _Time.y * _Speed;
            u_xlat34.x = fract(u_xlat34.x);
            u_xlat34.x = u_xlat34.x + -0.5;
            u_xlat34.x = abs(u_xlat34.x) * _Magnitude + _MinValue;
            u_xlat34.xyz = u_xlat16_33.xyz * u_xlat34.xxx;
            u_xlat33.xyz = u_xlat16_33.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb15)) ? u_xlat34.xyz : u_xlat33.xyz;
            u_xlat10_33.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_33.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_33.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_15.xyz = (-u_xlat16_13.xyz) + u_xlat16_33.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_15.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati14;
    } else {
        u_xlati14 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati14;
    u_xlati34 = ~u_xlati2.x;
    u_xlati15 = int(uint(u_xlati34) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.25 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.300000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.349999994 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.400000006 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.450000018 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.5 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.550000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.600000024 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.650000036 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.699999988 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.75 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.800000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.850000024 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.900000036 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.949999988 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati2.x = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati2.x != 0) {
            u_xlat10_17.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_74 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_18.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = vec3(u_xlat10_74) * u_xlat10_18.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_17.xyz = u_xlat10_17.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb74 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb74 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat18.x = _Time.y * _Speed;
            u_xlat18.x = fract(u_xlat18.x);
            u_xlat18.x = u_xlat18.x + -0.5;
            u_xlat18.x = abs(u_xlat18.x) * _Magnitude + _MinValue;
            u_xlat18.xyz = u_xlat16_17.xyz * u_xlat18.xxx;
            u_xlat17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb74)) ? u_xlat18.xyz : u_xlat17.xyz;
            u_xlat10_17.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_17.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_17.xyz = (-u_xlat16_13.xyz) + u_xlat16_17.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_17.xyz + u_xlat16_13.xyz;
            SV_Target0.xyz = u_xlat16_1.xyz;
            SV_Target0.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati2.x != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_1.w = _BloomFactor;
    SV_Target0 = u_xlat16_1;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LUMINANCE" "FOG_HEIGHT" "_LightMap_ON" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _HeigtFogParams;
uniform 	vec4 _HeigtFogRamp;
uniform 	vec4 _HeigtFogColBase;
uniform 	vec4 _HeigtFogColDelta;
uniform 	vec4 _HeigtFogColParams;
uniform 	vec4 _HeigtFogRadialCol;
uniform 	vec4 _Mihoyo_FogColor;
uniform 	vec4 _PropertyLightmapTexTS;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec2 u_xlat5;
float u_xlat6;
bool u_xlatb6;
mediump float u_xlat16_9;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat18;
float u_xlat19;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD1.xy * _PropertyLightmapTexTS.xy + _PropertyLightmapTexTS.zw;
    vs_TEXCOORD1.xy = u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat2.y = u_xlat1.y;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat5.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat2.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat5.y = u_xlat16_4.x;
    u_xlat2.z = dot(u_xlat5.xy, u_xlat1.xz);
    vs_TEXCOORD3.xyz = u_xlat2.xyz;
    u_xlat18 = u_xlat0.y * _HeigtFogColParams.x + _HeigtFogColParams.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat0.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
    u_xlat16_3 = (-u_xlat18) + 2.0;
    u_xlat16_3 = u_xlat18 * u_xlat16_3;
    u_xlat1.xyz = vec3(u_xlat16_3) * _HeigtFogColDelta.xyz + _HeigtFogColBase.xyz;
    u_xlat2.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol.xyz;
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = u_xlat0.y * _HeigtFogParams.x;
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat12.x = u_xlat0.x + (-_HeigtFogRamp.w);
    u_xlat12.x = u_xlat12.x * _HeigtFogColParams.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat12.x = min(max(u_xlat12.x, 0.0), 1.0);
#else
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
#endif
    u_xlat1.xyz = u_xlat12.xxx * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat12.x = _ProjectionParams.z * 0.999899983;
#ifdef UNITY_ADRENO_ES3
    u_xlatb12 = !!(u_xlat0.x>=u_xlat12.x);
#else
    u_xlatb12 = u_xlat0.x>=u_xlat12.x;
#endif
    u_xlat18 = u_xlat0.x * _HeigtFogParams.z + _HeigtFogParams.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat19 = (-u_xlat18) + 2.0;
    u_xlat18 = u_xlat18 * u_xlat19;
    u_xlat19 = u_xlat18 * _HeigtFogColDelta.w;
    u_xlat12.x = (u_xlatb12) ? u_xlat19 : u_xlat18;
    u_xlat12.x = log2(u_xlat12.x);
    u_xlat12.x = u_xlat12.x * _Mihoyo_FogColor.w;
    u_xlat12.x = exp2(u_xlat12.x);
    u_xlat12.x = min(u_xlat12.x, _HeigtFogColBase.w);
    u_xlat1.xyz = u_xlat12.xxx * u_xlat1.xyz;
    u_xlat18 = u_xlat6 * -1.44269502;
    u_xlat12.y = exp2(u_xlat18);
    u_xlat12.xy = (-u_xlat12.xy) + vec2(1.0, 1.0);
    u_xlat18 = u_xlat12.y / u_xlat6;
#ifdef UNITY_ADRENO_ES3
    u_xlatb6 = !!(0.00999999978<abs(u_xlat6));
#else
    u_xlatb6 = 0.00999999978<abs(u_xlat6);
#endif
    u_xlat16_3 = (u_xlatb6) ? u_xlat18 : 1.0;
    u_xlat6 = u_xlat0.x * _HeigtFogParams.y;
    u_xlat0.x = u_xlat0.x * _HeigtFogRamp.x + _HeigtFogRamp.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat16_3 = u_xlat6 * u_xlat16_3;
    u_xlat16_3 = exp2((-u_xlat16_3));
    u_xlat16_3 = min(u_xlat16_3, 1.0);
    u_xlat16_3 = (-u_xlat16_3) + 1.0;
    u_xlat16_9 = (-u_xlat0.x) + 2.0;
    u_xlat16_9 = u_xlat0.x * u_xlat16_9;
    u_xlat0.x = u_xlat16_9 * _HeigtFogRamp.z + (-_HeigtFogRamp.z);
    u_xlat0.x = u_xlat0.x + 1.0;
    u_xlat16_3 = u_xlat0.x * u_xlat16_3;
    u_xlat0.x = min(u_xlat16_3, _HeigtFogColBase.w);
    u_xlat6 = (-u_xlat0.x) + 1.0;
    u_xlat1.xyz = vec3(u_xlat6) * u_xlat1.xyz;
    u_xlat2.w = u_xlat6 * u_xlat12.x;
    u_xlat2.xyz = _Mihoyo_FogColor.xyz * u_xlat0.xxx + u_xlat1.xyz;
    vs_COLOR1 = u_xlat2;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform 	mediump float _LumiFactor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform lowp sampler2D _PropertyLightmapTex;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump float u_xlat16_0;
vec2 u_xlat1;
mediump vec4 u_xlat16_1;
bool u_xlatb1;
ivec2 u_xlati2;
mediump vec4 u_xlat16_3;
lowp float u_xlat10_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
ivec2 u_xlati5;
bool u_xlatb5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
lowp vec3 u_xlat10_7;
int u_xlati7;
bool u_xlatb7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
lowp float u_xlat10_9;
int u_xlati9;
bool u_xlatb9;
mediump vec3 u_xlat16_10;
vec2 u_xlat11;
mediump float u_xlat16_11;
int u_xlati11;
bool u_xlatb11;
mediump vec3 u_xlat16_12;
lowp float u_xlat10_12;
int u_xlati12;
bool u_xlatb12;
mediump vec3 u_xlat16_13;
vec2 u_xlat14;
mediump float u_xlat16_14;
int u_xlati14;
bool u_xlatb14;
mediump vec3 u_xlat16_15;
lowp float u_xlat10_15;
int u_xlati15;
bool u_xlatb15;
mediump vec3 u_xlat16_16;
vec3 u_xlat17;
mediump vec3 u_xlat16_17;
lowp vec3 u_xlat10_17;
int u_xlati17;
bool u_xlatb17;
vec3 u_xlat18;
mediump vec3 u_xlat16_18;
lowp vec3 u_xlat10_18;
bool u_xlatb18;
mediump float u_xlat16_19;
bool u_xlatb20;
vec3 u_xlat21;
mediump vec3 u_xlat16_21;
lowp vec3 u_xlat10_21;
bool u_xlatb21;
lowp vec3 u_xlat10_22;
vec3 u_xlat24;
vec3 u_xlat26;
mediump vec3 u_xlat16_26;
lowp vec3 u_xlat10_26;
bool u_xlatb26;
vec3 u_xlat28;
lowp vec3 u_xlat10_28;
int u_xlati28;
vec3 u_xlat30;
mediump vec3 u_xlat16_30;
lowp vec3 u_xlat10_30;
bool u_xlatb30;
vec3 u_xlat31;
lowp vec3 u_xlat10_31;
int u_xlati31;
vec3 u_xlat33;
mediump vec3 u_xlat16_33;
lowp vec3 u_xlat10_33;
bool u_xlatb33;
vec3 u_xlat34;
lowp vec3 u_xlat10_34;
int u_xlati34;
vec3 u_xlat36;
mediump vec3 u_xlat16_36;
lowp vec3 u_xlat10_36;
int u_xlati36;
bool u_xlatb36;
vec3 u_xlat37;
lowp vec3 u_xlat10_37;
mediump float u_xlat16_38;
mediump float u_xlat16_40;
lowp float u_xlat10_40;
bool u_xlatb40;
float u_xlat59;
mediump float u_xlat16_63;
mediump float u_xlat16_65;
mediump float u_xlat16_67;
mediump float u_xlat16_70;
lowp float u_xlat10_74;
bool u_xlatb74;
void main()
{
    u_xlat16_0 = (-_UMin) + _UMax;
    u_xlat16_19 = u_xlat16_0 * 0.0250000004;
    u_xlat16_1.x = u_xlat16_0 * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_1.x;
    u_xlat1.x = u_xlat16_19 * _ScaleTime + u_xlat16_1.x;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb20 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb20 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati2.x = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb20) * 0xffffffffu);
    if(u_xlati2.x != 0) {
        u_xlat10_21.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_3 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_38 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_38 = u_xlat16_38 + u_xlat16_38;
        u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_38)) + vs_TEXCOORD3.xyz;
        u_xlat10_22.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
        u_xlat16_3.xyz = vec3(u_xlat10_3) * u_xlat10_22.xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_Reflectivity);
        u_xlat16_21.xyz = u_xlat10_21.xyz * _Color.xyz + u_xlat16_3.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat24.x = _Time.y * _Speed;
        u_xlat24.x = fract(u_xlat24.x);
        u_xlat24.x = u_xlat24.x + -0.5;
        u_xlat24.x = abs(u_xlat24.x) * _Magnitude + _MinValue;
        u_xlat24.xyz = u_xlat16_21.xyz * u_xlat24.xxx;
        u_xlat21.xyz = u_xlat16_21.xyz * vec3(_LightMapIntensity);
        u_xlat16_4.xyz = (bool(u_xlatb5)) ? u_xlat24.xyz : u_xlat21.xyz;
        u_xlat10_21.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
        u_xlat16_6.xyz = u_xlat10_21.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_6.xyz = u_xlat16_4.xyz * u_xlat16_6.xyz;
        u_xlat16_38 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
        u_xlat16_38 = min(max(u_xlat16_38, 0.0), 1.0);
#else
        u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
#endif
        u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(u_xlat16_38) + vs_COLOR1.xyz;
        u_xlat16_21.x = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
        u_xlat16_21.xyz = (-u_xlat16_6.xyz) + u_xlat16_21.xxx;
        u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_21.xyz + u_xlat16_6.xyz;
        u_xlat16_3.xyz = u_xlat16_1.xyz;
        u_xlat16_3.w = _BloomFactor;
        u_xlat16_1.xyz = u_xlat16_1.xyz;
    } else {
        u_xlat16_1.x = float(0.0);
        u_xlat16_1.y = float(0.0);
        u_xlat16_1.z = float(0.0);
    //ENDIF
    }
    if(u_xlati2.x == 0) {
        u_xlat16_21.x = u_xlat16_0 * 0.0500000007 + _UMin;
        u_xlat16_21.x = u_xlat16_0 * 0.0250000004 + u_xlat16_21.x;
        u_xlat21.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_21.x;
        u_xlat21.x = u_xlat16_19 * _ScaleTime + u_xlat16_21.x;
        u_xlat21.xy = u_xlat21.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat21.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat21.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb21 = !!(u_xlat21.x>=vs_TEXCOORD0.x);
#else
        u_xlatb21 = u_xlat21.x>=vs_TEXCOORD0.x;
#endif
        u_xlati2.y = int(uint(u_xlatb21) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati2.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_40 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_38 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_6.x = u_xlat16_38 + u_xlat16_38;
            u_xlat16_6.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_6.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_6.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_40) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb40 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb40 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat59 = _Time.y * _Speed;
            u_xlat59 = fract(u_xlat59);
            u_xlat59 = u_xlat59 + -0.5;
            u_xlat59 = abs(u_xlat59) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat59) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_6.xyz = (bool(u_xlatb40)) ? u_xlat7.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * _Color.xyz;
            u_xlat16_8.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_8.xyz;
            u_xlat16_63 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_63 = min(max(u_xlat16_63, 0.0), 1.0);
#else
            u_xlat16_63 = clamp(u_xlat16_63, 0.0, 1.0);
#endif
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(u_xlat16_63) + vs_COLOR1.xyz;
            u_xlat16_40 = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_5.xyz = (-u_xlat16_6.xyz) + vec3(u_xlat16_40);
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_5.xyz + u_xlat16_6.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati2.y;
    } else {
        u_xlati2.y = -1;
    //ENDIF
    }
    u_xlati5.xy = ~u_xlati2.yx;
    u_xlati5.x = int(uint(u_xlati5.y) & uint(u_xlati5.x));
    if(u_xlati5.x != 0) {
        u_xlat16_7.x = u_xlat16_0 * 0.100000001 + _UMin;
        u_xlat16_7.x = u_xlat16_0 * 0.0250000004 + u_xlat16_7.x;
        u_xlat7.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_7.x;
        u_xlat7.x = u_xlat16_19 * _ScaleTime + u_xlat16_7.x;
        u_xlat7.xy = u_xlat7.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb26 = !!(vs_TEXCOORD0.x>=u_xlat7.y);
#else
        u_xlatb26 = vs_TEXCOORD0.x>=u_xlat7.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb7 = !!(u_xlat7.x>=vs_TEXCOORD0.x);
#else
        u_xlatb7 = u_xlat7.x>=vs_TEXCOORD0.x;
#endif
        u_xlati7 = int(uint(u_xlatb7) * 0xffffffffu & uint(u_xlatb26) * 0xffffffffu);
        if(u_xlati7 != 0) {
            u_xlat10_26.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_9 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_6.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_8.x = u_xlat16_6.x + u_xlat16_6.x;
            u_xlat16_8.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_8.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_28.xyz = texture(_EnvTex, u_xlat16_8.xyz).xyz;
            u_xlat16_9.xyz = vec3(u_xlat10_9) * u_xlat10_28.xyz;
            u_xlat16_9.xyz = u_xlat16_9.xyz * vec3(_Reflectivity);
            u_xlat16_26.xyz = u_xlat10_26.xyz * _Color.xyz + u_xlat16_9.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb9 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb9 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28.x = _Time.y * _Speed;
            u_xlat28.x = fract(u_xlat28.x);
            u_xlat28.x = u_xlat28.x + -0.5;
            u_xlat28.x = abs(u_xlat28.x) * _Magnitude + _MinValue;
            u_xlat28.xyz = u_xlat16_26.xyz * u_xlat28.xxx;
            u_xlat26.xyz = u_xlat16_26.xyz * vec3(_LightMapIntensity);
            u_xlat16_8.xyz = (bool(u_xlatb9)) ? u_xlat28.xyz : u_xlat26.xyz;
            u_xlat10_26.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_8.xyz = u_xlat16_8.xyz * _Color.xyz;
            u_xlat16_10.xyz = u_xlat10_26.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_8.xyz * u_xlat16_10.xyz;
            u_xlat16_65 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_65 = min(max(u_xlat16_65, 0.0), 1.0);
#else
            u_xlat16_65 = clamp(u_xlat16_65, 0.0, 1.0);
#endif
            u_xlat16_8.xyz = u_xlat16_8.xyz * vec3(u_xlat16_65) + vs_COLOR1.xyz;
            u_xlat16_26.x = dot(u_xlat16_8.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_9.xyz = (-u_xlat16_8.xyz) + u_xlat16_26.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_9.xyz + u_xlat16_8.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati7;
    } else {
        u_xlati7 = -1;
    //ENDIF
    }
    u_xlati9 = ~u_xlati7;
    u_xlati28 = ~u_xlati2.x;
    u_xlati9 = int(uint(u_xlati28) & uint(u_xlati9));
    if(u_xlati9 != 0) {
        u_xlat16_11 = u_xlat16_0 * 0.150000006 + _UMin;
        u_xlat16_11 = u_xlat16_0 * 0.0250000004 + u_xlat16_11;
        u_xlat11.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_11;
        u_xlat11.x = u_xlat16_19 * _ScaleTime + u_xlat16_11;
        u_xlat11.xy = u_xlat11.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb30 = !!(vs_TEXCOORD0.x>=u_xlat11.y);
#else
        u_xlatb30 = vs_TEXCOORD0.x>=u_xlat11.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb11 = !!(u_xlat11.x>=vs_TEXCOORD0.x);
#else
        u_xlatb11 = u_xlat11.x>=vs_TEXCOORD0.x;
#endif
        u_xlati11 = int(uint(u_xlatb11) * 0xffffffffu & uint(u_xlatb30) * 0xffffffffu);
        if(u_xlati11 != 0) {
            u_xlat10_30.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_12 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_8.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_10.x = u_xlat16_8.x + u_xlat16_8.x;
            u_xlat16_10.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_10.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_31.xyz = texture(_EnvTex, u_xlat16_10.xyz).xyz;
            u_xlat16_12.xyz = vec3(u_xlat10_12) * u_xlat10_31.xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(_Reflectivity);
            u_xlat16_30.xyz = u_xlat10_30.xyz * _Color.xyz + u_xlat16_12.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb12 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb12 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat31.x = _Time.y * _Speed;
            u_xlat31.x = fract(u_xlat31.x);
            u_xlat31.x = u_xlat31.x + -0.5;
            u_xlat31.x = abs(u_xlat31.x) * _Magnitude + _MinValue;
            u_xlat31.xyz = u_xlat16_30.xyz * u_xlat31.xxx;
            u_xlat30.xyz = u_xlat16_30.xyz * vec3(_LightMapIntensity);
            u_xlat16_10.xyz = (bool(u_xlatb12)) ? u_xlat31.xyz : u_xlat30.xyz;
            u_xlat10_30.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_10.xyz = u_xlat16_10.xyz * _Color.xyz;
            u_xlat16_13.xyz = u_xlat10_30.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_10.xyz = u_xlat16_10.xyz * u_xlat16_13.xyz;
            u_xlat16_67 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_67 = min(max(u_xlat16_67, 0.0), 1.0);
#else
            u_xlat16_67 = clamp(u_xlat16_67, 0.0, 1.0);
#endif
            u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(u_xlat16_67) + vs_COLOR1.xyz;
            u_xlat16_30.x = dot(u_xlat16_10.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_12.xyz = (-u_xlat16_10.xyz) + u_xlat16_30.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_12.xyz + u_xlat16_10.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati11;
    } else {
        u_xlati11 = -1;
    //ENDIF
    }
    u_xlati12 = ~u_xlati11;
    u_xlati31 = ~u_xlati2.x;
    u_xlati12 = int(uint(u_xlati31) & uint(u_xlati12));
    if(u_xlati12 != 0) {
        u_xlat16_14 = u_xlat16_0 * 0.200000003 + _UMin;
        u_xlat16_14 = u_xlat16_0 * 0.0250000004 + u_xlat16_14;
        u_xlat14.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_14;
        u_xlat14.x = u_xlat16_19 * _ScaleTime + u_xlat16_14;
        u_xlat14.xy = u_xlat14.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb33 = !!(vs_TEXCOORD0.x>=u_xlat14.y);
#else
        u_xlatb33 = vs_TEXCOORD0.x>=u_xlat14.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb14 = !!(u_xlat14.x>=vs_TEXCOORD0.x);
#else
        u_xlatb14 = u_xlat14.x>=vs_TEXCOORD0.x;
#endif
        u_xlati14 = int(uint(u_xlatb14) * 0xffffffffu & uint(u_xlatb33) * 0xffffffffu);
        if(u_xlati14 != 0) {
            u_xlat10_33.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_15 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_10.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_10.x + u_xlat16_10.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_34.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_15.xyz = vec3(u_xlat10_15) * u_xlat10_34.xyz;
            u_xlat16_15.xyz = u_xlat16_15.xyz * vec3(_Reflectivity);
            u_xlat16_33.xyz = u_xlat10_33.xyz * _Color.xyz + u_xlat16_15.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb15 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb15 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat34.x = _Time.y * _Speed;
            u_xlat34.x = fract(u_xlat34.x);
            u_xlat34.x = u_xlat34.x + -0.5;
            u_xlat34.x = abs(u_xlat34.x) * _Magnitude + _MinValue;
            u_xlat34.xyz = u_xlat16_33.xyz * u_xlat34.xxx;
            u_xlat33.xyz = u_xlat16_33.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb15)) ? u_xlat34.xyz : u_xlat33.xyz;
            u_xlat10_33.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_33.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_33.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_15.xyz = (-u_xlat16_13.xyz) + u_xlat16_33.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_15.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati14;
    } else {
        u_xlati14 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati14;
    u_xlati34 = ~u_xlati2.x;
    u_xlati15 = int(uint(u_xlati34) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.25 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.300000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.349999994 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.400000006 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.450000018 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.5 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.550000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.600000024 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.650000036 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.699999988 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.75 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.800000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.850000024 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.900000036 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.949999988 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati2.x = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati2.x != 0) {
            u_xlat10_17.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_74 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_18.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = vec3(u_xlat10_74) * u_xlat10_18.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_17.xyz = u_xlat10_17.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb74 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb74 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat18.x = _Time.y * _Speed;
            u_xlat18.x = fract(u_xlat18.x);
            u_xlat18.x = u_xlat18.x + -0.5;
            u_xlat18.x = abs(u_xlat18.x) * _Magnitude + _MinValue;
            u_xlat18.xyz = u_xlat16_17.xyz * u_xlat18.xxx;
            u_xlat17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb74)) ? u_xlat18.xyz : u_xlat17.xyz;
            u_xlat10_17.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_17.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_17.xyz = (-u_xlat16_13.xyz) + u_xlat16_17.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_17.xyz + u_xlat16_13.xyz;
            SV_Target0.xyz = u_xlat16_1.xyz;
            SV_Target0.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati2.x != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_1.w = _BloomFactor;
    SV_Target0 = u_xlat16_1;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LUMINANCE" "FOG_HEIGHT" "FOG_LERP" "_LightMap_ON" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump float _LerpFactor;
uniform 	vec4 _HeigtFogParams2;
uniform 	vec4 _HeigtFogParams3;
uniform 	vec4 _HeigtFogRamp2;
uniform 	vec4 _HeigtFogRamp3;
uniform 	vec4 _HeigtFogColBase2;
uniform 	vec4 _HeigtFogColBase3;
uniform 	vec4 _HeigtFogColDelta2;
uniform 	vec4 _HeigtFogColDelta3;
uniform 	vec4 _HeigtFogColParams2;
uniform 	vec4 _HeigtFogColParams3;
uniform 	vec4 _HeigtFogRadialCol2;
uniform 	vec4 _HeigtFogRadialCol3;
uniform 	vec4 _Mihoyo_FogColor2;
uniform 	vec4 _Mihoyo_FogColor3;
uniform 	vec4 _PropertyLightmapTexTS;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
bool u_xlatb2;
vec4 u_xlat3;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec2 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat8;
mediump float u_xlat16_9;
mediump float u_xlat16_10;
float u_xlat12;
bool u_xlatb12;
float u_xlat18;
float u_xlat19;
bool u_xlatb19;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD1.xy * _PropertyLightmapTexTS.xy + _PropertyLightmapTexTS.zw;
    vs_TEXCOORD1.xy = u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat2.y = u_xlat1.y;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat5.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat2.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat5.y = u_xlat16_4.x;
    u_xlat2.z = dot(u_xlat5.xy, u_xlat1.xz);
    vs_TEXCOORD3.xyz = u_xlat2.xyz;
    u_xlat18 = u_xlat0.y * _HeigtFogColParams3.x + _HeigtFogColParams3.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat16_3 = (-u_xlat18) + 2.0;
    u_xlat16_3 = u_xlat18 * u_xlat16_3;
    u_xlat1.xyz = vec3(u_xlat16_3) * _HeigtFogColDelta3.xyz + _HeigtFogColBase3.xyz;
    u_xlat2.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol3.xyz;
    u_xlat0.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
    u_xlat6.x = u_xlat0.y * _HeigtFogColParams2.x + _HeigtFogColParams2.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat0.x = dot(u_xlat0.xzw, u_xlat0.xzw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat18 = u_xlat0.x + (-_HeigtFogRamp3.w);
    u_xlat18 = u_xlat18 * _HeigtFogColParams3.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat18 = u_xlat0.x * _HeigtFogParams3.z + _HeigtFogParams3.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat19 = (-u_xlat18) + 2.0;
    u_xlat18 = u_xlat18 * u_xlat19;
    u_xlat19 = u_xlat18 * _HeigtFogColDelta3.w;
    u_xlat2.x = _ProjectionParams.z * 0.999899983;
#ifdef UNITY_ADRENO_ES3
    u_xlatb2 = !!(u_xlat0.x>=u_xlat2.x);
#else
    u_xlatb2 = u_xlat0.x>=u_xlat2.x;
#endif
    u_xlat18 = (u_xlatb2) ? u_xlat19 : u_xlat18;
    u_xlat18 = log2(u_xlat18);
    u_xlat18 = u_xlat18 * _Mihoyo_FogColor3.w;
    u_xlat18 = exp2(u_xlat18);
    u_xlat18 = min(u_xlat18, _HeigtFogColBase3.w);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat18 = (-u_xlat18) + 1.0;
    u_xlat19 = u_xlat0.z * _HeigtFogParams3.x;
    u_xlat12 = u_xlat0.z * _HeigtFogParams2.x;
    u_xlat8.x = u_xlat19 * -1.44269502;
    u_xlat8.x = exp2(u_xlat8.x);
    u_xlat8.x = (-u_xlat8.x) + 1.0;
    u_xlat8.x = u_xlat8.x / u_xlat19;
#ifdef UNITY_ADRENO_ES3
    u_xlatb19 = !!(0.00999999978<abs(u_xlat19));
#else
    u_xlatb19 = 0.00999999978<abs(u_xlat19);
#endif
    u_xlat16_3 = (u_xlatb19) ? u_xlat8.x : 1.0;
    u_xlat19 = u_xlat0.x * _HeigtFogParams3.y;
    u_xlat16_3 = u_xlat19 * u_xlat16_3;
    u_xlat16_3 = exp2((-u_xlat16_3));
    u_xlat16_3 = min(u_xlat16_3, 1.0);
    u_xlat16_3 = (-u_xlat16_3) + 1.0;
    u_xlat19 = u_xlat0.x * _HeigtFogRamp3.x + _HeigtFogRamp3.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat19 = min(max(u_xlat19, 0.0), 1.0);
#else
    u_xlat19 = clamp(u_xlat19, 0.0, 1.0);
#endif
    u_xlat16_9 = (-u_xlat19) + 2.0;
    u_xlat16_9 = u_xlat19 * u_xlat16_9;
    u_xlat19 = u_xlat16_9 * _HeigtFogRamp3.z + (-_HeigtFogRamp3.z);
    u_xlat19 = u_xlat19 + 1.0;
    u_xlat16_3 = u_xlat19 * u_xlat16_3;
    u_xlat19 = min(u_xlat16_3, _HeigtFogColBase3.w);
    u_xlat8.x = (-u_xlat19) + 1.0;
    u_xlat1.xyz = u_xlat1.xyz * u_xlat8.xxx;
    u_xlat3.w = u_xlat18 * u_xlat8.x;
    u_xlat3.xyz = _Mihoyo_FogColor3.xyz * vec3(u_xlat19) + u_xlat1.xyz;
    u_xlat16_4.x = (-u_xlat6.x) + 2.0;
    u_xlat16_4.x = u_xlat6.x * u_xlat16_4.x;
    u_xlat1.xyz = u_xlat16_4.xxx * _HeigtFogColDelta2.xyz + _HeigtFogColBase2.xyz;
    u_xlat8.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol2.xyz;
    u_xlat6.x = u_xlat0.x + (-_HeigtFogRamp2.w);
    u_xlat6.x = u_xlat6.x * _HeigtFogColParams2.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat1.xyz = u_xlat6.xxx * u_xlat8.xyz + u_xlat1.xyz;
    u_xlat6.x = u_xlat0.x * _HeigtFogParams2.z + _HeigtFogParams2.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat18 = (-u_xlat6.x) + 2.0;
    u_xlat6.x = u_xlat18 * u_xlat6.x;
    u_xlat18 = u_xlat6.x * _HeigtFogColDelta2.w;
    u_xlat6.x = (u_xlatb2) ? u_xlat18 : u_xlat6.x;
    u_xlat6.x = log2(u_xlat6.x);
    u_xlat6.x = u_xlat6.x * _Mihoyo_FogColor2.w;
    u_xlat6.x = exp2(u_xlat6.x);
    u_xlat6.x = min(u_xlat6.x, _HeigtFogColBase2.w);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat18 = u_xlat12 * -1.44269502;
    u_xlat6.z = exp2(u_xlat18);
    u_xlat6.xz = (-u_xlat6.xz) + vec2(1.0, 1.0);
    u_xlat18 = u_xlat6.z / u_xlat12;
#ifdef UNITY_ADRENO_ES3
    u_xlatb12 = !!(0.00999999978<abs(u_xlat12));
#else
    u_xlatb12 = 0.00999999978<abs(u_xlat12);
#endif
    u_xlat16_4.x = (u_xlatb12) ? u_xlat18 : 1.0;
    u_xlat12 = u_xlat0.x * _HeigtFogParams2.y;
    u_xlat0.x = u_xlat0.x * _HeigtFogRamp2.x + _HeigtFogRamp2.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat16_4.x = u_xlat12 * u_xlat16_4.x;
    u_xlat16_4.x = exp2((-u_xlat16_4.x));
    u_xlat16_4.x = min(u_xlat16_4.x, 1.0);
    u_xlat16_4.x = (-u_xlat16_4.x) + 1.0;
    u_xlat16_10 = (-u_xlat0.x) + 2.0;
    u_xlat16_10 = u_xlat0.x * u_xlat16_10;
    u_xlat0.x = u_xlat16_10 * _HeigtFogRamp2.z + (-_HeigtFogRamp2.z);
    u_xlat0.x = u_xlat0.x + 1.0;
    u_xlat16_4.x = u_xlat0.x * u_xlat16_4.x;
    u_xlat0.x = min(u_xlat16_4.x, _HeigtFogColBase2.w);
    u_xlat12 = (-u_xlat0.x) + 1.0;
    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
    u_xlat2.w = u_xlat12 * u_xlat6.x;
    u_xlat2.xyz = _Mihoyo_FogColor2.xyz * u_xlat0.xxx + u_xlat1.xyz;
    u_xlat0 = (-u_xlat2) + u_xlat3;
    u_xlat0 = vec4(vec4(_LerpFactor, _LerpFactor, _LerpFactor, _LerpFactor)) * u_xlat0 + u_xlat2;
    vs_COLOR1 = u_xlat0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform 	mediump float _LumiFactor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform lowp sampler2D _PropertyLightmapTex;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump float u_xlat16_0;
vec2 u_xlat1;
mediump vec4 u_xlat16_1;
bool u_xlatb1;
ivec2 u_xlati2;
mediump vec4 u_xlat16_3;
lowp float u_xlat10_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
ivec2 u_xlati5;
bool u_xlatb5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
lowp vec3 u_xlat10_7;
int u_xlati7;
bool u_xlatb7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
lowp float u_xlat10_9;
int u_xlati9;
bool u_xlatb9;
mediump vec3 u_xlat16_10;
vec2 u_xlat11;
mediump float u_xlat16_11;
int u_xlati11;
bool u_xlatb11;
mediump vec3 u_xlat16_12;
lowp float u_xlat10_12;
int u_xlati12;
bool u_xlatb12;
mediump vec3 u_xlat16_13;
vec2 u_xlat14;
mediump float u_xlat16_14;
int u_xlati14;
bool u_xlatb14;
mediump vec3 u_xlat16_15;
lowp float u_xlat10_15;
int u_xlati15;
bool u_xlatb15;
mediump vec3 u_xlat16_16;
vec3 u_xlat17;
mediump vec3 u_xlat16_17;
lowp vec3 u_xlat10_17;
int u_xlati17;
bool u_xlatb17;
vec3 u_xlat18;
mediump vec3 u_xlat16_18;
lowp vec3 u_xlat10_18;
bool u_xlatb18;
mediump float u_xlat16_19;
bool u_xlatb20;
vec3 u_xlat21;
mediump vec3 u_xlat16_21;
lowp vec3 u_xlat10_21;
bool u_xlatb21;
lowp vec3 u_xlat10_22;
vec3 u_xlat24;
vec3 u_xlat26;
mediump vec3 u_xlat16_26;
lowp vec3 u_xlat10_26;
bool u_xlatb26;
vec3 u_xlat28;
lowp vec3 u_xlat10_28;
int u_xlati28;
vec3 u_xlat30;
mediump vec3 u_xlat16_30;
lowp vec3 u_xlat10_30;
bool u_xlatb30;
vec3 u_xlat31;
lowp vec3 u_xlat10_31;
int u_xlati31;
vec3 u_xlat33;
mediump vec3 u_xlat16_33;
lowp vec3 u_xlat10_33;
bool u_xlatb33;
vec3 u_xlat34;
lowp vec3 u_xlat10_34;
int u_xlati34;
vec3 u_xlat36;
mediump vec3 u_xlat16_36;
lowp vec3 u_xlat10_36;
int u_xlati36;
bool u_xlatb36;
vec3 u_xlat37;
lowp vec3 u_xlat10_37;
mediump float u_xlat16_38;
mediump float u_xlat16_40;
lowp float u_xlat10_40;
bool u_xlatb40;
float u_xlat59;
mediump float u_xlat16_63;
mediump float u_xlat16_65;
mediump float u_xlat16_67;
mediump float u_xlat16_70;
lowp float u_xlat10_74;
bool u_xlatb74;
void main()
{
    u_xlat16_0 = (-_UMin) + _UMax;
    u_xlat16_19 = u_xlat16_0 * 0.0250000004;
    u_xlat16_1.x = u_xlat16_0 * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_1.x;
    u_xlat1.x = u_xlat16_19 * _ScaleTime + u_xlat16_1.x;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb20 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb20 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati2.x = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb20) * 0xffffffffu);
    if(u_xlati2.x != 0) {
        u_xlat10_21.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_3 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_38 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_38 = u_xlat16_38 + u_xlat16_38;
        u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_38)) + vs_TEXCOORD3.xyz;
        u_xlat10_22.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
        u_xlat16_3.xyz = vec3(u_xlat10_3) * u_xlat10_22.xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_Reflectivity);
        u_xlat16_21.xyz = u_xlat10_21.xyz * _Color.xyz + u_xlat16_3.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat24.x = _Time.y * _Speed;
        u_xlat24.x = fract(u_xlat24.x);
        u_xlat24.x = u_xlat24.x + -0.5;
        u_xlat24.x = abs(u_xlat24.x) * _Magnitude + _MinValue;
        u_xlat24.xyz = u_xlat16_21.xyz * u_xlat24.xxx;
        u_xlat21.xyz = u_xlat16_21.xyz * vec3(_LightMapIntensity);
        u_xlat16_4.xyz = (bool(u_xlatb5)) ? u_xlat24.xyz : u_xlat21.xyz;
        u_xlat10_21.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
        u_xlat16_6.xyz = u_xlat10_21.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_6.xyz = u_xlat16_4.xyz * u_xlat16_6.xyz;
        u_xlat16_38 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
        u_xlat16_38 = min(max(u_xlat16_38, 0.0), 1.0);
#else
        u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
#endif
        u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(u_xlat16_38) + vs_COLOR1.xyz;
        u_xlat16_21.x = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
        u_xlat16_21.xyz = (-u_xlat16_6.xyz) + u_xlat16_21.xxx;
        u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_21.xyz + u_xlat16_6.xyz;
        u_xlat16_3.xyz = u_xlat16_1.xyz;
        u_xlat16_3.w = _BloomFactor;
        u_xlat16_1.xyz = u_xlat16_1.xyz;
    } else {
        u_xlat16_1.x = float(0.0);
        u_xlat16_1.y = float(0.0);
        u_xlat16_1.z = float(0.0);
    //ENDIF
    }
    if(u_xlati2.x == 0) {
        u_xlat16_21.x = u_xlat16_0 * 0.0500000007 + _UMin;
        u_xlat16_21.x = u_xlat16_0 * 0.0250000004 + u_xlat16_21.x;
        u_xlat21.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_21.x;
        u_xlat21.x = u_xlat16_19 * _ScaleTime + u_xlat16_21.x;
        u_xlat21.xy = u_xlat21.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat21.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat21.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb21 = !!(u_xlat21.x>=vs_TEXCOORD0.x);
#else
        u_xlatb21 = u_xlat21.x>=vs_TEXCOORD0.x;
#endif
        u_xlati2.y = int(uint(u_xlatb21) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati2.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_40 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_38 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_6.x = u_xlat16_38 + u_xlat16_38;
            u_xlat16_6.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_6.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_6.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_40) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb40 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb40 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat59 = _Time.y * _Speed;
            u_xlat59 = fract(u_xlat59);
            u_xlat59 = u_xlat59 + -0.5;
            u_xlat59 = abs(u_xlat59) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat59) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_6.xyz = (bool(u_xlatb40)) ? u_xlat7.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * _Color.xyz;
            u_xlat16_8.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_8.xyz;
            u_xlat16_63 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_63 = min(max(u_xlat16_63, 0.0), 1.0);
#else
            u_xlat16_63 = clamp(u_xlat16_63, 0.0, 1.0);
#endif
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(u_xlat16_63) + vs_COLOR1.xyz;
            u_xlat16_40 = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_5.xyz = (-u_xlat16_6.xyz) + vec3(u_xlat16_40);
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_5.xyz + u_xlat16_6.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati2.y;
    } else {
        u_xlati2.y = -1;
    //ENDIF
    }
    u_xlati5.xy = ~u_xlati2.yx;
    u_xlati5.x = int(uint(u_xlati5.y) & uint(u_xlati5.x));
    if(u_xlati5.x != 0) {
        u_xlat16_7.x = u_xlat16_0 * 0.100000001 + _UMin;
        u_xlat16_7.x = u_xlat16_0 * 0.0250000004 + u_xlat16_7.x;
        u_xlat7.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_7.x;
        u_xlat7.x = u_xlat16_19 * _ScaleTime + u_xlat16_7.x;
        u_xlat7.xy = u_xlat7.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb26 = !!(vs_TEXCOORD0.x>=u_xlat7.y);
#else
        u_xlatb26 = vs_TEXCOORD0.x>=u_xlat7.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb7 = !!(u_xlat7.x>=vs_TEXCOORD0.x);
#else
        u_xlatb7 = u_xlat7.x>=vs_TEXCOORD0.x;
#endif
        u_xlati7 = int(uint(u_xlatb7) * 0xffffffffu & uint(u_xlatb26) * 0xffffffffu);
        if(u_xlati7 != 0) {
            u_xlat10_26.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_9 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_6.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_8.x = u_xlat16_6.x + u_xlat16_6.x;
            u_xlat16_8.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_8.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_28.xyz = texture(_EnvTex, u_xlat16_8.xyz).xyz;
            u_xlat16_9.xyz = vec3(u_xlat10_9) * u_xlat10_28.xyz;
            u_xlat16_9.xyz = u_xlat16_9.xyz * vec3(_Reflectivity);
            u_xlat16_26.xyz = u_xlat10_26.xyz * _Color.xyz + u_xlat16_9.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb9 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb9 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28.x = _Time.y * _Speed;
            u_xlat28.x = fract(u_xlat28.x);
            u_xlat28.x = u_xlat28.x + -0.5;
            u_xlat28.x = abs(u_xlat28.x) * _Magnitude + _MinValue;
            u_xlat28.xyz = u_xlat16_26.xyz * u_xlat28.xxx;
            u_xlat26.xyz = u_xlat16_26.xyz * vec3(_LightMapIntensity);
            u_xlat16_8.xyz = (bool(u_xlatb9)) ? u_xlat28.xyz : u_xlat26.xyz;
            u_xlat10_26.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_8.xyz = u_xlat16_8.xyz * _Color.xyz;
            u_xlat16_10.xyz = u_xlat10_26.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_8.xyz * u_xlat16_10.xyz;
            u_xlat16_65 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_65 = min(max(u_xlat16_65, 0.0), 1.0);
#else
            u_xlat16_65 = clamp(u_xlat16_65, 0.0, 1.0);
#endif
            u_xlat16_8.xyz = u_xlat16_8.xyz * vec3(u_xlat16_65) + vs_COLOR1.xyz;
            u_xlat16_26.x = dot(u_xlat16_8.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_9.xyz = (-u_xlat16_8.xyz) + u_xlat16_26.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_9.xyz + u_xlat16_8.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati7;
    } else {
        u_xlati7 = -1;
    //ENDIF
    }
    u_xlati9 = ~u_xlati7;
    u_xlati28 = ~u_xlati2.x;
    u_xlati9 = int(uint(u_xlati28) & uint(u_xlati9));
    if(u_xlati9 != 0) {
        u_xlat16_11 = u_xlat16_0 * 0.150000006 + _UMin;
        u_xlat16_11 = u_xlat16_0 * 0.0250000004 + u_xlat16_11;
        u_xlat11.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_11;
        u_xlat11.x = u_xlat16_19 * _ScaleTime + u_xlat16_11;
        u_xlat11.xy = u_xlat11.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb30 = !!(vs_TEXCOORD0.x>=u_xlat11.y);
#else
        u_xlatb30 = vs_TEXCOORD0.x>=u_xlat11.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb11 = !!(u_xlat11.x>=vs_TEXCOORD0.x);
#else
        u_xlatb11 = u_xlat11.x>=vs_TEXCOORD0.x;
#endif
        u_xlati11 = int(uint(u_xlatb11) * 0xffffffffu & uint(u_xlatb30) * 0xffffffffu);
        if(u_xlati11 != 0) {
            u_xlat10_30.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_12 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_8.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_10.x = u_xlat16_8.x + u_xlat16_8.x;
            u_xlat16_10.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_10.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_31.xyz = texture(_EnvTex, u_xlat16_10.xyz).xyz;
            u_xlat16_12.xyz = vec3(u_xlat10_12) * u_xlat10_31.xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(_Reflectivity);
            u_xlat16_30.xyz = u_xlat10_30.xyz * _Color.xyz + u_xlat16_12.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb12 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb12 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat31.x = _Time.y * _Speed;
            u_xlat31.x = fract(u_xlat31.x);
            u_xlat31.x = u_xlat31.x + -0.5;
            u_xlat31.x = abs(u_xlat31.x) * _Magnitude + _MinValue;
            u_xlat31.xyz = u_xlat16_30.xyz * u_xlat31.xxx;
            u_xlat30.xyz = u_xlat16_30.xyz * vec3(_LightMapIntensity);
            u_xlat16_10.xyz = (bool(u_xlatb12)) ? u_xlat31.xyz : u_xlat30.xyz;
            u_xlat10_30.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_10.xyz = u_xlat16_10.xyz * _Color.xyz;
            u_xlat16_13.xyz = u_xlat10_30.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_10.xyz = u_xlat16_10.xyz * u_xlat16_13.xyz;
            u_xlat16_67 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_67 = min(max(u_xlat16_67, 0.0), 1.0);
#else
            u_xlat16_67 = clamp(u_xlat16_67, 0.0, 1.0);
#endif
            u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(u_xlat16_67) + vs_COLOR1.xyz;
            u_xlat16_30.x = dot(u_xlat16_10.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_12.xyz = (-u_xlat16_10.xyz) + u_xlat16_30.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_12.xyz + u_xlat16_10.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati11;
    } else {
        u_xlati11 = -1;
    //ENDIF
    }
    u_xlati12 = ~u_xlati11;
    u_xlati31 = ~u_xlati2.x;
    u_xlati12 = int(uint(u_xlati31) & uint(u_xlati12));
    if(u_xlati12 != 0) {
        u_xlat16_14 = u_xlat16_0 * 0.200000003 + _UMin;
        u_xlat16_14 = u_xlat16_0 * 0.0250000004 + u_xlat16_14;
        u_xlat14.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_14;
        u_xlat14.x = u_xlat16_19 * _ScaleTime + u_xlat16_14;
        u_xlat14.xy = u_xlat14.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb33 = !!(vs_TEXCOORD0.x>=u_xlat14.y);
#else
        u_xlatb33 = vs_TEXCOORD0.x>=u_xlat14.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb14 = !!(u_xlat14.x>=vs_TEXCOORD0.x);
#else
        u_xlatb14 = u_xlat14.x>=vs_TEXCOORD0.x;
#endif
        u_xlati14 = int(uint(u_xlatb14) * 0xffffffffu & uint(u_xlatb33) * 0xffffffffu);
        if(u_xlati14 != 0) {
            u_xlat10_33.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_15 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_10.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_10.x + u_xlat16_10.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_34.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_15.xyz = vec3(u_xlat10_15) * u_xlat10_34.xyz;
            u_xlat16_15.xyz = u_xlat16_15.xyz * vec3(_Reflectivity);
            u_xlat16_33.xyz = u_xlat10_33.xyz * _Color.xyz + u_xlat16_15.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb15 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb15 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat34.x = _Time.y * _Speed;
            u_xlat34.x = fract(u_xlat34.x);
            u_xlat34.x = u_xlat34.x + -0.5;
            u_xlat34.x = abs(u_xlat34.x) * _Magnitude + _MinValue;
            u_xlat34.xyz = u_xlat16_33.xyz * u_xlat34.xxx;
            u_xlat33.xyz = u_xlat16_33.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb15)) ? u_xlat34.xyz : u_xlat33.xyz;
            u_xlat10_33.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_33.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_33.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_15.xyz = (-u_xlat16_13.xyz) + u_xlat16_33.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_15.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati14;
    } else {
        u_xlati14 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati14;
    u_xlati34 = ~u_xlati2.x;
    u_xlati15 = int(uint(u_xlati34) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.25 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.300000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.349999994 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.400000006 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.450000018 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.5 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.550000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.600000024 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.650000036 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.699999988 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.75 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.800000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.850000024 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.900000036 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.949999988 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati2.x = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati2.x != 0) {
            u_xlat10_17.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_74 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_18.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = vec3(u_xlat10_74) * u_xlat10_18.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_17.xyz = u_xlat10_17.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb74 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb74 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat18.x = _Time.y * _Speed;
            u_xlat18.x = fract(u_xlat18.x);
            u_xlat18.x = u_xlat18.x + -0.5;
            u_xlat18.x = abs(u_xlat18.x) * _Magnitude + _MinValue;
            u_xlat18.xyz = u_xlat16_17.xyz * u_xlat18.xxx;
            u_xlat17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb74)) ? u_xlat18.xyz : u_xlat17.xyz;
            u_xlat10_17.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_17.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_17.xyz = (-u_xlat16_13.xyz) + u_xlat16_17.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_17.xyz + u_xlat16_13.xyz;
            SV_Target0.xyz = u_xlat16_1.xyz;
            SV_Target0.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati2.x != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_1.w = _BloomFactor;
    SV_Target0 = u_xlat16_1;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LUMINANCE" "FOG_HEIGHT" "FOG_LERP" "_LightMap_ON" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump float _LerpFactor;
uniform 	vec4 _HeigtFogParams2;
uniform 	vec4 _HeigtFogParams3;
uniform 	vec4 _HeigtFogRamp2;
uniform 	vec4 _HeigtFogRamp3;
uniform 	vec4 _HeigtFogColBase2;
uniform 	vec4 _HeigtFogColBase3;
uniform 	vec4 _HeigtFogColDelta2;
uniform 	vec4 _HeigtFogColDelta3;
uniform 	vec4 _HeigtFogColParams2;
uniform 	vec4 _HeigtFogColParams3;
uniform 	vec4 _HeigtFogRadialCol2;
uniform 	vec4 _HeigtFogRadialCol3;
uniform 	vec4 _Mihoyo_FogColor2;
uniform 	vec4 _Mihoyo_FogColor3;
uniform 	vec4 _PropertyLightmapTexTS;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
bool u_xlatb2;
vec4 u_xlat3;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec2 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat8;
mediump float u_xlat16_9;
mediump float u_xlat16_10;
float u_xlat12;
bool u_xlatb12;
float u_xlat18;
float u_xlat19;
bool u_xlatb19;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD1.xy * _PropertyLightmapTexTS.xy + _PropertyLightmapTexTS.zw;
    vs_TEXCOORD1.xy = u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat2.y = u_xlat1.y;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat5.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat2.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat5.y = u_xlat16_4.x;
    u_xlat2.z = dot(u_xlat5.xy, u_xlat1.xz);
    vs_TEXCOORD3.xyz = u_xlat2.xyz;
    u_xlat18 = u_xlat0.y * _HeigtFogColParams3.x + _HeigtFogColParams3.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat16_3 = (-u_xlat18) + 2.0;
    u_xlat16_3 = u_xlat18 * u_xlat16_3;
    u_xlat1.xyz = vec3(u_xlat16_3) * _HeigtFogColDelta3.xyz + _HeigtFogColBase3.xyz;
    u_xlat2.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol3.xyz;
    u_xlat0.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
    u_xlat6.x = u_xlat0.y * _HeigtFogColParams2.x + _HeigtFogColParams2.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat0.x = dot(u_xlat0.xzw, u_xlat0.xzw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat18 = u_xlat0.x + (-_HeigtFogRamp3.w);
    u_xlat18 = u_xlat18 * _HeigtFogColParams3.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat18 = u_xlat0.x * _HeigtFogParams3.z + _HeigtFogParams3.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat19 = (-u_xlat18) + 2.0;
    u_xlat18 = u_xlat18 * u_xlat19;
    u_xlat19 = u_xlat18 * _HeigtFogColDelta3.w;
    u_xlat2.x = _ProjectionParams.z * 0.999899983;
#ifdef UNITY_ADRENO_ES3
    u_xlatb2 = !!(u_xlat0.x>=u_xlat2.x);
#else
    u_xlatb2 = u_xlat0.x>=u_xlat2.x;
#endif
    u_xlat18 = (u_xlatb2) ? u_xlat19 : u_xlat18;
    u_xlat18 = log2(u_xlat18);
    u_xlat18 = u_xlat18 * _Mihoyo_FogColor3.w;
    u_xlat18 = exp2(u_xlat18);
    u_xlat18 = min(u_xlat18, _HeigtFogColBase3.w);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat18 = (-u_xlat18) + 1.0;
    u_xlat19 = u_xlat0.z * _HeigtFogParams3.x;
    u_xlat12 = u_xlat0.z * _HeigtFogParams2.x;
    u_xlat8.x = u_xlat19 * -1.44269502;
    u_xlat8.x = exp2(u_xlat8.x);
    u_xlat8.x = (-u_xlat8.x) + 1.0;
    u_xlat8.x = u_xlat8.x / u_xlat19;
#ifdef UNITY_ADRENO_ES3
    u_xlatb19 = !!(0.00999999978<abs(u_xlat19));
#else
    u_xlatb19 = 0.00999999978<abs(u_xlat19);
#endif
    u_xlat16_3 = (u_xlatb19) ? u_xlat8.x : 1.0;
    u_xlat19 = u_xlat0.x * _HeigtFogParams3.y;
    u_xlat16_3 = u_xlat19 * u_xlat16_3;
    u_xlat16_3 = exp2((-u_xlat16_3));
    u_xlat16_3 = min(u_xlat16_3, 1.0);
    u_xlat16_3 = (-u_xlat16_3) + 1.0;
    u_xlat19 = u_xlat0.x * _HeigtFogRamp3.x + _HeigtFogRamp3.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat19 = min(max(u_xlat19, 0.0), 1.0);
#else
    u_xlat19 = clamp(u_xlat19, 0.0, 1.0);
#endif
    u_xlat16_9 = (-u_xlat19) + 2.0;
    u_xlat16_9 = u_xlat19 * u_xlat16_9;
    u_xlat19 = u_xlat16_9 * _HeigtFogRamp3.z + (-_HeigtFogRamp3.z);
    u_xlat19 = u_xlat19 + 1.0;
    u_xlat16_3 = u_xlat19 * u_xlat16_3;
    u_xlat19 = min(u_xlat16_3, _HeigtFogColBase3.w);
    u_xlat8.x = (-u_xlat19) + 1.0;
    u_xlat1.xyz = u_xlat1.xyz * u_xlat8.xxx;
    u_xlat3.w = u_xlat18 * u_xlat8.x;
    u_xlat3.xyz = _Mihoyo_FogColor3.xyz * vec3(u_xlat19) + u_xlat1.xyz;
    u_xlat16_4.x = (-u_xlat6.x) + 2.0;
    u_xlat16_4.x = u_xlat6.x * u_xlat16_4.x;
    u_xlat1.xyz = u_xlat16_4.xxx * _HeigtFogColDelta2.xyz + _HeigtFogColBase2.xyz;
    u_xlat8.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol2.xyz;
    u_xlat6.x = u_xlat0.x + (-_HeigtFogRamp2.w);
    u_xlat6.x = u_xlat6.x * _HeigtFogColParams2.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat1.xyz = u_xlat6.xxx * u_xlat8.xyz + u_xlat1.xyz;
    u_xlat6.x = u_xlat0.x * _HeigtFogParams2.z + _HeigtFogParams2.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat18 = (-u_xlat6.x) + 2.0;
    u_xlat6.x = u_xlat18 * u_xlat6.x;
    u_xlat18 = u_xlat6.x * _HeigtFogColDelta2.w;
    u_xlat6.x = (u_xlatb2) ? u_xlat18 : u_xlat6.x;
    u_xlat6.x = log2(u_xlat6.x);
    u_xlat6.x = u_xlat6.x * _Mihoyo_FogColor2.w;
    u_xlat6.x = exp2(u_xlat6.x);
    u_xlat6.x = min(u_xlat6.x, _HeigtFogColBase2.w);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat18 = u_xlat12 * -1.44269502;
    u_xlat6.z = exp2(u_xlat18);
    u_xlat6.xz = (-u_xlat6.xz) + vec2(1.0, 1.0);
    u_xlat18 = u_xlat6.z / u_xlat12;
#ifdef UNITY_ADRENO_ES3
    u_xlatb12 = !!(0.00999999978<abs(u_xlat12));
#else
    u_xlatb12 = 0.00999999978<abs(u_xlat12);
#endif
    u_xlat16_4.x = (u_xlatb12) ? u_xlat18 : 1.0;
    u_xlat12 = u_xlat0.x * _HeigtFogParams2.y;
    u_xlat0.x = u_xlat0.x * _HeigtFogRamp2.x + _HeigtFogRamp2.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat16_4.x = u_xlat12 * u_xlat16_4.x;
    u_xlat16_4.x = exp2((-u_xlat16_4.x));
    u_xlat16_4.x = min(u_xlat16_4.x, 1.0);
    u_xlat16_4.x = (-u_xlat16_4.x) + 1.0;
    u_xlat16_10 = (-u_xlat0.x) + 2.0;
    u_xlat16_10 = u_xlat0.x * u_xlat16_10;
    u_xlat0.x = u_xlat16_10 * _HeigtFogRamp2.z + (-_HeigtFogRamp2.z);
    u_xlat0.x = u_xlat0.x + 1.0;
    u_xlat16_4.x = u_xlat0.x * u_xlat16_4.x;
    u_xlat0.x = min(u_xlat16_4.x, _HeigtFogColBase2.w);
    u_xlat12 = (-u_xlat0.x) + 1.0;
    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
    u_xlat2.w = u_xlat12 * u_xlat6.x;
    u_xlat2.xyz = _Mihoyo_FogColor2.xyz * u_xlat0.xxx + u_xlat1.xyz;
    u_xlat0 = (-u_xlat2) + u_xlat3;
    u_xlat0 = vec4(vec4(_LerpFactor, _LerpFactor, _LerpFactor, _LerpFactor)) * u_xlat0 + u_xlat2;
    vs_COLOR1 = u_xlat0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform 	mediump float _LumiFactor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform lowp sampler2D _PropertyLightmapTex;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump float u_xlat16_0;
vec2 u_xlat1;
mediump vec4 u_xlat16_1;
bool u_xlatb1;
ivec2 u_xlati2;
mediump vec4 u_xlat16_3;
lowp float u_xlat10_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
ivec2 u_xlati5;
bool u_xlatb5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
lowp vec3 u_xlat10_7;
int u_xlati7;
bool u_xlatb7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
lowp float u_xlat10_9;
int u_xlati9;
bool u_xlatb9;
mediump vec3 u_xlat16_10;
vec2 u_xlat11;
mediump float u_xlat16_11;
int u_xlati11;
bool u_xlatb11;
mediump vec3 u_xlat16_12;
lowp float u_xlat10_12;
int u_xlati12;
bool u_xlatb12;
mediump vec3 u_xlat16_13;
vec2 u_xlat14;
mediump float u_xlat16_14;
int u_xlati14;
bool u_xlatb14;
mediump vec3 u_xlat16_15;
lowp float u_xlat10_15;
int u_xlati15;
bool u_xlatb15;
mediump vec3 u_xlat16_16;
vec3 u_xlat17;
mediump vec3 u_xlat16_17;
lowp vec3 u_xlat10_17;
int u_xlati17;
bool u_xlatb17;
vec3 u_xlat18;
mediump vec3 u_xlat16_18;
lowp vec3 u_xlat10_18;
bool u_xlatb18;
mediump float u_xlat16_19;
bool u_xlatb20;
vec3 u_xlat21;
mediump vec3 u_xlat16_21;
lowp vec3 u_xlat10_21;
bool u_xlatb21;
lowp vec3 u_xlat10_22;
vec3 u_xlat24;
vec3 u_xlat26;
mediump vec3 u_xlat16_26;
lowp vec3 u_xlat10_26;
bool u_xlatb26;
vec3 u_xlat28;
lowp vec3 u_xlat10_28;
int u_xlati28;
vec3 u_xlat30;
mediump vec3 u_xlat16_30;
lowp vec3 u_xlat10_30;
bool u_xlatb30;
vec3 u_xlat31;
lowp vec3 u_xlat10_31;
int u_xlati31;
vec3 u_xlat33;
mediump vec3 u_xlat16_33;
lowp vec3 u_xlat10_33;
bool u_xlatb33;
vec3 u_xlat34;
lowp vec3 u_xlat10_34;
int u_xlati34;
vec3 u_xlat36;
mediump vec3 u_xlat16_36;
lowp vec3 u_xlat10_36;
int u_xlati36;
bool u_xlatb36;
vec3 u_xlat37;
lowp vec3 u_xlat10_37;
mediump float u_xlat16_38;
mediump float u_xlat16_40;
lowp float u_xlat10_40;
bool u_xlatb40;
float u_xlat59;
mediump float u_xlat16_63;
mediump float u_xlat16_65;
mediump float u_xlat16_67;
mediump float u_xlat16_70;
lowp float u_xlat10_74;
bool u_xlatb74;
void main()
{
    u_xlat16_0 = (-_UMin) + _UMax;
    u_xlat16_19 = u_xlat16_0 * 0.0250000004;
    u_xlat16_1.x = u_xlat16_0 * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_1.x;
    u_xlat1.x = u_xlat16_19 * _ScaleTime + u_xlat16_1.x;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb20 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb20 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati2.x = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb20) * 0xffffffffu);
    if(u_xlati2.x != 0) {
        u_xlat10_21.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_3 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_38 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_38 = u_xlat16_38 + u_xlat16_38;
        u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_38)) + vs_TEXCOORD3.xyz;
        u_xlat10_22.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
        u_xlat16_3.xyz = vec3(u_xlat10_3) * u_xlat10_22.xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_Reflectivity);
        u_xlat16_21.xyz = u_xlat10_21.xyz * _Color.xyz + u_xlat16_3.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat24.x = _Time.y * _Speed;
        u_xlat24.x = fract(u_xlat24.x);
        u_xlat24.x = u_xlat24.x + -0.5;
        u_xlat24.x = abs(u_xlat24.x) * _Magnitude + _MinValue;
        u_xlat24.xyz = u_xlat16_21.xyz * u_xlat24.xxx;
        u_xlat21.xyz = u_xlat16_21.xyz * vec3(_LightMapIntensity);
        u_xlat16_4.xyz = (bool(u_xlatb5)) ? u_xlat24.xyz : u_xlat21.xyz;
        u_xlat10_21.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
        u_xlat16_6.xyz = u_xlat10_21.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_6.xyz = u_xlat16_4.xyz * u_xlat16_6.xyz;
        u_xlat16_38 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
        u_xlat16_38 = min(max(u_xlat16_38, 0.0), 1.0);
#else
        u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
#endif
        u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(u_xlat16_38) + vs_COLOR1.xyz;
        u_xlat16_21.x = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
        u_xlat16_21.xyz = (-u_xlat16_6.xyz) + u_xlat16_21.xxx;
        u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_21.xyz + u_xlat16_6.xyz;
        u_xlat16_3.xyz = u_xlat16_1.xyz;
        u_xlat16_3.w = _BloomFactor;
        u_xlat16_1.xyz = u_xlat16_1.xyz;
    } else {
        u_xlat16_1.x = float(0.0);
        u_xlat16_1.y = float(0.0);
        u_xlat16_1.z = float(0.0);
    //ENDIF
    }
    if(u_xlati2.x == 0) {
        u_xlat16_21.x = u_xlat16_0 * 0.0500000007 + _UMin;
        u_xlat16_21.x = u_xlat16_0 * 0.0250000004 + u_xlat16_21.x;
        u_xlat21.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_21.x;
        u_xlat21.x = u_xlat16_19 * _ScaleTime + u_xlat16_21.x;
        u_xlat21.xy = u_xlat21.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat21.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat21.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb21 = !!(u_xlat21.x>=vs_TEXCOORD0.x);
#else
        u_xlatb21 = u_xlat21.x>=vs_TEXCOORD0.x;
#endif
        u_xlati2.y = int(uint(u_xlatb21) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati2.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_40 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_38 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_6.x = u_xlat16_38 + u_xlat16_38;
            u_xlat16_6.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_6.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_6.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_40) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb40 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb40 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat59 = _Time.y * _Speed;
            u_xlat59 = fract(u_xlat59);
            u_xlat59 = u_xlat59 + -0.5;
            u_xlat59 = abs(u_xlat59) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat59) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_6.xyz = (bool(u_xlatb40)) ? u_xlat7.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * _Color.xyz;
            u_xlat16_8.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_8.xyz;
            u_xlat16_63 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_63 = min(max(u_xlat16_63, 0.0), 1.0);
#else
            u_xlat16_63 = clamp(u_xlat16_63, 0.0, 1.0);
#endif
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(u_xlat16_63) + vs_COLOR1.xyz;
            u_xlat16_40 = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_5.xyz = (-u_xlat16_6.xyz) + vec3(u_xlat16_40);
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_5.xyz + u_xlat16_6.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati2.y;
    } else {
        u_xlati2.y = -1;
    //ENDIF
    }
    u_xlati5.xy = ~u_xlati2.yx;
    u_xlati5.x = int(uint(u_xlati5.y) & uint(u_xlati5.x));
    if(u_xlati5.x != 0) {
        u_xlat16_7.x = u_xlat16_0 * 0.100000001 + _UMin;
        u_xlat16_7.x = u_xlat16_0 * 0.0250000004 + u_xlat16_7.x;
        u_xlat7.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_7.x;
        u_xlat7.x = u_xlat16_19 * _ScaleTime + u_xlat16_7.x;
        u_xlat7.xy = u_xlat7.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb26 = !!(vs_TEXCOORD0.x>=u_xlat7.y);
#else
        u_xlatb26 = vs_TEXCOORD0.x>=u_xlat7.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb7 = !!(u_xlat7.x>=vs_TEXCOORD0.x);
#else
        u_xlatb7 = u_xlat7.x>=vs_TEXCOORD0.x;
#endif
        u_xlati7 = int(uint(u_xlatb7) * 0xffffffffu & uint(u_xlatb26) * 0xffffffffu);
        if(u_xlati7 != 0) {
            u_xlat10_26.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_9 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_6.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_8.x = u_xlat16_6.x + u_xlat16_6.x;
            u_xlat16_8.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_8.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_28.xyz = texture(_EnvTex, u_xlat16_8.xyz).xyz;
            u_xlat16_9.xyz = vec3(u_xlat10_9) * u_xlat10_28.xyz;
            u_xlat16_9.xyz = u_xlat16_9.xyz * vec3(_Reflectivity);
            u_xlat16_26.xyz = u_xlat10_26.xyz * _Color.xyz + u_xlat16_9.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb9 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb9 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28.x = _Time.y * _Speed;
            u_xlat28.x = fract(u_xlat28.x);
            u_xlat28.x = u_xlat28.x + -0.5;
            u_xlat28.x = abs(u_xlat28.x) * _Magnitude + _MinValue;
            u_xlat28.xyz = u_xlat16_26.xyz * u_xlat28.xxx;
            u_xlat26.xyz = u_xlat16_26.xyz * vec3(_LightMapIntensity);
            u_xlat16_8.xyz = (bool(u_xlatb9)) ? u_xlat28.xyz : u_xlat26.xyz;
            u_xlat10_26.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_8.xyz = u_xlat16_8.xyz * _Color.xyz;
            u_xlat16_10.xyz = u_xlat10_26.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_8.xyz * u_xlat16_10.xyz;
            u_xlat16_65 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_65 = min(max(u_xlat16_65, 0.0), 1.0);
#else
            u_xlat16_65 = clamp(u_xlat16_65, 0.0, 1.0);
#endif
            u_xlat16_8.xyz = u_xlat16_8.xyz * vec3(u_xlat16_65) + vs_COLOR1.xyz;
            u_xlat16_26.x = dot(u_xlat16_8.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_9.xyz = (-u_xlat16_8.xyz) + u_xlat16_26.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_9.xyz + u_xlat16_8.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati7;
    } else {
        u_xlati7 = -1;
    //ENDIF
    }
    u_xlati9 = ~u_xlati7;
    u_xlati28 = ~u_xlati2.x;
    u_xlati9 = int(uint(u_xlati28) & uint(u_xlati9));
    if(u_xlati9 != 0) {
        u_xlat16_11 = u_xlat16_0 * 0.150000006 + _UMin;
        u_xlat16_11 = u_xlat16_0 * 0.0250000004 + u_xlat16_11;
        u_xlat11.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_11;
        u_xlat11.x = u_xlat16_19 * _ScaleTime + u_xlat16_11;
        u_xlat11.xy = u_xlat11.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb30 = !!(vs_TEXCOORD0.x>=u_xlat11.y);
#else
        u_xlatb30 = vs_TEXCOORD0.x>=u_xlat11.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb11 = !!(u_xlat11.x>=vs_TEXCOORD0.x);
#else
        u_xlatb11 = u_xlat11.x>=vs_TEXCOORD0.x;
#endif
        u_xlati11 = int(uint(u_xlatb11) * 0xffffffffu & uint(u_xlatb30) * 0xffffffffu);
        if(u_xlati11 != 0) {
            u_xlat10_30.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_12 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_8.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_10.x = u_xlat16_8.x + u_xlat16_8.x;
            u_xlat16_10.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_10.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_31.xyz = texture(_EnvTex, u_xlat16_10.xyz).xyz;
            u_xlat16_12.xyz = vec3(u_xlat10_12) * u_xlat10_31.xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(_Reflectivity);
            u_xlat16_30.xyz = u_xlat10_30.xyz * _Color.xyz + u_xlat16_12.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb12 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb12 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat31.x = _Time.y * _Speed;
            u_xlat31.x = fract(u_xlat31.x);
            u_xlat31.x = u_xlat31.x + -0.5;
            u_xlat31.x = abs(u_xlat31.x) * _Magnitude + _MinValue;
            u_xlat31.xyz = u_xlat16_30.xyz * u_xlat31.xxx;
            u_xlat30.xyz = u_xlat16_30.xyz * vec3(_LightMapIntensity);
            u_xlat16_10.xyz = (bool(u_xlatb12)) ? u_xlat31.xyz : u_xlat30.xyz;
            u_xlat10_30.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_10.xyz = u_xlat16_10.xyz * _Color.xyz;
            u_xlat16_13.xyz = u_xlat10_30.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_10.xyz = u_xlat16_10.xyz * u_xlat16_13.xyz;
            u_xlat16_67 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_67 = min(max(u_xlat16_67, 0.0), 1.0);
#else
            u_xlat16_67 = clamp(u_xlat16_67, 0.0, 1.0);
#endif
            u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(u_xlat16_67) + vs_COLOR1.xyz;
            u_xlat16_30.x = dot(u_xlat16_10.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_12.xyz = (-u_xlat16_10.xyz) + u_xlat16_30.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_12.xyz + u_xlat16_10.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati11;
    } else {
        u_xlati11 = -1;
    //ENDIF
    }
    u_xlati12 = ~u_xlati11;
    u_xlati31 = ~u_xlati2.x;
    u_xlati12 = int(uint(u_xlati31) & uint(u_xlati12));
    if(u_xlati12 != 0) {
        u_xlat16_14 = u_xlat16_0 * 0.200000003 + _UMin;
        u_xlat16_14 = u_xlat16_0 * 0.0250000004 + u_xlat16_14;
        u_xlat14.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_14;
        u_xlat14.x = u_xlat16_19 * _ScaleTime + u_xlat16_14;
        u_xlat14.xy = u_xlat14.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb33 = !!(vs_TEXCOORD0.x>=u_xlat14.y);
#else
        u_xlatb33 = vs_TEXCOORD0.x>=u_xlat14.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb14 = !!(u_xlat14.x>=vs_TEXCOORD0.x);
#else
        u_xlatb14 = u_xlat14.x>=vs_TEXCOORD0.x;
#endif
        u_xlati14 = int(uint(u_xlatb14) * 0xffffffffu & uint(u_xlatb33) * 0xffffffffu);
        if(u_xlati14 != 0) {
            u_xlat10_33.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_15 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_10.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_10.x + u_xlat16_10.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_34.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_15.xyz = vec3(u_xlat10_15) * u_xlat10_34.xyz;
            u_xlat16_15.xyz = u_xlat16_15.xyz * vec3(_Reflectivity);
            u_xlat16_33.xyz = u_xlat10_33.xyz * _Color.xyz + u_xlat16_15.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb15 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb15 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat34.x = _Time.y * _Speed;
            u_xlat34.x = fract(u_xlat34.x);
            u_xlat34.x = u_xlat34.x + -0.5;
            u_xlat34.x = abs(u_xlat34.x) * _Magnitude + _MinValue;
            u_xlat34.xyz = u_xlat16_33.xyz * u_xlat34.xxx;
            u_xlat33.xyz = u_xlat16_33.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb15)) ? u_xlat34.xyz : u_xlat33.xyz;
            u_xlat10_33.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_33.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_33.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_15.xyz = (-u_xlat16_13.xyz) + u_xlat16_33.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_15.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati14;
    } else {
        u_xlati14 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati14;
    u_xlati34 = ~u_xlati2.x;
    u_xlati15 = int(uint(u_xlati34) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.25 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.300000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.349999994 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.400000006 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.450000018 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.5 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.550000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.600000024 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.650000036 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.699999988 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.75 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.800000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.850000024 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.900000036 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.949999988 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati2.x = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati2.x != 0) {
            u_xlat10_17.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_74 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_18.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = vec3(u_xlat10_74) * u_xlat10_18.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_17.xyz = u_xlat10_17.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb74 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb74 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat18.x = _Time.y * _Speed;
            u_xlat18.x = fract(u_xlat18.x);
            u_xlat18.x = u_xlat18.x + -0.5;
            u_xlat18.x = abs(u_xlat18.x) * _Magnitude + _MinValue;
            u_xlat18.xyz = u_xlat16_17.xyz * u_xlat18.xxx;
            u_xlat17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb74)) ? u_xlat18.xyz : u_xlat17.xyz;
            u_xlat10_17.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_17.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_17.xyz = (-u_xlat16_13.xyz) + u_xlat16_17.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_17.xyz + u_xlat16_13.xyz;
            SV_Target0.xyz = u_xlat16_1.xyz;
            SV_Target0.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati2.x != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_1.w = _BloomFactor;
    SV_Target0 = u_xlat16_1;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LUMINANCE" "FOG_HEIGHT" "FOG_LERP" "_LightMap_ON" }
"#ifdef VERTEX
#version 300 es

uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump float _LerpFactor;
uniform 	vec4 _HeigtFogParams2;
uniform 	vec4 _HeigtFogParams3;
uniform 	vec4 _HeigtFogRamp2;
uniform 	vec4 _HeigtFogRamp3;
uniform 	vec4 _HeigtFogColBase2;
uniform 	vec4 _HeigtFogColBase3;
uniform 	vec4 _HeigtFogColDelta2;
uniform 	vec4 _HeigtFogColDelta3;
uniform 	vec4 _HeigtFogColParams2;
uniform 	vec4 _HeigtFogColParams3;
uniform 	vec4 _HeigtFogRadialCol2;
uniform 	vec4 _HeigtFogRadialCol3;
uniform 	vec4 _Mihoyo_FogColor2;
uniform 	vec4 _Mihoyo_FogColor3;
uniform 	vec4 _PropertyLightmapTexTS;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _CamDistRatio;
uniform 	mediump float _CamHeightOffset;
uniform 	mediump float _CamRotate;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in mediump vec2 in_TEXCOORD0;
in mediump vec2 in_TEXCOORD1;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out mediump vec4 vs_COLOR1;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
bool u_xlatb2;
vec4 u_xlat3;
mediump float u_xlat16_3;
mediump vec2 u_xlat16_4;
vec2 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat8;
mediump float u_xlat16_9;
mediump float u_xlat16_10;
float u_xlat12;
bool u_xlatb12;
float u_xlat18;
float u_xlat19;
bool u_xlatb19;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD1.xy * _PropertyLightmapTexTS.xy + _PropertyLightmapTexTS.zw;
    vs_TEXCOORD1.xy = u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xyz = in_NORMAL0.xyz;
    u_xlat1.xy = u_xlat0.xz + (-_WorldSpaceCameraPos.xz);
    u_xlat1.xz = (-u_xlat1.xy) * vec2(vec2(_CamDistRatio, _CamDistRatio)) + u_xlat0.xz;
    u_xlat1.y = _WorldSpaceCameraPos.y + _CamHeightOffset;
    u_xlat1.xyz = u_xlat0.xyz + (-u_xlat1.xyz);
    u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat2.y = u_xlat1.y;
    u_xlat16_3 = sin(_CamRotate);
    u_xlat16_4.x = cos(_CamRotate);
    u_xlat5.x = (-u_xlat16_3);
    u_xlat16_4.y = u_xlat16_3;
    u_xlat2.x = dot(u_xlat16_4.xy, u_xlat1.xz);
    u_xlat5.y = u_xlat16_4.x;
    u_xlat2.z = dot(u_xlat5.xy, u_xlat1.xz);
    vs_TEXCOORD3.xyz = u_xlat2.xyz;
    u_xlat18 = u_xlat0.y * _HeigtFogColParams3.x + _HeigtFogColParams3.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat16_3 = (-u_xlat18) + 2.0;
    u_xlat16_3 = u_xlat18 * u_xlat16_3;
    u_xlat1.xyz = vec3(u_xlat16_3) * _HeigtFogColDelta3.xyz + _HeigtFogColBase3.xyz;
    u_xlat2.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol3.xyz;
    u_xlat0.xzw = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);
    u_xlat6.x = u_xlat0.y * _HeigtFogColParams2.x + _HeigtFogColParams2.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat0.x = dot(u_xlat0.xzw, u_xlat0.xzw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat18 = u_xlat0.x + (-_HeigtFogRamp3.w);
    u_xlat18 = u_xlat18 * _HeigtFogColParams3.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat18 = u_xlat0.x * _HeigtFogParams3.z + _HeigtFogParams3.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat19 = (-u_xlat18) + 2.0;
    u_xlat18 = u_xlat18 * u_xlat19;
    u_xlat19 = u_xlat18 * _HeigtFogColDelta3.w;
    u_xlat2.x = _ProjectionParams.z * 0.999899983;
#ifdef UNITY_ADRENO_ES3
    u_xlatb2 = !!(u_xlat0.x>=u_xlat2.x);
#else
    u_xlatb2 = u_xlat0.x>=u_xlat2.x;
#endif
    u_xlat18 = (u_xlatb2) ? u_xlat19 : u_xlat18;
    u_xlat18 = log2(u_xlat18);
    u_xlat18 = u_xlat18 * _Mihoyo_FogColor3.w;
    u_xlat18 = exp2(u_xlat18);
    u_xlat18 = min(u_xlat18, _HeigtFogColBase3.w);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
    u_xlat18 = (-u_xlat18) + 1.0;
    u_xlat19 = u_xlat0.z * _HeigtFogParams3.x;
    u_xlat12 = u_xlat0.z * _HeigtFogParams2.x;
    u_xlat8.x = u_xlat19 * -1.44269502;
    u_xlat8.x = exp2(u_xlat8.x);
    u_xlat8.x = (-u_xlat8.x) + 1.0;
    u_xlat8.x = u_xlat8.x / u_xlat19;
#ifdef UNITY_ADRENO_ES3
    u_xlatb19 = !!(0.00999999978<abs(u_xlat19));
#else
    u_xlatb19 = 0.00999999978<abs(u_xlat19);
#endif
    u_xlat16_3 = (u_xlatb19) ? u_xlat8.x : 1.0;
    u_xlat19 = u_xlat0.x * _HeigtFogParams3.y;
    u_xlat16_3 = u_xlat19 * u_xlat16_3;
    u_xlat16_3 = exp2((-u_xlat16_3));
    u_xlat16_3 = min(u_xlat16_3, 1.0);
    u_xlat16_3 = (-u_xlat16_3) + 1.0;
    u_xlat19 = u_xlat0.x * _HeigtFogRamp3.x + _HeigtFogRamp3.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat19 = min(max(u_xlat19, 0.0), 1.0);
#else
    u_xlat19 = clamp(u_xlat19, 0.0, 1.0);
#endif
    u_xlat16_9 = (-u_xlat19) + 2.0;
    u_xlat16_9 = u_xlat19 * u_xlat16_9;
    u_xlat19 = u_xlat16_9 * _HeigtFogRamp3.z + (-_HeigtFogRamp3.z);
    u_xlat19 = u_xlat19 + 1.0;
    u_xlat16_3 = u_xlat19 * u_xlat16_3;
    u_xlat19 = min(u_xlat16_3, _HeigtFogColBase3.w);
    u_xlat8.x = (-u_xlat19) + 1.0;
    u_xlat1.xyz = u_xlat1.xyz * u_xlat8.xxx;
    u_xlat3.w = u_xlat18 * u_xlat8.x;
    u_xlat3.xyz = _Mihoyo_FogColor3.xyz * vec3(u_xlat19) + u_xlat1.xyz;
    u_xlat16_4.x = (-u_xlat6.x) + 2.0;
    u_xlat16_4.x = u_xlat6.x * u_xlat16_4.x;
    u_xlat1.xyz = u_xlat16_4.xxx * _HeigtFogColDelta2.xyz + _HeigtFogColBase2.xyz;
    u_xlat8.xyz = (-u_xlat1.xyz) + _HeigtFogRadialCol2.xyz;
    u_xlat6.x = u_xlat0.x + (-_HeigtFogRamp2.w);
    u_xlat6.x = u_xlat6.x * _HeigtFogColParams2.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat1.xyz = u_xlat6.xxx * u_xlat8.xyz + u_xlat1.xyz;
    u_xlat6.x = u_xlat0.x * _HeigtFogParams2.z + _HeigtFogParams2.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat6.x = min(max(u_xlat6.x, 0.0), 1.0);
#else
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
#endif
    u_xlat18 = (-u_xlat6.x) + 2.0;
    u_xlat6.x = u_xlat18 * u_xlat6.x;
    u_xlat18 = u_xlat6.x * _HeigtFogColDelta2.w;
    u_xlat6.x = (u_xlatb2) ? u_xlat18 : u_xlat6.x;
    u_xlat6.x = log2(u_xlat6.x);
    u_xlat6.x = u_xlat6.x * _Mihoyo_FogColor2.w;
    u_xlat6.x = exp2(u_xlat6.x);
    u_xlat6.x = min(u_xlat6.x, _HeigtFogColBase2.w);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat18 = u_xlat12 * -1.44269502;
    u_xlat6.z = exp2(u_xlat18);
    u_xlat6.xz = (-u_xlat6.xz) + vec2(1.0, 1.0);
    u_xlat18 = u_xlat6.z / u_xlat12;
#ifdef UNITY_ADRENO_ES3
    u_xlatb12 = !!(0.00999999978<abs(u_xlat12));
#else
    u_xlatb12 = 0.00999999978<abs(u_xlat12);
#endif
    u_xlat16_4.x = (u_xlatb12) ? u_xlat18 : 1.0;
    u_xlat12 = u_xlat0.x * _HeigtFogParams2.y;
    u_xlat0.x = u_xlat0.x * _HeigtFogRamp2.x + _HeigtFogRamp2.y;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat16_4.x = u_xlat12 * u_xlat16_4.x;
    u_xlat16_4.x = exp2((-u_xlat16_4.x));
    u_xlat16_4.x = min(u_xlat16_4.x, 1.0);
    u_xlat16_4.x = (-u_xlat16_4.x) + 1.0;
    u_xlat16_10 = (-u_xlat0.x) + 2.0;
    u_xlat16_10 = u_xlat0.x * u_xlat16_10;
    u_xlat0.x = u_xlat16_10 * _HeigtFogRamp2.z + (-_HeigtFogRamp2.z);
    u_xlat0.x = u_xlat0.x + 1.0;
    u_xlat16_4.x = u_xlat0.x * u_xlat16_4.x;
    u_xlat0.x = min(u_xlat16_4.x, _HeigtFogColBase2.w);
    u_xlat12 = (-u_xlat0.x) + 1.0;
    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
    u_xlat2.w = u_xlat12 * u_xlat6.x;
    u_xlat2.xyz = _Mihoyo_FogColor2.xyz * u_xlat0.xxx + u_xlat1.xyz;
    u_xlat0 = (-u_xlat2) + u_xlat3;
    u_xlat0 = vec4(vec4(_LerpFactor, _LerpFactor, _LerpFactor, _LerpFactor)) * u_xlat0 + u_xlat2;
    vs_COLOR1 = u_xlat0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp int;
uniform 	vec4 _Time;
uniform 	mediump vec4 _Color;
uniform 	float _LightMapIntensity;
uniform 	mediump vec3 _LightingColor;
uniform 	mediump float _BloomFactor;
uniform 	mediump vec4 _MainTex_ST;
uniform 	mediump float _Reflectivity;
uniform 	mediump float _Magnitude;
uniform 	mediump float _MinValue;
uniform 	mediump float _Speed;
uniform 	mediump float _ScaleTime;
uniform 	mediump float _UMin;
uniform 	mediump float _UMax;
uniform 	mediump float _LigthMapIntPingPong;
uniform 	mediump float _LumiFactor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _ReflectMaskTex;
uniform lowp samplerCube _EnvTex;
uniform lowp sampler2D _PropertyLightmapTex;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
in mediump vec4 vs_COLOR1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump float u_xlat16_0;
vec2 u_xlat1;
mediump vec4 u_xlat16_1;
bool u_xlatb1;
ivec2 u_xlati2;
mediump vec4 u_xlat16_3;
lowp float u_xlat10_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
ivec2 u_xlati5;
bool u_xlatb5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
lowp vec3 u_xlat10_7;
int u_xlati7;
bool u_xlatb7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
lowp float u_xlat10_9;
int u_xlati9;
bool u_xlatb9;
mediump vec3 u_xlat16_10;
vec2 u_xlat11;
mediump float u_xlat16_11;
int u_xlati11;
bool u_xlatb11;
mediump vec3 u_xlat16_12;
lowp float u_xlat10_12;
int u_xlati12;
bool u_xlatb12;
mediump vec3 u_xlat16_13;
vec2 u_xlat14;
mediump float u_xlat16_14;
int u_xlati14;
bool u_xlatb14;
mediump vec3 u_xlat16_15;
lowp float u_xlat10_15;
int u_xlati15;
bool u_xlatb15;
mediump vec3 u_xlat16_16;
vec3 u_xlat17;
mediump vec3 u_xlat16_17;
lowp vec3 u_xlat10_17;
int u_xlati17;
bool u_xlatb17;
vec3 u_xlat18;
mediump vec3 u_xlat16_18;
lowp vec3 u_xlat10_18;
bool u_xlatb18;
mediump float u_xlat16_19;
bool u_xlatb20;
vec3 u_xlat21;
mediump vec3 u_xlat16_21;
lowp vec3 u_xlat10_21;
bool u_xlatb21;
lowp vec3 u_xlat10_22;
vec3 u_xlat24;
vec3 u_xlat26;
mediump vec3 u_xlat16_26;
lowp vec3 u_xlat10_26;
bool u_xlatb26;
vec3 u_xlat28;
lowp vec3 u_xlat10_28;
int u_xlati28;
vec3 u_xlat30;
mediump vec3 u_xlat16_30;
lowp vec3 u_xlat10_30;
bool u_xlatb30;
vec3 u_xlat31;
lowp vec3 u_xlat10_31;
int u_xlati31;
vec3 u_xlat33;
mediump vec3 u_xlat16_33;
lowp vec3 u_xlat10_33;
bool u_xlatb33;
vec3 u_xlat34;
lowp vec3 u_xlat10_34;
int u_xlati34;
vec3 u_xlat36;
mediump vec3 u_xlat16_36;
lowp vec3 u_xlat10_36;
int u_xlati36;
bool u_xlatb36;
vec3 u_xlat37;
lowp vec3 u_xlat10_37;
mediump float u_xlat16_38;
mediump float u_xlat16_40;
lowp float u_xlat10_40;
bool u_xlatb40;
float u_xlat59;
mediump float u_xlat16_63;
mediump float u_xlat16_65;
mediump float u_xlat16_67;
mediump float u_xlat16_70;
lowp float u_xlat10_74;
bool u_xlatb74;
void main()
{
    u_xlat16_0 = (-_UMin) + _UMax;
    u_xlat16_19 = u_xlat16_0 * 0.0250000004;
    u_xlat16_1.x = u_xlat16_0 * 0.0250000004 + _UMin;
    u_xlat1.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_1.x;
    u_xlat1.x = u_xlat16_19 * _ScaleTime + u_xlat16_1.x;
    u_xlat1.xy = u_xlat1.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
    u_xlatb20 = !!(vs_TEXCOORD0.x>=u_xlat1.y);
#else
    u_xlatb20 = vs_TEXCOORD0.x>=u_xlat1.y;
#endif
#ifdef UNITY_ADRENO_ES3
    u_xlatb1 = !!(u_xlat1.x>=vs_TEXCOORD0.x);
#else
    u_xlatb1 = u_xlat1.x>=vs_TEXCOORD0.x;
#endif
    u_xlati2.x = int(uint(u_xlatb1) * 0xffffffffu & uint(u_xlatb20) * 0xffffffffu);
    if(u_xlati2.x != 0) {
        u_xlat10_21.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
        u_xlat10_3 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
        u_xlat16_38 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
        u_xlat16_38 = u_xlat16_38 + u_xlat16_38;
        u_xlat16_4.xyz = vs_TEXCOORD2.xyz * (-vec3(u_xlat16_38)) + vs_TEXCOORD3.xyz;
        u_xlat10_22.xyz = texture(_EnvTex, u_xlat16_4.xyz).xyz;
        u_xlat16_3.xyz = vec3(u_xlat10_3) * u_xlat10_22.xyz;
        u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_Reflectivity);
        u_xlat16_21.xyz = u_xlat10_21.xyz * _Color.xyz + u_xlat16_3.xyz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb5 = !!(0.0<_LigthMapIntPingPong);
#else
        u_xlatb5 = 0.0<_LigthMapIntPingPong;
#endif
        u_xlat24.x = _Time.y * _Speed;
        u_xlat24.x = fract(u_xlat24.x);
        u_xlat24.x = u_xlat24.x + -0.5;
        u_xlat24.x = abs(u_xlat24.x) * _Magnitude + _MinValue;
        u_xlat24.xyz = u_xlat16_21.xyz * u_xlat24.xxx;
        u_xlat21.xyz = u_xlat16_21.xyz * vec3(_LightMapIntensity);
        u_xlat16_4.xyz = (bool(u_xlatb5)) ? u_xlat24.xyz : u_xlat21.xyz;
        u_xlat10_21.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
        u_xlat16_4.xyz = u_xlat16_4.xyz * _Color.xyz;
        u_xlat16_6.xyz = u_xlat10_21.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
        u_xlat16_6.xyz = u_xlat16_4.xyz * u_xlat16_6.xyz;
        u_xlat16_38 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
        u_xlat16_38 = min(max(u_xlat16_38, 0.0), 1.0);
#else
        u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
#endif
        u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(u_xlat16_38) + vs_COLOR1.xyz;
        u_xlat16_21.x = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
        u_xlat16_21.xyz = (-u_xlat16_6.xyz) + u_xlat16_21.xxx;
        u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_21.xyz + u_xlat16_6.xyz;
        u_xlat16_3.xyz = u_xlat16_1.xyz;
        u_xlat16_3.w = _BloomFactor;
        u_xlat16_1.xyz = u_xlat16_1.xyz;
    } else {
        u_xlat16_1.x = float(0.0);
        u_xlat16_1.y = float(0.0);
        u_xlat16_1.z = float(0.0);
    //ENDIF
    }
    if(u_xlati2.x == 0) {
        u_xlat16_21.x = u_xlat16_0 * 0.0500000007 + _UMin;
        u_xlat16_21.x = u_xlat16_0 * 0.0250000004 + u_xlat16_21.x;
        u_xlat21.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_21.x;
        u_xlat21.x = u_xlat16_19 * _ScaleTime + u_xlat16_21.x;
        u_xlat21.xy = u_xlat21.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb40 = !!(vs_TEXCOORD0.x>=u_xlat21.y);
#else
        u_xlatb40 = vs_TEXCOORD0.x>=u_xlat21.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb21 = !!(u_xlat21.x>=vs_TEXCOORD0.x);
#else
        u_xlatb21 = u_xlat21.x>=vs_TEXCOORD0.x;
#endif
        u_xlati2.y = int(uint(u_xlatb21) * 0xffffffffu & uint(u_xlatb40) * 0xffffffffu);
        if(u_xlati2.y != 0) {
            u_xlat10_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_40 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_38 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_6.x = u_xlat16_38 + u_xlat16_38;
            u_xlat16_6.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_6.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_7.xyz = texture(_EnvTex, u_xlat16_6.xyz).xyz;
            u_xlat16_7.xyz = vec3(u_xlat10_40) * u_xlat10_7.xyz;
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Reflectivity);
            u_xlat16_5.xyz = u_xlat10_5.xyz * _Color.xyz + u_xlat16_7.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb40 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb40 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat59 = _Time.y * _Speed;
            u_xlat59 = fract(u_xlat59);
            u_xlat59 = u_xlat59 + -0.5;
            u_xlat59 = abs(u_xlat59) * _Magnitude + _MinValue;
            u_xlat7.xyz = vec3(u_xlat59) * u_xlat16_5.xyz;
            u_xlat5.xyz = u_xlat16_5.xyz * vec3(_LightMapIntensity);
            u_xlat16_6.xyz = (bool(u_xlatb40)) ? u_xlat7.xyz : u_xlat5.xyz;
            u_xlat10_5.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * _Color.xyz;
            u_xlat16_8.xyz = u_xlat10_5.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_8.xyz;
            u_xlat16_63 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_63 = min(max(u_xlat16_63, 0.0), 1.0);
#else
            u_xlat16_63 = clamp(u_xlat16_63, 0.0, 1.0);
#endif
            u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(u_xlat16_63) + vs_COLOR1.xyz;
            u_xlat16_40 = dot(u_xlat16_6.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_5.xyz = (-u_xlat16_6.xyz) + vec3(u_xlat16_40);
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_5.xyz + u_xlat16_6.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati2.y;
    } else {
        u_xlati2.y = -1;
    //ENDIF
    }
    u_xlati5.xy = ~u_xlati2.yx;
    u_xlati5.x = int(uint(u_xlati5.y) & uint(u_xlati5.x));
    if(u_xlati5.x != 0) {
        u_xlat16_7.x = u_xlat16_0 * 0.100000001 + _UMin;
        u_xlat16_7.x = u_xlat16_0 * 0.0250000004 + u_xlat16_7.x;
        u_xlat7.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_7.x;
        u_xlat7.x = u_xlat16_19 * _ScaleTime + u_xlat16_7.x;
        u_xlat7.xy = u_xlat7.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb26 = !!(vs_TEXCOORD0.x>=u_xlat7.y);
#else
        u_xlatb26 = vs_TEXCOORD0.x>=u_xlat7.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb7 = !!(u_xlat7.x>=vs_TEXCOORD0.x);
#else
        u_xlatb7 = u_xlat7.x>=vs_TEXCOORD0.x;
#endif
        u_xlati7 = int(uint(u_xlatb7) * 0xffffffffu & uint(u_xlatb26) * 0xffffffffu);
        if(u_xlati7 != 0) {
            u_xlat10_26.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_9 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_6.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_8.x = u_xlat16_6.x + u_xlat16_6.x;
            u_xlat16_8.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_8.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_28.xyz = texture(_EnvTex, u_xlat16_8.xyz).xyz;
            u_xlat16_9.xyz = vec3(u_xlat10_9) * u_xlat10_28.xyz;
            u_xlat16_9.xyz = u_xlat16_9.xyz * vec3(_Reflectivity);
            u_xlat16_26.xyz = u_xlat10_26.xyz * _Color.xyz + u_xlat16_9.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb9 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb9 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat28.x = _Time.y * _Speed;
            u_xlat28.x = fract(u_xlat28.x);
            u_xlat28.x = u_xlat28.x + -0.5;
            u_xlat28.x = abs(u_xlat28.x) * _Magnitude + _MinValue;
            u_xlat28.xyz = u_xlat16_26.xyz * u_xlat28.xxx;
            u_xlat26.xyz = u_xlat16_26.xyz * vec3(_LightMapIntensity);
            u_xlat16_8.xyz = (bool(u_xlatb9)) ? u_xlat28.xyz : u_xlat26.xyz;
            u_xlat10_26.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_8.xyz = u_xlat16_8.xyz * _Color.xyz;
            u_xlat16_10.xyz = u_xlat10_26.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_8.xyz = u_xlat16_8.xyz * u_xlat16_10.xyz;
            u_xlat16_65 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_65 = min(max(u_xlat16_65, 0.0), 1.0);
#else
            u_xlat16_65 = clamp(u_xlat16_65, 0.0, 1.0);
#endif
            u_xlat16_8.xyz = u_xlat16_8.xyz * vec3(u_xlat16_65) + vs_COLOR1.xyz;
            u_xlat16_26.x = dot(u_xlat16_8.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_9.xyz = (-u_xlat16_8.xyz) + u_xlat16_26.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_9.xyz + u_xlat16_8.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati7;
    } else {
        u_xlati7 = -1;
    //ENDIF
    }
    u_xlati9 = ~u_xlati7;
    u_xlati28 = ~u_xlati2.x;
    u_xlati9 = int(uint(u_xlati28) & uint(u_xlati9));
    if(u_xlati9 != 0) {
        u_xlat16_11 = u_xlat16_0 * 0.150000006 + _UMin;
        u_xlat16_11 = u_xlat16_0 * 0.0250000004 + u_xlat16_11;
        u_xlat11.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_11;
        u_xlat11.x = u_xlat16_19 * _ScaleTime + u_xlat16_11;
        u_xlat11.xy = u_xlat11.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb30 = !!(vs_TEXCOORD0.x>=u_xlat11.y);
#else
        u_xlatb30 = vs_TEXCOORD0.x>=u_xlat11.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb11 = !!(u_xlat11.x>=vs_TEXCOORD0.x);
#else
        u_xlatb11 = u_xlat11.x>=vs_TEXCOORD0.x;
#endif
        u_xlati11 = int(uint(u_xlatb11) * 0xffffffffu & uint(u_xlatb30) * 0xffffffffu);
        if(u_xlati11 != 0) {
            u_xlat10_30.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_12 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_8.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_10.x = u_xlat16_8.x + u_xlat16_8.x;
            u_xlat16_10.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_10.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_31.xyz = texture(_EnvTex, u_xlat16_10.xyz).xyz;
            u_xlat16_12.xyz = vec3(u_xlat10_12) * u_xlat10_31.xyz;
            u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(_Reflectivity);
            u_xlat16_30.xyz = u_xlat10_30.xyz * _Color.xyz + u_xlat16_12.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb12 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb12 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat31.x = _Time.y * _Speed;
            u_xlat31.x = fract(u_xlat31.x);
            u_xlat31.x = u_xlat31.x + -0.5;
            u_xlat31.x = abs(u_xlat31.x) * _Magnitude + _MinValue;
            u_xlat31.xyz = u_xlat16_30.xyz * u_xlat31.xxx;
            u_xlat30.xyz = u_xlat16_30.xyz * vec3(_LightMapIntensity);
            u_xlat16_10.xyz = (bool(u_xlatb12)) ? u_xlat31.xyz : u_xlat30.xyz;
            u_xlat10_30.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_10.xyz = u_xlat16_10.xyz * _Color.xyz;
            u_xlat16_13.xyz = u_xlat10_30.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_10.xyz = u_xlat16_10.xyz * u_xlat16_13.xyz;
            u_xlat16_67 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_67 = min(max(u_xlat16_67, 0.0), 1.0);
#else
            u_xlat16_67 = clamp(u_xlat16_67, 0.0, 1.0);
#endif
            u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(u_xlat16_67) + vs_COLOR1.xyz;
            u_xlat16_30.x = dot(u_xlat16_10.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_12.xyz = (-u_xlat16_10.xyz) + u_xlat16_30.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_12.xyz + u_xlat16_10.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati11;
    } else {
        u_xlati11 = -1;
    //ENDIF
    }
    u_xlati12 = ~u_xlati11;
    u_xlati31 = ~u_xlati2.x;
    u_xlati12 = int(uint(u_xlati31) & uint(u_xlati12));
    if(u_xlati12 != 0) {
        u_xlat16_14 = u_xlat16_0 * 0.200000003 + _UMin;
        u_xlat16_14 = u_xlat16_0 * 0.0250000004 + u_xlat16_14;
        u_xlat14.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_14;
        u_xlat14.x = u_xlat16_19 * _ScaleTime + u_xlat16_14;
        u_xlat14.xy = u_xlat14.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb33 = !!(vs_TEXCOORD0.x>=u_xlat14.y);
#else
        u_xlatb33 = vs_TEXCOORD0.x>=u_xlat14.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb14 = !!(u_xlat14.x>=vs_TEXCOORD0.x);
#else
        u_xlatb14 = u_xlat14.x>=vs_TEXCOORD0.x;
#endif
        u_xlati14 = int(uint(u_xlatb14) * 0xffffffffu & uint(u_xlatb33) * 0xffffffffu);
        if(u_xlati14 != 0) {
            u_xlat10_33.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_15 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_10.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_10.x + u_xlat16_10.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_34.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_15.xyz = vec3(u_xlat10_15) * u_xlat10_34.xyz;
            u_xlat16_15.xyz = u_xlat16_15.xyz * vec3(_Reflectivity);
            u_xlat16_33.xyz = u_xlat10_33.xyz * _Color.xyz + u_xlat16_15.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb15 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb15 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat34.x = _Time.y * _Speed;
            u_xlat34.x = fract(u_xlat34.x);
            u_xlat34.x = u_xlat34.x + -0.5;
            u_xlat34.x = abs(u_xlat34.x) * _Magnitude + _MinValue;
            u_xlat34.xyz = u_xlat16_33.xyz * u_xlat34.xxx;
            u_xlat33.xyz = u_xlat16_33.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb15)) ? u_xlat34.xyz : u_xlat33.xyz;
            u_xlat10_33.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_33.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_33.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_15.xyz = (-u_xlat16_13.xyz) + u_xlat16_33.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_15.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati14;
    } else {
        u_xlati14 = -1;
    //ENDIF
    }
    u_xlati15 = ~u_xlati14;
    u_xlati34 = ~u_xlati2.x;
    u_xlati15 = int(uint(u_xlati34) & uint(u_xlati15));
    if(u_xlati15 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.25 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.300000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.349999994 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.400000006 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.450000018 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.5 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.550000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.600000024 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.650000036 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.699999988 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.75 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.800000012 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.850000024 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.900000036 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati17 = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati17 != 0) {
            u_xlat10_36.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_18.x = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_37.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = u_xlat10_18.xxx * u_xlat10_37.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_36.xyz = u_xlat10_36.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb18 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb18 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat37.x = _Time.y * _Speed;
            u_xlat37.x = fract(u_xlat37.x);
            u_xlat37.x = u_xlat37.x + -0.5;
            u_xlat37.x = abs(u_xlat37.x) * _Magnitude + _MinValue;
            u_xlat37.xyz = u_xlat16_36.xyz * u_xlat37.xxx;
            u_xlat36.xyz = u_xlat16_36.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb18)) ? u_xlat37.xyz : u_xlat36.xyz;
            u_xlat10_36.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_36.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_36.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_36.xyz = (-u_xlat16_13.xyz) + u_xlat16_36.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_36.xyz + u_xlat16_13.xyz;
            u_xlat16_3.xyz = u_xlat16_1.xyz;
            u_xlat16_3.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        //ENDIF
        }
        u_xlati2.x = u_xlati17;
    } else {
        u_xlati17 = -1;
    //ENDIF
    }
    u_xlati17 = ~u_xlati17;
    u_xlati36 = ~u_xlati2.x;
    u_xlati17 = int(uint(u_xlati36) & uint(u_xlati17));
    if(u_xlati17 != 0) {
        u_xlat16_17.x = u_xlat16_0 * 0.949999988 + _UMin;
        u_xlat16_17.x = u_xlat16_0 * 0.0250000004 + u_xlat16_17.x;
        u_xlat17.y = (-u_xlat16_19) * _ScaleTime + u_xlat16_17.x;
        u_xlat17.x = u_xlat16_19 * _ScaleTime + u_xlat16_17.x;
        u_xlat17.xy = u_xlat17.xy + _MainTex_ST.zz;
#ifdef UNITY_ADRENO_ES3
        u_xlatb36 = !!(vs_TEXCOORD0.x>=u_xlat17.y);
#else
        u_xlatb36 = vs_TEXCOORD0.x>=u_xlat17.y;
#endif
#ifdef UNITY_ADRENO_ES3
        u_xlatb17 = !!(u_xlat17.x>=vs_TEXCOORD0.x);
#else
        u_xlatb17 = u_xlat17.x>=vs_TEXCOORD0.x;
#endif
        u_xlati2.x = int(uint(u_xlatb17) * 0xffffffffu & uint(u_xlatb36) * 0xffffffffu);
        if(u_xlati2.x != 0) {
            u_xlat10_17.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
            u_xlat10_74 = texture(_ReflectMaskTex, vs_TEXCOORD0.xy).x;
            u_xlat16_13.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD2.xyz);
            u_xlat16_13.x = u_xlat16_13.x + u_xlat16_13.x;
            u_xlat16_13.xyz = vs_TEXCOORD2.xyz * (-u_xlat16_13.xxx) + vs_TEXCOORD3.xyz;
            u_xlat10_18.xyz = texture(_EnvTex, u_xlat16_13.xyz).xyz;
            u_xlat16_18.xyz = vec3(u_xlat10_74) * u_xlat10_18.xyz;
            u_xlat16_18.xyz = u_xlat16_18.xyz * vec3(_Reflectivity);
            u_xlat16_17.xyz = u_xlat10_17.xyz * _Color.xyz + u_xlat16_18.xyz;
#ifdef UNITY_ADRENO_ES3
            u_xlatb74 = !!(0.0<_LigthMapIntPingPong);
#else
            u_xlatb74 = 0.0<_LigthMapIntPingPong;
#endif
            u_xlat18.x = _Time.y * _Speed;
            u_xlat18.x = fract(u_xlat18.x);
            u_xlat18.x = u_xlat18.x + -0.5;
            u_xlat18.x = abs(u_xlat18.x) * _Magnitude + _MinValue;
            u_xlat18.xyz = u_xlat16_17.xyz * u_xlat18.xxx;
            u_xlat17.xyz = u_xlat16_17.xyz * vec3(_LightMapIntensity);
            u_xlat16_13.xyz = (bool(u_xlatb74)) ? u_xlat18.xyz : u_xlat17.xyz;
            u_xlat10_17.xyz = texture(_PropertyLightmapTex, vs_TEXCOORD1.xy).xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * _Color.xyz;
            u_xlat16_16.xyz = u_xlat10_17.xyz * vec3(_LightMapIntensity) + _LightingColor.xyz;
            u_xlat16_13.xyz = u_xlat16_13.xyz * u_xlat16_16.xyz;
            u_xlat16_70 = vs_COLOR1.w;
#ifdef UNITY_ADRENO_ES3
            u_xlat16_70 = min(max(u_xlat16_70, 0.0), 1.0);
#else
            u_xlat16_70 = clamp(u_xlat16_70, 0.0, 1.0);
#endif
            u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_70) + vs_COLOR1.xyz;
            u_xlat16_17.x = dot(u_xlat16_13.xyz, vec3(0.300000012, 0.589999974, 0.109999999));
            u_xlat16_17.xyz = (-u_xlat16_13.xyz) + u_xlat16_17.xxx;
            u_xlat16_1.xyz = vec3(vec3(_LumiFactor, _LumiFactor, _LumiFactor)) * u_xlat16_17.xyz + u_xlat16_13.xyz;
            SV_Target0.xyz = u_xlat16_1.xyz;
            SV_Target0.w = _BloomFactor;
            u_xlat16_1.xyz = u_xlat16_1.xyz;
        } else {
            SV_Target0 = u_xlat16_3;
        //ENDIF
        }
    } else {
        SV_Target0 = u_xlat16_3;
    //ENDIF
    }
    if(u_xlati2.x != 0) {return;}
    if((-1)!=0){discard;}
    u_xlat16_1.w = _BloomFactor;
    SV_Target0 = u_xlat16_1;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 hw_tier00 " {
""
}
SubProgram "gles3 hw_tier01 " {
""
}
SubProgram "gles3 hw_tier02 " {
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LERP" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LERP" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LERP" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_HEIGHT" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_HEIGHT" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_HEIGHT" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_HEIGHT" "FOG_LERP" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_HEIGHT" "FOG_LERP" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_HEIGHT" "FOG_LERP" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LUMINANCE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LUMINANCE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LUMINANCE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LUMINANCE" "FOG_LERP" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LUMINANCE" "FOG_LERP" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LUMINANCE" "FOG_LERP" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LUMINANCE" "FOG_HEIGHT" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LUMINANCE" "FOG_HEIGHT" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LUMINANCE" "FOG_HEIGHT" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LUMINANCE" "FOG_HEIGHT" "FOG_LERP" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LUMINANCE" "FOG_HEIGHT" "FOG_LERP" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LUMINANCE" "FOG_HEIGHT" "FOG_LERP" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_LightMap_ON" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_LightMap_ON" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_LightMap_ON" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LERP" "_LightMap_ON" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LERP" "_LightMap_ON" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LERP" "_LightMap_ON" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_HEIGHT" "_LightMap_ON" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_HEIGHT" "_LightMap_ON" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_HEIGHT" "_LightMap_ON" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_HEIGHT" "FOG_LERP" "_LightMap_ON" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_HEIGHT" "FOG_LERP" "_LightMap_ON" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_HEIGHT" "FOG_LERP" "_LightMap_ON" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LUMINANCE" "_LightMap_ON" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LUMINANCE" "_LightMap_ON" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LUMINANCE" "_LightMap_ON" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LUMINANCE" "FOG_LERP" "_LightMap_ON" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LUMINANCE" "FOG_LERP" "_LightMap_ON" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LUMINANCE" "FOG_LERP" "_LightMap_ON" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LUMINANCE" "FOG_HEIGHT" "_LightMap_ON" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LUMINANCE" "FOG_HEIGHT" "_LightMap_ON" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LUMINANCE" "FOG_HEIGHT" "_LightMap_ON" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LUMINANCE" "FOG_HEIGHT" "FOG_LERP" "_LightMap_ON" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LUMINANCE" "FOG_HEIGHT" "FOG_LERP" "_LightMap_ON" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LUMINANCE" "FOG_HEIGHT" "FOG_LERP" "_LightMap_ON" }
""
}
}
}
}
Fallback "Diffuse"
}