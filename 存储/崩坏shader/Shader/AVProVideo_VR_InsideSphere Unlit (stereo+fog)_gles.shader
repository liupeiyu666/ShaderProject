//////////////////////////////////////////
//
// NOTE: This is *not* a valid shader file
//
///////////////////////////////////////////
Shader "AVProVideo/VR/InsideSphere Unlit (stereo+fog)" {
Properties {
_MainTex ("Texture", 2D) = "black" { }
_ChromaTex ("Chroma", 2D) = "white" { }
[KeywordEnum(None, Top_Bottom, Left_Right, Custom_UV)] Stereo ("Stereo Mode", Float) = 0
[KeywordEnum(None, Left, Right)] ForceEye ("Force Eye Mode", Float) = 0
[Toggle(STEREO_DEBUG)] _StereoDebug ("Stereo Debug Tinting", Float) = 0
[KeywordEnum(None, EquiRect180)] Layout ("Layout", Float) = 0
[Toggle(HIGH_QUALITY)] _HighQuality ("High Quality", Float) = 0
[Toggle(APPLY_GAMMA)] _ApplyGamma ("Apply Gamma", Float) = 0
[Toggle(USE_YPCBCR)] _UseYpCbCr ("Use YpCbCr", Float) = 0
}
SubShader {
 Tags { "IGNOREPROJECTOR" = "true" "QUEUE" = "Background" "RenderType" = "Opaque" }
 Pass {
  Tags { "IGNOREPROJECTOR" = "true" "QUEUE" = "Background" "RenderType" = "Opaque" }
  Cull Front
  GpuProgramID 27338
Program "vp" {
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 1.0, 1.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  bool isYFlipped_11;
  isYFlipped_11 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_12;
  offset_12.x = 0.0;
  offset_12.y = 0.0;
  if (!(tmpvar_6)) {
    offset_12.y = 0.5;
  };
  if (!(isYFlipped_11)) {
    offset_12.y = (0.5 - offset_12.y);
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_12);
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].x;
  v_14.y = unity_MatrixV[1].x;
  v_14.z = unity_MatrixV[2].x;
  v_14.w = unity_MatrixV[3].x;
  bool tmpvar_15;
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition + v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  highp float tmpvar_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = ((_cameraPosition - v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_18 = sqrt(dot (tmpvar_19, tmpvar_19));
  tmpvar_15 = (tmpvar_16 > tmpvar_18);
  highp vec4 tint_20;
  tint_20 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_15) {
    tint_20 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_20 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
  xlv_COLOR = tint_20;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].x;
  v_14.y = unity_MatrixV[1].x;
  v_14.z = unity_MatrixV[2].x;
  v_14.w = unity_MatrixV[3].x;
  bool tmpvar_15;
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition + v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  highp float tmpvar_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = ((_cameraPosition - v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_18 = sqrt(dot (tmpvar_19, tmpvar_19));
  tmpvar_15 = (tmpvar_16 > tmpvar_18);
  highp vec4 tint_20;
  tint_20 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_15) {
    tint_20 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_20 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
  xlv_COLOR = tint_20;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].x;
  v_14.y = unity_MatrixV[1].x;
  v_14.z = unity_MatrixV[2].x;
  v_14.w = unity_MatrixV[3].x;
  bool tmpvar_15;
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition + v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  highp float tmpvar_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = ((_cameraPosition - v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_18 = sqrt(dot (tmpvar_19, tmpvar_19));
  tmpvar_15 = (tmpvar_16 > tmpvar_18);
  highp vec4 tint_20;
  tint_20 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_15) {
    tint_20 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_20 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
  xlv_COLOR = tint_20;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].x;
  v_14.y = unity_MatrixV[1].x;
  v_14.z = unity_MatrixV[2].x;
  v_14.w = unity_MatrixV[3].x;
  bool tmpvar_15;
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition + v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  highp float tmpvar_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = ((_cameraPosition - v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_18 = sqrt(dot (tmpvar_19, tmpvar_19));
  tmpvar_15 = (tmpvar_16 > tmpvar_18);
  highp vec4 tint_20;
  tint_20 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_15) {
    tint_20 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_20 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
  xlv_COLOR = tint_20;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].x;
  v_14.y = unity_MatrixV[1].x;
  v_14.z = unity_MatrixV[2].x;
  v_14.w = unity_MatrixV[3].x;
  bool tmpvar_15;
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition + v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  highp float tmpvar_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = ((_cameraPosition - v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_18 = sqrt(dot (tmpvar_19, tmpvar_19));
  tmpvar_15 = (tmpvar_16 > tmpvar_18);
  highp vec4 tint_20;
  tint_20 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_15) {
    tint_20 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_20 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
  xlv_COLOR = tint_20;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].x;
  v_14.y = unity_MatrixV[1].x;
  v_14.z = unity_MatrixV[2].x;
  v_14.w = unity_MatrixV[3].x;
  bool tmpvar_15;
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition + v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  highp float tmpvar_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = ((_cameraPosition - v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_18 = sqrt(dot (tmpvar_19, tmpvar_19));
  tmpvar_15 = (tmpvar_16 > tmpvar_18);
  highp vec4 tint_20;
  tint_20 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_15) {
    tint_20 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_20 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
  xlv_COLOR = tint_20;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].x;
  v_14.y = unity_MatrixV[1].x;
  v_14.z = unity_MatrixV[2].x;
  v_14.w = unity_MatrixV[3].x;
  bool tmpvar_15;
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition + v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  highp float tmpvar_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = ((_cameraPosition - v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_18 = sqrt(dot (tmpvar_19, tmpvar_19));
  tmpvar_15 = (tmpvar_16 > tmpvar_18);
  highp vec4 tint_20;
  tint_20 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_15) {
    tint_20 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_20 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
  xlv_COLOR = tint_20;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].x;
  v_14.y = unity_MatrixV[1].x;
  v_14.z = unity_MatrixV[2].x;
  v_14.w = unity_MatrixV[3].x;
  bool tmpvar_15;
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition + v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  highp float tmpvar_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = ((_cameraPosition - v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_18 = sqrt(dot (tmpvar_19, tmpvar_19));
  tmpvar_15 = (tmpvar_16 > tmpvar_18);
  highp vec4 tint_20;
  tint_20 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_15) {
    tint_20 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_20 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
  xlv_COLOR = tint_20;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].x;
  v_14.y = unity_MatrixV[1].x;
  v_14.z = unity_MatrixV[2].x;
  v_14.w = unity_MatrixV[3].x;
  bool tmpvar_15;
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition + v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  highp float tmpvar_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = ((_cameraPosition - v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_18 = sqrt(dot (tmpvar_19, tmpvar_19));
  tmpvar_15 = (tmpvar_16 > tmpvar_18);
  highp vec4 tint_20;
  tint_20 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_15) {
    tint_20 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_20 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
  xlv_COLOR = tint_20;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].x;
  v_14.y = unity_MatrixV[1].x;
  v_14.z = unity_MatrixV[2].x;
  v_14.w = unity_MatrixV[3].x;
  bool tmpvar_15;
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition + v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  highp float tmpvar_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = ((_cameraPosition - v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_18 = sqrt(dot (tmpvar_19, tmpvar_19));
  tmpvar_15 = (tmpvar_16 > tmpvar_18);
  highp vec4 tint_20;
  tint_20 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_15) {
    tint_20 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_20 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
  xlv_COLOR = tint_20;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].x;
  v_14.y = unity_MatrixV[1].x;
  v_14.z = unity_MatrixV[2].x;
  v_14.w = unity_MatrixV[3].x;
  bool tmpvar_15;
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition + v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  highp float tmpvar_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = ((_cameraPosition - v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_18 = sqrt(dot (tmpvar_19, tmpvar_19));
  tmpvar_15 = (tmpvar_16 > tmpvar_18);
  highp vec4 tint_20;
  tint_20 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_15) {
    tint_20 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_20 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
  xlv_COLOR = tint_20;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].x;
  v_14.y = unity_MatrixV[1].x;
  v_14.z = unity_MatrixV[2].x;
  v_14.w = unity_MatrixV[3].x;
  bool tmpvar_15;
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition + v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  highp float tmpvar_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = ((_cameraPosition - v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_18 = sqrt(dot (tmpvar_19, tmpvar_19));
  tmpvar_15 = (tmpvar_16 > tmpvar_18);
  highp vec4 tint_20;
  tint_20 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_15) {
    tint_20 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_20 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
  xlv_COLOR = tint_20;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].x;
  v_14.y = unity_MatrixV[1].x;
  v_14.z = unity_MatrixV[2].x;
  v_14.w = unity_MatrixV[3].x;
  bool tmpvar_15;
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition + v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  highp float tmpvar_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = ((_cameraPosition - v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_18 = sqrt(dot (tmpvar_19, tmpvar_19));
  tmpvar_15 = (tmpvar_16 > tmpvar_18);
  highp vec4 tint_20;
  tint_20 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_15) {
    tint_20 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_20 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
  xlv_COLOR = tint_20;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].x;
  v_14.y = unity_MatrixV[1].x;
  v_14.z = unity_MatrixV[2].x;
  v_14.w = unity_MatrixV[3].x;
  bool tmpvar_15;
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition + v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  highp float tmpvar_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = ((_cameraPosition - v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_18 = sqrt(dot (tmpvar_19, tmpvar_19));
  tmpvar_15 = (tmpvar_16 > tmpvar_18);
  highp vec4 tint_20;
  tint_20 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_15) {
    tint_20 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_20 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
  xlv_COLOR = tint_20;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].x;
  v_14.y = unity_MatrixV[1].x;
  v_14.z = unity_MatrixV[2].x;
  v_14.w = unity_MatrixV[3].x;
  bool tmpvar_15;
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition + v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  highp float tmpvar_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = ((_cameraPosition - v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_18 = sqrt(dot (tmpvar_19, tmpvar_19));
  tmpvar_15 = (tmpvar_16 > tmpvar_18);
  highp vec4 tint_20;
  tint_20 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_15) {
    tint_20 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_20 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
  xlv_COLOR = tint_20;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].x;
  v_14.y = unity_MatrixV[1].x;
  v_14.z = unity_MatrixV[2].x;
  v_14.w = unity_MatrixV[3].x;
  bool tmpvar_15;
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition + v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  highp float tmpvar_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = ((_cameraPosition - v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_18 = sqrt(dot (tmpvar_19, tmpvar_19));
  tmpvar_15 = (tmpvar_16 > tmpvar_18);
  highp vec4 tint_20;
  tint_20 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_15) {
    tint_20 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_20 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
  xlv_COLOR = tint_20;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].x;
  v_14.y = unity_MatrixV[1].x;
  v_14.z = unity_MatrixV[2].x;
  v_14.w = unity_MatrixV[3].x;
  bool tmpvar_15;
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition + v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  highp float tmpvar_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = ((_cameraPosition - v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_18 = sqrt(dot (tmpvar_19, tmpvar_19));
  tmpvar_15 = (tmpvar_16 > tmpvar_18);
  highp vec4 tint_20;
  tint_20 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_15) {
    tint_20 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_20 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
  xlv_COLOR = tint_20;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].x;
  v_14.y = unity_MatrixV[1].x;
  v_14.z = unity_MatrixV[2].x;
  v_14.w = unity_MatrixV[3].x;
  bool tmpvar_15;
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition + v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  highp float tmpvar_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = ((_cameraPosition - v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_18 = sqrt(dot (tmpvar_19, tmpvar_19));
  tmpvar_15 = (tmpvar_16 > tmpvar_18);
  highp vec4 tint_20;
  tint_20 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_15) {
    tint_20 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_20 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
  xlv_COLOR = tint_20;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].x;
  v_14.y = unity_MatrixV[1].x;
  v_14.z = unity_MatrixV[2].x;
  v_14.w = unity_MatrixV[3].x;
  bool tmpvar_15;
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition + v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  highp float tmpvar_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = ((_cameraPosition - v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_18 = sqrt(dot (tmpvar_19, tmpvar_19));
  tmpvar_15 = (tmpvar_16 > tmpvar_18);
  highp vec4 tint_20;
  tint_20 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_15) {
    tint_20 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_20 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
  xlv_COLOR = tint_20;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].x;
  v_14.y = unity_MatrixV[1].x;
  v_14.z = unity_MatrixV[2].x;
  v_14.w = unity_MatrixV[3].x;
  bool tmpvar_15;
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition + v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  highp float tmpvar_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = ((_cameraPosition - v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_18 = sqrt(dot (tmpvar_19, tmpvar_19));
  tmpvar_15 = (tmpvar_16 > tmpvar_18);
  highp vec4 tint_20;
  tint_20 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_15) {
    tint_20 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_20 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
  xlv_COLOR = tint_20;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].x;
  v_14.y = unity_MatrixV[1].x;
  v_14.z = unity_MatrixV[2].x;
  v_14.w = unity_MatrixV[3].x;
  bool tmpvar_15;
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition + v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  highp float tmpvar_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = ((_cameraPosition - v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_18 = sqrt(dot (tmpvar_19, tmpvar_19));
  tmpvar_15 = (tmpvar_16 > tmpvar_18);
  highp vec4 tint_20;
  tint_20 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_15) {
    tint_20 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_20 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
  xlv_COLOR = tint_20;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].x;
  v_14.y = unity_MatrixV[1].x;
  v_14.z = unity_MatrixV[2].x;
  v_14.w = unity_MatrixV[3].x;
  bool tmpvar_15;
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition + v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  highp float tmpvar_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = ((_cameraPosition - v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_18 = sqrt(dot (tmpvar_19, tmpvar_19));
  tmpvar_15 = (tmpvar_16 > tmpvar_18);
  highp vec4 tint_20;
  tint_20 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_15) {
    tint_20 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_20 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
  xlv_COLOR = tint_20;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].x;
  v_14.y = unity_MatrixV[1].x;
  v_14.z = unity_MatrixV[2].x;
  v_14.w = unity_MatrixV[3].x;
  bool tmpvar_15;
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition + v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  highp float tmpvar_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = ((_cameraPosition - v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_18 = sqrt(dot (tmpvar_19, tmpvar_19));
  tmpvar_15 = (tmpvar_16 > tmpvar_18);
  highp vec4 tint_20;
  tint_20 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_15) {
    tint_20 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_20 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
  xlv_COLOR = tint_20;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  bool isYFlipped_10;
  isYFlipped_10 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_11;
  highp vec2 scale_12;
  scale_12.x = 1.0;
  offset_11.x = 0.0;
  scale_12.y = 0.5;
  offset_11.y = 0.0;
  if (!(tmpvar_5)) {
    offset_11.y = 0.5;
  };
  if (!(isYFlipped_10)) {
    offset_11.y = (0.5 - offset_11.y);
  };
  highp vec4 tmpvar_13;
  tmpvar_13.xy = scale_12;
  tmpvar_13.zw = offset_11;
  highp vec4 v_14;
  v_14.x = unity_MatrixV[0].x;
  v_14.y = unity_MatrixV[1].x;
  v_14.z = unity_MatrixV[2].x;
  v_14.w = unity_MatrixV[3].x;
  bool tmpvar_15;
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition + v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  highp float tmpvar_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = ((_cameraPosition - v_14.xyz) - _WorldSpaceCameraPos);
  tmpvar_18 = sqrt(dot (tmpvar_19, tmpvar_19));
  tmpvar_15 = (tmpvar_16 > tmpvar_18);
  highp vec4 tint_20;
  tint_20 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_15) {
    tint_20 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_20 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_13;
  xlv_COLOR = tint_20;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.0;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.0;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.5;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  bool isYFlipped_5;
  isYFlipped_5 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_6;
  offset_6.x = 0.0;
  offset_6.y = 0.5;
  if (!(isYFlipped_5)) {
    offset_6.y = 0.0;
  };
  tmpvar_1 = (tmpvar_4 * vec2(1.0, 0.5));
  tmpvar_1 = (tmpvar_1 + offset_6);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  bool isYFlipped_4;
  isYFlipped_4 = (_MainTex_ST.y < 0.0);
  highp vec2 offset_5;
  highp vec2 scale_6;
  scale_6.x = 1.0;
  offset_5.x = 0.0;
  scale_6.y = 0.5;
  offset_5.y = 0.5;
  if (!(isYFlipped_4)) {
    offset_5.y = 0.0;
  };
  highp vec4 tmpvar_7;
  tmpvar_7.xy = scale_6;
  tmpvar_7.zw = offset_5;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_7;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  highp vec2 offset_11;
  offset_11.y = 0.0;
  offset_11.x = 0.0;
  if (!(tmpvar_6)) {
    offset_11.x = 0.5;
  };
  tmpvar_1 = (tmpvar_4 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + offset_11);
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec2 offset_10;
  highp vec2 scale_11;
  scale_11.y = 1.0;
  offset_10.y = 0.0;
  scale_11.x = 0.5;
  offset_10.x = 0.0;
  if (!(tmpvar_5)) {
    offset_10.x = 0.5;
  };
  highp vec4 tmpvar_12;
  tmpvar_12.xy = scale_11;
  tmpvar_12.zw = offset_10;
  highp vec4 v_13;
  v_13.x = unity_MatrixV[0].x;
  v_13.y = unity_MatrixV[1].x;
  v_13.z = unity_MatrixV[2].x;
  v_13.w = unity_MatrixV[3].x;
  bool tmpvar_14;
  highp float tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = ((_cameraPosition + v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_15 = sqrt(dot (tmpvar_16, tmpvar_16));
  highp float tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = ((_cameraPosition - v_13.xyz) - _WorldSpaceCameraPos);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  tmpvar_14 = (tmpvar_15 > tmpvar_17);
  highp vec4 tint_19;
  tint_19 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_14) {
    tint_19 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_19 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = tmpvar_12;
  xlv_COLOR = tint_19;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.0;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = (tmpvar_3 * vec2(0.5, 1.0));
  tmpvar_1 = (tmpvar_1 + vec2(0.5, 0.0));
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  highp vec2 offset_2;
  highp vec2 scale_3;
  scale_3.y = 1.0;
  offset_2.y = 0.0;
  scale_3.x = 0.5;
  offset_2.x = 0.5;
  highp vec4 tmpvar_4;
  tmpvar_4.xy = scale_3;
  tmpvar_4.zw = offset_2;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  uv_2 = (uv_2 * xlv_TEXCOORD1.xy);
  uv_2 = (uv_2 + xlv_TEXCOORD1.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
uniform highp vec3 _cameraPosition;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_4;
  tmpvar_4.x = (1.0 - tmpvar_1.x);
  tmpvar_4.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_4;
  highp vec4 v_5;
  v_5.x = unity_MatrixV[0].x;
  v_5.y = unity_MatrixV[1].x;
  v_5.z = unity_MatrixV[2].x;
  v_5.w = unity_MatrixV[3].x;
  bool tmpvar_6;
  highp float tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = ((_cameraPosition + v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_7 = sqrt(dot (tmpvar_8, tmpvar_8));
  highp float tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((_cameraPosition - v_5.xyz) - _WorldSpaceCameraPos);
  tmpvar_9 = sqrt(dot (tmpvar_10, tmpvar_10));
  tmpvar_6 = (tmpvar_7 > tmpvar_9);
  if (!(tmpvar_6)) {
    tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec2 tmpvar_11;
    tmpvar_11.x = (1.0 - tmpvar_1.x);
    tmpvar_11.y = tmpvar_1.y;
    tmpvar_1 = tmpvar_11;
  };
  highp vec4 v_12;
  v_12.x = unity_MatrixV[0].x;
  v_12.y = unity_MatrixV[1].x;
  v_12.z = unity_MatrixV[2].x;
  v_12.w = unity_MatrixV[3].x;
  bool tmpvar_13;
  highp float tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = ((_cameraPosition + v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_14 = sqrt(dot (tmpvar_15, tmpvar_15));
  highp float tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = ((_cameraPosition - v_12.xyz) - _WorldSpaceCameraPos);
  tmpvar_16 = sqrt(dot (tmpvar_17, tmpvar_17));
  tmpvar_13 = (tmpvar_14 > tmpvar_16);
  highp vec4 tint_18;
  tint_18 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_13) {
    tint_18 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_18 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_18;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec4 tint_10;
  tint_10 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_5) {
    tint_10 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_10 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_10;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec4 tint_10;
  tint_10 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_5) {
    tint_10 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_10 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_10;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec4 tint_10;
  tint_10 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_5) {
    tint_10 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_10 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_10;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec4 tint_10;
  tint_10 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_5) {
    tint_10 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_10 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_10;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec4 tint_10;
  tint_10 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_5) {
    tint_10 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_10 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_10;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec4 tint_10;
  tint_10 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_5) {
    tint_10 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_10 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_10;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec4 tint_10;
  tint_10 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_5) {
    tint_10 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_10 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_10;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec4 tint_10;
  tint_10 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_5) {
    tint_10 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_10 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_10;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec4 tint_10;
  tint_10 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_5) {
    tint_10 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_10 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_10;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec4 tint_10;
  tint_10 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_5) {
    tint_10 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_10 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_10;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec4 tint_10;
  tint_10 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_5) {
    tint_10 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_10 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_10;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec4 tint_10;
  tint_10 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_5) {
    tint_10 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_10 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_10;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec4 tint_10;
  tint_10 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_5) {
    tint_10 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_10 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_10;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec4 tint_10;
  tint_10 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_5) {
    tint_10 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_10 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_10;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec4 tint_10;
  tint_10 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_5) {
    tint_10 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_10 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_10;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec4 tint_10;
  tint_10 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_5) {
    tint_10 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_10 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_10;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec4 tint_10;
  tint_10 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_5) {
    tint_10 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_10 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_10;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec4 tint_10;
  tint_10 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_5) {
    tint_10 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_10 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_10;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec4 tint_10;
  tint_10 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_5) {
    tint_10 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_10 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_10;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec4 tint_10;
  tint_10 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_5) {
    tint_10 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_10 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_10;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec4 tint_10;
  tint_10 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_5) {
    tint_10 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_10 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_10;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec4 tint_10;
  tint_10 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_5) {
    tint_10 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_10 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_10;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec4 tint_10;
  tint_10 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_5) {
    tint_10 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_10 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_10;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform highp vec3 _cameraPosition;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  tmpvar_2 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  highp vec4 v_4;
  v_4.x = unity_MatrixV[0].x;
  v_4.y = unity_MatrixV[1].x;
  v_4.z = unity_MatrixV[2].x;
  v_4.w = unity_MatrixV[3].x;
  bool tmpvar_5;
  highp float tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = ((_cameraPosition + v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_6 = sqrt(dot (tmpvar_7, tmpvar_7));
  highp float tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = ((_cameraPosition - v_4.xyz) - _WorldSpaceCameraPos);
  tmpvar_8 = sqrt(dot (tmpvar_9, tmpvar_9));
  tmpvar_5 = (tmpvar_6 > tmpvar_8);
  highp vec4 tint_10;
  tint_10 = vec4(1.0, 1.0, 1.0, 1.0);
  if (tmpvar_5) {
    tint_10 = vec4(0.0, 1.0, 0.0, 1.0);
  } else {
    tint_10 = vec4(1.0, 0.0, 0.0, 1.0);
  };
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR = tint_10;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.x = (((tmpvar_1.x - 0.5) * 2.0) + 0.5);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(0.0, 1.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  col_1 = tmpvar_3;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_4;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  mediump vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  rgba_2 = tmpvar_4;
  mediump vec3 col_5;
  col_5 = tmpvar_4.xyz;
  if ((tmpvar_4.x <= 0.04045)) {
    col_5.x = (tmpvar_4.x / 12.92);
  } else {
    col_5.x = pow (((col_5.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.y <= 0.04045)) {
    col_5.y = (tmpvar_4.y / 12.92);
  } else {
    col_5.y = pow (((col_5.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_4.z <= 0.04045)) {
    col_5.z = (tmpvar_4.z / 12.92);
  } else {
    col_5.z = pow (((col_5.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_5;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_6;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_ST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec2 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  tmpvar_1 = ((_glesMultiTexCoord1.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3.x = (1.0 - tmpvar_1.x);
  tmpvar_3.y = tmpvar_1.y;
  tmpvar_1 = tmpvar_3;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  mediump vec4 rgba_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_ChromaTex, xlv_TEXCOORD0);
  highp vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_3.x;
  tmpvar_5.yz = tmpvar_4.xy;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _YpCbCrTransform[0].xyz;
  tmpvar_6[1] = _YpCbCrTransform[1].xyz;
  tmpvar_6[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_7;
  v_7.x = _YpCbCrTransform[0].w;
  v_7.y = _YpCbCrTransform[1].w;
  v_7.z = _YpCbCrTransform[2].w;
  v_7.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_6 * (tmpvar_5 + v_7.xyz));
  rgba_2 = tmpvar_8;
  mediump vec3 col_9;
  col_9 = rgba_2.xyz;
  if ((rgba_2.x <= 0.04045)) {
    col_9.x = (rgba_2.x / 12.92);
  } else {
    col_9.x = pow (((col_9.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.y <= 0.04045)) {
    col_9.y = (rgba_2.y / 12.92);
  } else {
    col_9.y = pow (((col_9.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_2.z <= 0.04045)) {
    col_9.z = (rgba_2.z / 12.92);
  } else {
    col_9.z = pow (((col_9.z + 0.055) / 1.055), 2.4);
  };
  rgba_2.xyz = col_9;
  col_1 = rgba_2;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  col_1 = tmpvar_11;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  mediump vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  rgba_10 = tmpvar_12;
  mediump vec3 col_13;
  col_13 = tmpvar_12.xyz;
  if ((tmpvar_12.x <= 0.04045)) {
    col_13.x = (tmpvar_12.x / 12.92);
  } else {
    col_13.x = pow (((col_13.x + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.y <= 0.04045)) {
    col_13.y = (tmpvar_12.y / 12.92);
  } else {
    col_13.y = pow (((col_13.y + 0.055) / 1.055), 2.4);
  };
  if ((tmpvar_12.z <= 0.04045)) {
    col_13.z = (tmpvar_12.z / 12.92);
  } else {
    col_13.z = pow (((col_13.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_13;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _glesVertex.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_1));
  xlv_TEXCOORD0 = _glesNormal;
  xlv_COLOR = vec4(1.0, 0.0, 0.0, 1.0);
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform highp vec4 _MainTex_ST;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_COLOR;
void main ()
{
  lowp vec4 col_1;
  highp vec2 uv_2;
  highp vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD0);
  highp float tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (min (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0) / max (abs(
    (tmpvar_3.z / tmpvar_3.x)
  ), 1.0));
  highp float tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  tmpvar_6 = (((
    ((((
      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)
     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)
   * tmpvar_6) + 0.9999793) * tmpvar_5);
  tmpvar_6 = (tmpvar_6 + (float(
    (abs((tmpvar_3.z / tmpvar_3.x)) > 1.0)
  ) * (
    (tmpvar_6 * -2.0)
   + 1.570796)));
  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.z / tmpvar_3.x)));
  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.z)))) {
    if ((tmpvar_3.x < 0.0)) {
      if ((tmpvar_3.z >= 0.0)) {
        tmpvar_4 += 3.141593;
      } else {
        tmpvar_4 = (tmpvar_4 - 3.141593);
      };
    };
  } else {
    tmpvar_4 = (sign(tmpvar_3.z) * 1.570796);
  };
  uv_2.x = (0.5 - (tmpvar_4 * 0.1591549));
  highp float x_7;
  x_7 = -(tmpvar_3.y);
  uv_2.y = (0.5 - ((
    sign(x_7)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_7)
    )) * (1.570796 + (
      abs(x_7)
     * 
      (-0.2146018 + (abs(x_7) * (0.08656672 + (
        abs(x_7)
       * -0.03102955))))
    ))))
  ) * 0.3183099));
  uv_2.x = (uv_2.x + 0.75);
  highp float tmpvar_8;
  tmpvar_8 = fract(abs(uv_2.x));
  highp float tmpvar_9;
  if ((uv_2.x >= 0.0)) {
    tmpvar_9 = tmpvar_8;
  } else {
    tmpvar_9 = -(tmpvar_8);
  };
  uv_2.x = tmpvar_9;
  uv_2 = ((uv_2 * _MainTex_ST.xy) + _MainTex_ST.zw);
  uv_2.x = (((uv_2.x - 0.5) * 2.0) + 0.5);
  mediump vec4 rgba_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, uv_2);
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_ChromaTex, uv_2);
  highp vec3 tmpvar_13;
  tmpvar_13.x = tmpvar_11.x;
  tmpvar_13.yz = tmpvar_12.xy;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _YpCbCrTransform[0].xyz;
  tmpvar_14[1] = _YpCbCrTransform[1].xyz;
  tmpvar_14[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_15;
  v_15.x = _YpCbCrTransform[0].w;
  v_15.y = _YpCbCrTransform[1].w;
  v_15.z = _YpCbCrTransform[2].w;
  v_15.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (tmpvar_14 * (tmpvar_13 + v_15.xyz));
  rgba_10 = tmpvar_16;
  mediump vec3 col_17;
  col_17 = rgba_10.xyz;
  if ((rgba_10.x <= 0.04045)) {
    col_17.x = (rgba_10.x / 12.92);
  } else {
    col_17.x = pow (((col_17.x + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.y <= 0.04045)) {
    col_17.y = (rgba_10.y / 12.92);
  } else {
    col_17.y = pow (((col_17.y + 0.055) / 1.055), 2.4);
  };
  if ((rgba_10.z <= 0.04045)) {
    col_17.z = (rgba_10.z / 12.92);
  } else {
    col_17.z = pow (((col_17.z + 0.055) / 1.055), 2.4);
  };
  rgba_10.xyz = col_17;
  col_1 = rgba_10;
  col_1 = (col_1 * xlv_COLOR);
  lowp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = col_1.xyz;
  gl_FragData[0] = tmpvar_18;
}


#endif
"
}
}
Program "fp" {
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "MONOSCOPIC" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_TOP_BOTTOM" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_LEFT_RIGHT" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG_OFF" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_NONE" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_LEFT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY_OFF" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "STEREO_CUSTOM_UV" "STEREO_DEBUG" "FORCEEYE_RIGHT" "HIGH_QUALITY" "LAYOUT_EQUIRECT180" }
""
}
}
}
}
}