//////////////////////////////////////////
//
// NOTE: This is *not* a valid shader file
//
///////////////////////////////////////////
Shader "AVProVideo/Lit/Transparent Diffuse (texture+color+fog+packed alpha)" {
Properties {
_Color ("Main Color", Color) = (1,1,1,1)
_MainTex ("Base (RGB)", 2D) = "black" { }
_ChromaTex ("Chroma", 2D) = "black" { }
[KeywordEnum(None, Top_Bottom, Left_Right)] AlphaPack ("Alpha Pack", Float) = 0
[Toggle(APPLY_GAMMA)] _ApplyGamma ("Apply Gamma", Float) = 0
[Toggle(USE_YPCBCR)] _UseYpCbCr ("Use YpCbCr", Float) = 0
}
SubShader {
 LOD 200
 Tags { "IGNOREPROJECTOR" = "true" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
 Pass {
  Name "FORWARD"
  LOD 200
  Tags { "IGNOREPROJECTOR" = "true" "LIGHTMODE" = "FORWARDBASE" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
  ZWrite Off
  Cull Off
  GpuProgramID 61112
Program "vp" {
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6 = tmpvar_8;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_9;
  lowp vec4 c_10;
  lowp float diff_11;
  mediump float tmpvar_12;
  tmpvar_12 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_11 = tmpvar_12;
  c_10.xyz = ((col_6.xyz * tmpvar_1) * diff_11);
  c_10.w = col_6.w;
  c_9.w = c_10.w;
  c_9.xyz = c_10.xyz;
  gl_FragData[0] = c_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6 = tmpvar_8;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_9;
  lowp vec4 c_10;
  lowp float diff_11;
  mediump float tmpvar_12;
  tmpvar_12 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_11 = tmpvar_12;
  c_10.xyz = ((col_6.xyz * tmpvar_1) * diff_11);
  c_10.w = col_6.w;
  c_9.w = c_10.w;
  c_9.xyz = c_10.xyz;
  gl_FragData[0] = c_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6 = tmpvar_8;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_9;
  lowp vec4 c_10;
  lowp float diff_11;
  mediump float tmpvar_12;
  tmpvar_12 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_11 = tmpvar_12;
  c_10.xyz = ((col_6.xyz * tmpvar_1) * diff_11);
  c_10.w = col_6.w;
  c_9.w = c_10.w;
  c_9.xyz = c_10.xyz;
  gl_FragData[0] = c_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize((_glesNormal * tmpvar_3));
  mediump vec3 normal_5;
  normal_5 = tmpvar_4;
  mediump vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = normal_5;
  mediump vec3 res_7;
  mediump vec3 x_8;
  x_8.x = dot (unity_SHAr, tmpvar_6);
  x_8.y = dot (unity_SHAg, tmpvar_6);
  x_8.z = dot (unity_SHAb, tmpvar_6);
  mediump vec3 x1_9;
  mediump vec4 tmpvar_10;
  tmpvar_10 = (normal_5.xyzz * normal_5.yzzx);
  x1_9.x = dot (unity_SHBr, tmpvar_10);
  x1_9.y = dot (unity_SHBg, tmpvar_10);
  x1_9.z = dot (unity_SHBb, tmpvar_10);
  res_7 = (x_8 + (x1_9 + (unity_SHC.xyz * 
    ((normal_5.x * normal_5.x) - (normal_5.y * normal_5.y))
  )));
  mediump vec3 tmpvar_11;
  tmpvar_11 = max (((1.055 * 
    pow (max (res_7, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_7 = tmpvar_11;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_11);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6 = tmpvar_8;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_9;
  lowp vec4 c_10;
  lowp float diff_11;
  mediump float tmpvar_12;
  tmpvar_12 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_11 = tmpvar_12;
  c_10.xyz = ((col_6.xyz * tmpvar_1) * diff_11);
  c_10.w = col_6.w;
  c_9.w = c_10.w;
  c_9.xyz = (c_10.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize((_glesNormal * tmpvar_3));
  mediump vec3 normal_5;
  normal_5 = tmpvar_4;
  mediump vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = normal_5;
  mediump vec3 res_7;
  mediump vec3 x_8;
  x_8.x = dot (unity_SHAr, tmpvar_6);
  x_8.y = dot (unity_SHAg, tmpvar_6);
  x_8.z = dot (unity_SHAb, tmpvar_6);
  mediump vec3 x1_9;
  mediump vec4 tmpvar_10;
  tmpvar_10 = (normal_5.xyzz * normal_5.yzzx);
  x1_9.x = dot (unity_SHBr, tmpvar_10);
  x1_9.y = dot (unity_SHBg, tmpvar_10);
  x1_9.z = dot (unity_SHBb, tmpvar_10);
  res_7 = (x_8 + (x1_9 + (unity_SHC.xyz * 
    ((normal_5.x * normal_5.x) - (normal_5.y * normal_5.y))
  )));
  mediump vec3 tmpvar_11;
  tmpvar_11 = max (((1.055 * 
    pow (max (res_7, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_7 = tmpvar_11;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_11);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6 = tmpvar_8;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_9;
  lowp vec4 c_10;
  lowp float diff_11;
  mediump float tmpvar_12;
  tmpvar_12 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_11 = tmpvar_12;
  c_10.xyz = ((col_6.xyz * tmpvar_1) * diff_11);
  c_10.w = col_6.w;
  c_9.w = c_10.w;
  c_9.xyz = (c_10.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize((_glesNormal * tmpvar_3));
  mediump vec3 normal_5;
  normal_5 = tmpvar_4;
  mediump vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = normal_5;
  mediump vec3 res_7;
  mediump vec3 x_8;
  x_8.x = dot (unity_SHAr, tmpvar_6);
  x_8.y = dot (unity_SHAg, tmpvar_6);
  x_8.z = dot (unity_SHAb, tmpvar_6);
  mediump vec3 x1_9;
  mediump vec4 tmpvar_10;
  tmpvar_10 = (normal_5.xyzz * normal_5.yzzx);
  x1_9.x = dot (unity_SHBr, tmpvar_10);
  x1_9.y = dot (unity_SHBg, tmpvar_10);
  x1_9.z = dot (unity_SHBb, tmpvar_10);
  res_7 = (x_8 + (x1_9 + (unity_SHC.xyz * 
    ((normal_5.x * normal_5.x) - (normal_5.y * normal_5.y))
  )));
  mediump vec3 tmpvar_11;
  tmpvar_11 = max (((1.055 * 
    pow (max (res_7, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_7 = tmpvar_11;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_11);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6 = tmpvar_8;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_9;
  lowp vec4 c_10;
  lowp float diff_11;
  mediump float tmpvar_12;
  tmpvar_12 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_11 = tmpvar_12;
  c_10.xyz = ((col_6.xyz * tmpvar_1) * diff_11);
  c_10.w = col_6.w;
  c_9.w = c_10.w;
  c_9.xyz = (c_10.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.xz = _glesMultiTexCoord0.xx;
  result_2.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 lightColor0_7;
  lightColor0_7 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_8;
  lightColor1_8 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_9;
  lightColor2_9 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_10;
  lightColor3_10 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_11;
  lightAttenSq_11 = unity_4LightAtten0;
  highp vec3 col_12;
  highp vec4 ndotl_13;
  highp vec4 lengthSq_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_4LightPosX0 - tmpvar_4.x);
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosY0 - tmpvar_4.y);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosZ0 - tmpvar_4.z);
  lengthSq_14 = (tmpvar_15 * tmpvar_15);
  lengthSq_14 = (lengthSq_14 + (tmpvar_16 * tmpvar_16));
  lengthSq_14 = (lengthSq_14 + (tmpvar_17 * tmpvar_17));
  highp vec4 tmpvar_18;
  tmpvar_18 = max (lengthSq_14, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_14 = tmpvar_18;
  ndotl_13 = (tmpvar_15 * tmpvar_6.x);
  ndotl_13 = (ndotl_13 + (tmpvar_16 * tmpvar_6.y));
  ndotl_13 = (ndotl_13 + (tmpvar_17 * tmpvar_6.z));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_13 * inversesqrt(tmpvar_18)));
  ndotl_13 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = (tmpvar_19 * (1.0/((1.0 + 
    (tmpvar_18 * lightAttenSq_11)
  ))));
  col_12 = (lightColor0_7 * tmpvar_20.x);
  col_12 = (col_12 + (lightColor1_8 * tmpvar_20.y));
  col_12 = (col_12 + (lightColor2_9 * tmpvar_20.z));
  col_12 = (col_12 + (lightColor3_10 * tmpvar_20.w));
  tmpvar_1 = col_12;
  mediump vec3 normal_21;
  normal_21 = tmpvar_6;
  mediump vec3 ambient_22;
  mediump vec4 tmpvar_23;
  tmpvar_23.w = 1.0;
  tmpvar_23.xyz = normal_21;
  mediump vec3 res_24;
  mediump vec3 x_25;
  x_25.x = dot (unity_SHAr, tmpvar_23);
  x_25.y = dot (unity_SHAg, tmpvar_23);
  x_25.z = dot (unity_SHAb, tmpvar_23);
  mediump vec3 x1_26;
  mediump vec4 tmpvar_27;
  tmpvar_27 = (normal_21.xyzz * normal_21.yzzx);
  x1_26.x = dot (unity_SHBr, tmpvar_27);
  x1_26.y = dot (unity_SHBg, tmpvar_27);
  x1_26.z = dot (unity_SHBb, tmpvar_27);
  res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )));
  mediump vec3 tmpvar_28;
  tmpvar_28 = max (((1.055 * 
    pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_24 = tmpvar_28;
  ambient_22 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_28));
  tmpvar_1 = ambient_22;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_6;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_22;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6 = tmpvar_8;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_9;
  lowp vec4 c_10;
  lowp float diff_11;
  mediump float tmpvar_12;
  tmpvar_12 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_11 = tmpvar_12;
  c_10.xyz = ((col_6.xyz * tmpvar_1) * diff_11);
  c_10.w = col_6.w;
  c_9.w = c_10.w;
  c_9.xyz = (c_10.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.xz = _glesMultiTexCoord0.xx;
  result_2.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 lightColor0_7;
  lightColor0_7 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_8;
  lightColor1_8 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_9;
  lightColor2_9 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_10;
  lightColor3_10 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_11;
  lightAttenSq_11 = unity_4LightAtten0;
  highp vec3 col_12;
  highp vec4 ndotl_13;
  highp vec4 lengthSq_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_4LightPosX0 - tmpvar_4.x);
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosY0 - tmpvar_4.y);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosZ0 - tmpvar_4.z);
  lengthSq_14 = (tmpvar_15 * tmpvar_15);
  lengthSq_14 = (lengthSq_14 + (tmpvar_16 * tmpvar_16));
  lengthSq_14 = (lengthSq_14 + (tmpvar_17 * tmpvar_17));
  highp vec4 tmpvar_18;
  tmpvar_18 = max (lengthSq_14, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_14 = tmpvar_18;
  ndotl_13 = (tmpvar_15 * tmpvar_6.x);
  ndotl_13 = (ndotl_13 + (tmpvar_16 * tmpvar_6.y));
  ndotl_13 = (ndotl_13 + (tmpvar_17 * tmpvar_6.z));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_13 * inversesqrt(tmpvar_18)));
  ndotl_13 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = (tmpvar_19 * (1.0/((1.0 + 
    (tmpvar_18 * lightAttenSq_11)
  ))));
  col_12 = (lightColor0_7 * tmpvar_20.x);
  col_12 = (col_12 + (lightColor1_8 * tmpvar_20.y));
  col_12 = (col_12 + (lightColor2_9 * tmpvar_20.z));
  col_12 = (col_12 + (lightColor3_10 * tmpvar_20.w));
  tmpvar_1 = col_12;
  mediump vec3 normal_21;
  normal_21 = tmpvar_6;
  mediump vec3 ambient_22;
  mediump vec4 tmpvar_23;
  tmpvar_23.w = 1.0;
  tmpvar_23.xyz = normal_21;
  mediump vec3 res_24;
  mediump vec3 x_25;
  x_25.x = dot (unity_SHAr, tmpvar_23);
  x_25.y = dot (unity_SHAg, tmpvar_23);
  x_25.z = dot (unity_SHAb, tmpvar_23);
  mediump vec3 x1_26;
  mediump vec4 tmpvar_27;
  tmpvar_27 = (normal_21.xyzz * normal_21.yzzx);
  x1_26.x = dot (unity_SHBr, tmpvar_27);
  x1_26.y = dot (unity_SHBg, tmpvar_27);
  x1_26.z = dot (unity_SHBb, tmpvar_27);
  res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )));
  mediump vec3 tmpvar_28;
  tmpvar_28 = max (((1.055 * 
    pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_24 = tmpvar_28;
  ambient_22 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_28));
  tmpvar_1 = ambient_22;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_6;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_22;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6 = tmpvar_8;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_9;
  lowp vec4 c_10;
  lowp float diff_11;
  mediump float tmpvar_12;
  tmpvar_12 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_11 = tmpvar_12;
  c_10.xyz = ((col_6.xyz * tmpvar_1) * diff_11);
  c_10.w = col_6.w;
  c_9.w = c_10.w;
  c_9.xyz = (c_10.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.xz = _glesMultiTexCoord0.xx;
  result_2.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 lightColor0_7;
  lightColor0_7 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_8;
  lightColor1_8 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_9;
  lightColor2_9 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_10;
  lightColor3_10 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_11;
  lightAttenSq_11 = unity_4LightAtten0;
  highp vec3 col_12;
  highp vec4 ndotl_13;
  highp vec4 lengthSq_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_4LightPosX0 - tmpvar_4.x);
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosY0 - tmpvar_4.y);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosZ0 - tmpvar_4.z);
  lengthSq_14 = (tmpvar_15 * tmpvar_15);
  lengthSq_14 = (lengthSq_14 + (tmpvar_16 * tmpvar_16));
  lengthSq_14 = (lengthSq_14 + (tmpvar_17 * tmpvar_17));
  highp vec4 tmpvar_18;
  tmpvar_18 = max (lengthSq_14, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_14 = tmpvar_18;
  ndotl_13 = (tmpvar_15 * tmpvar_6.x);
  ndotl_13 = (ndotl_13 + (tmpvar_16 * tmpvar_6.y));
  ndotl_13 = (ndotl_13 + (tmpvar_17 * tmpvar_6.z));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_13 * inversesqrt(tmpvar_18)));
  ndotl_13 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = (tmpvar_19 * (1.0/((1.0 + 
    (tmpvar_18 * lightAttenSq_11)
  ))));
  col_12 = (lightColor0_7 * tmpvar_20.x);
  col_12 = (col_12 + (lightColor1_8 * tmpvar_20.y));
  col_12 = (col_12 + (lightColor2_9 * tmpvar_20.z));
  col_12 = (col_12 + (lightColor3_10 * tmpvar_20.w));
  tmpvar_1 = col_12;
  mediump vec3 normal_21;
  normal_21 = tmpvar_6;
  mediump vec3 ambient_22;
  mediump vec4 tmpvar_23;
  tmpvar_23.w = 1.0;
  tmpvar_23.xyz = normal_21;
  mediump vec3 res_24;
  mediump vec3 x_25;
  x_25.x = dot (unity_SHAr, tmpvar_23);
  x_25.y = dot (unity_SHAg, tmpvar_23);
  x_25.z = dot (unity_SHAb, tmpvar_23);
  mediump vec3 x1_26;
  mediump vec4 tmpvar_27;
  tmpvar_27 = (normal_21.xyzz * normal_21.yzzx);
  x1_26.x = dot (unity_SHBr, tmpvar_27);
  x1_26.y = dot (unity_SHBg, tmpvar_27);
  x1_26.z = dot (unity_SHBb, tmpvar_27);
  res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )));
  mediump vec3 tmpvar_28;
  tmpvar_28 = max (((1.055 * 
    pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_24 = tmpvar_28;
  ambient_22 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_28));
  tmpvar_1 = ambient_22;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_6;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_22;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6 = tmpvar_8;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_9;
  lowp vec4 c_10;
  lowp float diff_11;
  mediump float tmpvar_12;
  tmpvar_12 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_11 = tmpvar_12;
  c_10.xyz = ((col_6.xyz * tmpvar_1) * diff_11);
  c_10.w = col_6.w;
  c_9.w = c_10.w;
  c_9.xyz = (c_10.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = c_15.xyz;
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = c_15.xyz;
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = c_15.xyz;
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize((_glesNormal * tmpvar_3));
  mediump vec3 normal_5;
  normal_5 = tmpvar_4;
  mediump vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = normal_5;
  mediump vec3 res_7;
  mediump vec3 x_8;
  x_8.x = dot (unity_SHAr, tmpvar_6);
  x_8.y = dot (unity_SHAg, tmpvar_6);
  x_8.z = dot (unity_SHAb, tmpvar_6);
  mediump vec3 x1_9;
  mediump vec4 tmpvar_10;
  tmpvar_10 = (normal_5.xyzz * normal_5.yzzx);
  x1_9.x = dot (unity_SHBr, tmpvar_10);
  x1_9.y = dot (unity_SHBg, tmpvar_10);
  x1_9.z = dot (unity_SHBb, tmpvar_10);
  res_7 = (x_8 + (x1_9 + (unity_SHC.xyz * 
    ((normal_5.x * normal_5.x) - (normal_5.y * normal_5.y))
  )));
  mediump vec3 tmpvar_11;
  tmpvar_11 = max (((1.055 * 
    pow (max (res_7, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_7 = tmpvar_11;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_11);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = (c_15.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize((_glesNormal * tmpvar_3));
  mediump vec3 normal_5;
  normal_5 = tmpvar_4;
  mediump vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = normal_5;
  mediump vec3 res_7;
  mediump vec3 x_8;
  x_8.x = dot (unity_SHAr, tmpvar_6);
  x_8.y = dot (unity_SHAg, tmpvar_6);
  x_8.z = dot (unity_SHAb, tmpvar_6);
  mediump vec3 x1_9;
  mediump vec4 tmpvar_10;
  tmpvar_10 = (normal_5.xyzz * normal_5.yzzx);
  x1_9.x = dot (unity_SHBr, tmpvar_10);
  x1_9.y = dot (unity_SHBg, tmpvar_10);
  x1_9.z = dot (unity_SHBb, tmpvar_10);
  res_7 = (x_8 + (x1_9 + (unity_SHC.xyz * 
    ((normal_5.x * normal_5.x) - (normal_5.y * normal_5.y))
  )));
  mediump vec3 tmpvar_11;
  tmpvar_11 = max (((1.055 * 
    pow (max (res_7, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_7 = tmpvar_11;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_11);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = (c_15.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize((_glesNormal * tmpvar_3));
  mediump vec3 normal_5;
  normal_5 = tmpvar_4;
  mediump vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = normal_5;
  mediump vec3 res_7;
  mediump vec3 x_8;
  x_8.x = dot (unity_SHAr, tmpvar_6);
  x_8.y = dot (unity_SHAg, tmpvar_6);
  x_8.z = dot (unity_SHAb, tmpvar_6);
  mediump vec3 x1_9;
  mediump vec4 tmpvar_10;
  tmpvar_10 = (normal_5.xyzz * normal_5.yzzx);
  x1_9.x = dot (unity_SHBr, tmpvar_10);
  x1_9.y = dot (unity_SHBg, tmpvar_10);
  x1_9.z = dot (unity_SHBb, tmpvar_10);
  res_7 = (x_8 + (x1_9 + (unity_SHC.xyz * 
    ((normal_5.x * normal_5.x) - (normal_5.y * normal_5.y))
  )));
  mediump vec3 tmpvar_11;
  tmpvar_11 = max (((1.055 * 
    pow (max (res_7, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_7 = tmpvar_11;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_11);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = (c_15.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.xz = _glesMultiTexCoord0.xx;
  result_2.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 lightColor0_7;
  lightColor0_7 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_8;
  lightColor1_8 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_9;
  lightColor2_9 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_10;
  lightColor3_10 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_11;
  lightAttenSq_11 = unity_4LightAtten0;
  highp vec3 col_12;
  highp vec4 ndotl_13;
  highp vec4 lengthSq_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_4LightPosX0 - tmpvar_4.x);
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosY0 - tmpvar_4.y);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosZ0 - tmpvar_4.z);
  lengthSq_14 = (tmpvar_15 * tmpvar_15);
  lengthSq_14 = (lengthSq_14 + (tmpvar_16 * tmpvar_16));
  lengthSq_14 = (lengthSq_14 + (tmpvar_17 * tmpvar_17));
  highp vec4 tmpvar_18;
  tmpvar_18 = max (lengthSq_14, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_14 = tmpvar_18;
  ndotl_13 = (tmpvar_15 * tmpvar_6.x);
  ndotl_13 = (ndotl_13 + (tmpvar_16 * tmpvar_6.y));
  ndotl_13 = (ndotl_13 + (tmpvar_17 * tmpvar_6.z));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_13 * inversesqrt(tmpvar_18)));
  ndotl_13 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = (tmpvar_19 * (1.0/((1.0 + 
    (tmpvar_18 * lightAttenSq_11)
  ))));
  col_12 = (lightColor0_7 * tmpvar_20.x);
  col_12 = (col_12 + (lightColor1_8 * tmpvar_20.y));
  col_12 = (col_12 + (lightColor2_9 * tmpvar_20.z));
  col_12 = (col_12 + (lightColor3_10 * tmpvar_20.w));
  tmpvar_1 = col_12;
  mediump vec3 normal_21;
  normal_21 = tmpvar_6;
  mediump vec3 ambient_22;
  mediump vec4 tmpvar_23;
  tmpvar_23.w = 1.0;
  tmpvar_23.xyz = normal_21;
  mediump vec3 res_24;
  mediump vec3 x_25;
  x_25.x = dot (unity_SHAr, tmpvar_23);
  x_25.y = dot (unity_SHAg, tmpvar_23);
  x_25.z = dot (unity_SHAb, tmpvar_23);
  mediump vec3 x1_26;
  mediump vec4 tmpvar_27;
  tmpvar_27 = (normal_21.xyzz * normal_21.yzzx);
  x1_26.x = dot (unity_SHBr, tmpvar_27);
  x1_26.y = dot (unity_SHBg, tmpvar_27);
  x1_26.z = dot (unity_SHBb, tmpvar_27);
  res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )));
  mediump vec3 tmpvar_28;
  tmpvar_28 = max (((1.055 * 
    pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_24 = tmpvar_28;
  ambient_22 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_28));
  tmpvar_1 = ambient_22;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_6;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_22;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = (c_15.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.xz = _glesMultiTexCoord0.xx;
  result_2.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 lightColor0_7;
  lightColor0_7 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_8;
  lightColor1_8 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_9;
  lightColor2_9 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_10;
  lightColor3_10 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_11;
  lightAttenSq_11 = unity_4LightAtten0;
  highp vec3 col_12;
  highp vec4 ndotl_13;
  highp vec4 lengthSq_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_4LightPosX0 - tmpvar_4.x);
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosY0 - tmpvar_4.y);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosZ0 - tmpvar_4.z);
  lengthSq_14 = (tmpvar_15 * tmpvar_15);
  lengthSq_14 = (lengthSq_14 + (tmpvar_16 * tmpvar_16));
  lengthSq_14 = (lengthSq_14 + (tmpvar_17 * tmpvar_17));
  highp vec4 tmpvar_18;
  tmpvar_18 = max (lengthSq_14, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_14 = tmpvar_18;
  ndotl_13 = (tmpvar_15 * tmpvar_6.x);
  ndotl_13 = (ndotl_13 + (tmpvar_16 * tmpvar_6.y));
  ndotl_13 = (ndotl_13 + (tmpvar_17 * tmpvar_6.z));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_13 * inversesqrt(tmpvar_18)));
  ndotl_13 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = (tmpvar_19 * (1.0/((1.0 + 
    (tmpvar_18 * lightAttenSq_11)
  ))));
  col_12 = (lightColor0_7 * tmpvar_20.x);
  col_12 = (col_12 + (lightColor1_8 * tmpvar_20.y));
  col_12 = (col_12 + (lightColor2_9 * tmpvar_20.z));
  col_12 = (col_12 + (lightColor3_10 * tmpvar_20.w));
  tmpvar_1 = col_12;
  mediump vec3 normal_21;
  normal_21 = tmpvar_6;
  mediump vec3 ambient_22;
  mediump vec4 tmpvar_23;
  tmpvar_23.w = 1.0;
  tmpvar_23.xyz = normal_21;
  mediump vec3 res_24;
  mediump vec3 x_25;
  x_25.x = dot (unity_SHAr, tmpvar_23);
  x_25.y = dot (unity_SHAg, tmpvar_23);
  x_25.z = dot (unity_SHAb, tmpvar_23);
  mediump vec3 x1_26;
  mediump vec4 tmpvar_27;
  tmpvar_27 = (normal_21.xyzz * normal_21.yzzx);
  x1_26.x = dot (unity_SHBr, tmpvar_27);
  x1_26.y = dot (unity_SHBg, tmpvar_27);
  x1_26.z = dot (unity_SHBb, tmpvar_27);
  res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )));
  mediump vec3 tmpvar_28;
  tmpvar_28 = max (((1.055 * 
    pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_24 = tmpvar_28;
  ambient_22 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_28));
  tmpvar_1 = ambient_22;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_6;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_22;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = (c_15.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.xz = _glesMultiTexCoord0.xx;
  result_2.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 lightColor0_7;
  lightColor0_7 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_8;
  lightColor1_8 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_9;
  lightColor2_9 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_10;
  lightColor3_10 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_11;
  lightAttenSq_11 = unity_4LightAtten0;
  highp vec3 col_12;
  highp vec4 ndotl_13;
  highp vec4 lengthSq_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_4LightPosX0 - tmpvar_4.x);
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosY0 - tmpvar_4.y);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosZ0 - tmpvar_4.z);
  lengthSq_14 = (tmpvar_15 * tmpvar_15);
  lengthSq_14 = (lengthSq_14 + (tmpvar_16 * tmpvar_16));
  lengthSq_14 = (lengthSq_14 + (tmpvar_17 * tmpvar_17));
  highp vec4 tmpvar_18;
  tmpvar_18 = max (lengthSq_14, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_14 = tmpvar_18;
  ndotl_13 = (tmpvar_15 * tmpvar_6.x);
  ndotl_13 = (ndotl_13 + (tmpvar_16 * tmpvar_6.y));
  ndotl_13 = (ndotl_13 + (tmpvar_17 * tmpvar_6.z));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_13 * inversesqrt(tmpvar_18)));
  ndotl_13 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = (tmpvar_19 * (1.0/((1.0 + 
    (tmpvar_18 * lightAttenSq_11)
  ))));
  col_12 = (lightColor0_7 * tmpvar_20.x);
  col_12 = (col_12 + (lightColor1_8 * tmpvar_20.y));
  col_12 = (col_12 + (lightColor2_9 * tmpvar_20.z));
  col_12 = (col_12 + (lightColor3_10 * tmpvar_20.w));
  tmpvar_1 = col_12;
  mediump vec3 normal_21;
  normal_21 = tmpvar_6;
  mediump vec3 ambient_22;
  mediump vec4 tmpvar_23;
  tmpvar_23.w = 1.0;
  tmpvar_23.xyz = normal_21;
  mediump vec3 res_24;
  mediump vec3 x_25;
  x_25.x = dot (unity_SHAr, tmpvar_23);
  x_25.y = dot (unity_SHAg, tmpvar_23);
  x_25.z = dot (unity_SHAb, tmpvar_23);
  mediump vec3 x1_26;
  mediump vec4 tmpvar_27;
  tmpvar_27 = (normal_21.xyzz * normal_21.yzzx);
  x1_26.x = dot (unity_SHBr, tmpvar_27);
  x1_26.y = dot (unity_SHBg, tmpvar_27);
  x1_26.z = dot (unity_SHBb, tmpvar_27);
  res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )));
  mediump vec3 tmpvar_28;
  tmpvar_28 = max (((1.055 * 
    pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_24 = tmpvar_28;
  ambient_22 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_28));
  tmpvar_1 = ambient_22;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_6;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_22;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = (c_15.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_10;
  lowp vec4 c_11;
  lowp float diff_12;
  mediump float tmpvar_13;
  tmpvar_13 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_12 = tmpvar_13;
  c_11.xyz = ((col_6.xyz * tmpvar_1) * diff_12);
  c_11.w = col_6.w;
  c_10.w = c_11.w;
  c_10.xyz = c_11.xyz;
  gl_FragData[0] = c_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_10;
  lowp vec4 c_11;
  lowp float diff_12;
  mediump float tmpvar_13;
  tmpvar_13 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_12 = tmpvar_13;
  c_11.xyz = ((col_6.xyz * tmpvar_1) * diff_12);
  c_11.w = col_6.w;
  c_10.w = c_11.w;
  c_10.xyz = c_11.xyz;
  gl_FragData[0] = c_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_10;
  lowp vec4 c_11;
  lowp float diff_12;
  mediump float tmpvar_13;
  tmpvar_13 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_12 = tmpvar_13;
  c_11.xyz = ((col_6.xyz * tmpvar_1) * diff_12);
  c_11.w = col_6.w;
  c_10.w = c_11.w;
  c_10.xyz = c_11.xyz;
  gl_FragData[0] = c_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize((_glesNormal * tmpvar_3));
  mediump vec3 normal_5;
  normal_5 = tmpvar_4;
  mediump vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = normal_5;
  mediump vec3 res_7;
  mediump vec3 x_8;
  x_8.x = dot (unity_SHAr, tmpvar_6);
  x_8.y = dot (unity_SHAg, tmpvar_6);
  x_8.z = dot (unity_SHAb, tmpvar_6);
  mediump vec3 x1_9;
  mediump vec4 tmpvar_10;
  tmpvar_10 = (normal_5.xyzz * normal_5.yzzx);
  x1_9.x = dot (unity_SHBr, tmpvar_10);
  x1_9.y = dot (unity_SHBg, tmpvar_10);
  x1_9.z = dot (unity_SHBb, tmpvar_10);
  res_7 = (x_8 + (x1_9 + (unity_SHC.xyz * 
    ((normal_5.x * normal_5.x) - (normal_5.y * normal_5.y))
  )));
  mediump vec3 tmpvar_11;
  tmpvar_11 = max (((1.055 * 
    pow (max (res_7, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_7 = tmpvar_11;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_11);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_10;
  lowp vec4 c_11;
  lowp float diff_12;
  mediump float tmpvar_13;
  tmpvar_13 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_12 = tmpvar_13;
  c_11.xyz = ((col_6.xyz * tmpvar_1) * diff_12);
  c_11.w = col_6.w;
  c_10.w = c_11.w;
  c_10.xyz = (c_11.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize((_glesNormal * tmpvar_3));
  mediump vec3 normal_5;
  normal_5 = tmpvar_4;
  mediump vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = normal_5;
  mediump vec3 res_7;
  mediump vec3 x_8;
  x_8.x = dot (unity_SHAr, tmpvar_6);
  x_8.y = dot (unity_SHAg, tmpvar_6);
  x_8.z = dot (unity_SHAb, tmpvar_6);
  mediump vec3 x1_9;
  mediump vec4 tmpvar_10;
  tmpvar_10 = (normal_5.xyzz * normal_5.yzzx);
  x1_9.x = dot (unity_SHBr, tmpvar_10);
  x1_9.y = dot (unity_SHBg, tmpvar_10);
  x1_9.z = dot (unity_SHBb, tmpvar_10);
  res_7 = (x_8 + (x1_9 + (unity_SHC.xyz * 
    ((normal_5.x * normal_5.x) - (normal_5.y * normal_5.y))
  )));
  mediump vec3 tmpvar_11;
  tmpvar_11 = max (((1.055 * 
    pow (max (res_7, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_7 = tmpvar_11;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_11);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_10;
  lowp vec4 c_11;
  lowp float diff_12;
  mediump float tmpvar_13;
  tmpvar_13 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_12 = tmpvar_13;
  c_11.xyz = ((col_6.xyz * tmpvar_1) * diff_12);
  c_11.w = col_6.w;
  c_10.w = c_11.w;
  c_10.xyz = (c_11.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize((_glesNormal * tmpvar_3));
  mediump vec3 normal_5;
  normal_5 = tmpvar_4;
  mediump vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = normal_5;
  mediump vec3 res_7;
  mediump vec3 x_8;
  x_8.x = dot (unity_SHAr, tmpvar_6);
  x_8.y = dot (unity_SHAg, tmpvar_6);
  x_8.z = dot (unity_SHAb, tmpvar_6);
  mediump vec3 x1_9;
  mediump vec4 tmpvar_10;
  tmpvar_10 = (normal_5.xyzz * normal_5.yzzx);
  x1_9.x = dot (unity_SHBr, tmpvar_10);
  x1_9.y = dot (unity_SHBg, tmpvar_10);
  x1_9.z = dot (unity_SHBb, tmpvar_10);
  res_7 = (x_8 + (x1_9 + (unity_SHC.xyz * 
    ((normal_5.x * normal_5.x) - (normal_5.y * normal_5.y))
  )));
  mediump vec3 tmpvar_11;
  tmpvar_11 = max (((1.055 * 
    pow (max (res_7, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_7 = tmpvar_11;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_11);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_10;
  lowp vec4 c_11;
  lowp float diff_12;
  mediump float tmpvar_13;
  tmpvar_13 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_12 = tmpvar_13;
  c_11.xyz = ((col_6.xyz * tmpvar_1) * diff_12);
  c_11.w = col_6.w;
  c_10.w = c_11.w;
  c_10.xyz = (c_11.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.xz = _glesMultiTexCoord0.xx;
  result_2.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 lightColor0_7;
  lightColor0_7 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_8;
  lightColor1_8 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_9;
  lightColor2_9 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_10;
  lightColor3_10 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_11;
  lightAttenSq_11 = unity_4LightAtten0;
  highp vec3 col_12;
  highp vec4 ndotl_13;
  highp vec4 lengthSq_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_4LightPosX0 - tmpvar_4.x);
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosY0 - tmpvar_4.y);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosZ0 - tmpvar_4.z);
  lengthSq_14 = (tmpvar_15 * tmpvar_15);
  lengthSq_14 = (lengthSq_14 + (tmpvar_16 * tmpvar_16));
  lengthSq_14 = (lengthSq_14 + (tmpvar_17 * tmpvar_17));
  highp vec4 tmpvar_18;
  tmpvar_18 = max (lengthSq_14, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_14 = tmpvar_18;
  ndotl_13 = (tmpvar_15 * tmpvar_6.x);
  ndotl_13 = (ndotl_13 + (tmpvar_16 * tmpvar_6.y));
  ndotl_13 = (ndotl_13 + (tmpvar_17 * tmpvar_6.z));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_13 * inversesqrt(tmpvar_18)));
  ndotl_13 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = (tmpvar_19 * (1.0/((1.0 + 
    (tmpvar_18 * lightAttenSq_11)
  ))));
  col_12 = (lightColor0_7 * tmpvar_20.x);
  col_12 = (col_12 + (lightColor1_8 * tmpvar_20.y));
  col_12 = (col_12 + (lightColor2_9 * tmpvar_20.z));
  col_12 = (col_12 + (lightColor3_10 * tmpvar_20.w));
  tmpvar_1 = col_12;
  mediump vec3 normal_21;
  normal_21 = tmpvar_6;
  mediump vec3 ambient_22;
  mediump vec4 tmpvar_23;
  tmpvar_23.w = 1.0;
  tmpvar_23.xyz = normal_21;
  mediump vec3 res_24;
  mediump vec3 x_25;
  x_25.x = dot (unity_SHAr, tmpvar_23);
  x_25.y = dot (unity_SHAg, tmpvar_23);
  x_25.z = dot (unity_SHAb, tmpvar_23);
  mediump vec3 x1_26;
  mediump vec4 tmpvar_27;
  tmpvar_27 = (normal_21.xyzz * normal_21.yzzx);
  x1_26.x = dot (unity_SHBr, tmpvar_27);
  x1_26.y = dot (unity_SHBg, tmpvar_27);
  x1_26.z = dot (unity_SHBb, tmpvar_27);
  res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )));
  mediump vec3 tmpvar_28;
  tmpvar_28 = max (((1.055 * 
    pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_24 = tmpvar_28;
  ambient_22 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_28));
  tmpvar_1 = ambient_22;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_6;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_22;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_10;
  lowp vec4 c_11;
  lowp float diff_12;
  mediump float tmpvar_13;
  tmpvar_13 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_12 = tmpvar_13;
  c_11.xyz = ((col_6.xyz * tmpvar_1) * diff_12);
  c_11.w = col_6.w;
  c_10.w = c_11.w;
  c_10.xyz = (c_11.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.xz = _glesMultiTexCoord0.xx;
  result_2.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 lightColor0_7;
  lightColor0_7 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_8;
  lightColor1_8 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_9;
  lightColor2_9 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_10;
  lightColor3_10 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_11;
  lightAttenSq_11 = unity_4LightAtten0;
  highp vec3 col_12;
  highp vec4 ndotl_13;
  highp vec4 lengthSq_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_4LightPosX0 - tmpvar_4.x);
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosY0 - tmpvar_4.y);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosZ0 - tmpvar_4.z);
  lengthSq_14 = (tmpvar_15 * tmpvar_15);
  lengthSq_14 = (lengthSq_14 + (tmpvar_16 * tmpvar_16));
  lengthSq_14 = (lengthSq_14 + (tmpvar_17 * tmpvar_17));
  highp vec4 tmpvar_18;
  tmpvar_18 = max (lengthSq_14, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_14 = tmpvar_18;
  ndotl_13 = (tmpvar_15 * tmpvar_6.x);
  ndotl_13 = (ndotl_13 + (tmpvar_16 * tmpvar_6.y));
  ndotl_13 = (ndotl_13 + (tmpvar_17 * tmpvar_6.z));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_13 * inversesqrt(tmpvar_18)));
  ndotl_13 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = (tmpvar_19 * (1.0/((1.0 + 
    (tmpvar_18 * lightAttenSq_11)
  ))));
  col_12 = (lightColor0_7 * tmpvar_20.x);
  col_12 = (col_12 + (lightColor1_8 * tmpvar_20.y));
  col_12 = (col_12 + (lightColor2_9 * tmpvar_20.z));
  col_12 = (col_12 + (lightColor3_10 * tmpvar_20.w));
  tmpvar_1 = col_12;
  mediump vec3 normal_21;
  normal_21 = tmpvar_6;
  mediump vec3 ambient_22;
  mediump vec4 tmpvar_23;
  tmpvar_23.w = 1.0;
  tmpvar_23.xyz = normal_21;
  mediump vec3 res_24;
  mediump vec3 x_25;
  x_25.x = dot (unity_SHAr, tmpvar_23);
  x_25.y = dot (unity_SHAg, tmpvar_23);
  x_25.z = dot (unity_SHAb, tmpvar_23);
  mediump vec3 x1_26;
  mediump vec4 tmpvar_27;
  tmpvar_27 = (normal_21.xyzz * normal_21.yzzx);
  x1_26.x = dot (unity_SHBr, tmpvar_27);
  x1_26.y = dot (unity_SHBg, tmpvar_27);
  x1_26.z = dot (unity_SHBb, tmpvar_27);
  res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )));
  mediump vec3 tmpvar_28;
  tmpvar_28 = max (((1.055 * 
    pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_24 = tmpvar_28;
  ambient_22 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_28));
  tmpvar_1 = ambient_22;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_6;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_22;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_10;
  lowp vec4 c_11;
  lowp float diff_12;
  mediump float tmpvar_13;
  tmpvar_13 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_12 = tmpvar_13;
  c_11.xyz = ((col_6.xyz * tmpvar_1) * diff_12);
  c_11.w = col_6.w;
  c_10.w = c_11.w;
  c_10.xyz = (c_11.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.xz = _glesMultiTexCoord0.xx;
  result_2.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 lightColor0_7;
  lightColor0_7 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_8;
  lightColor1_8 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_9;
  lightColor2_9 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_10;
  lightColor3_10 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_11;
  lightAttenSq_11 = unity_4LightAtten0;
  highp vec3 col_12;
  highp vec4 ndotl_13;
  highp vec4 lengthSq_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_4LightPosX0 - tmpvar_4.x);
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosY0 - tmpvar_4.y);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosZ0 - tmpvar_4.z);
  lengthSq_14 = (tmpvar_15 * tmpvar_15);
  lengthSq_14 = (lengthSq_14 + (tmpvar_16 * tmpvar_16));
  lengthSq_14 = (lengthSq_14 + (tmpvar_17 * tmpvar_17));
  highp vec4 tmpvar_18;
  tmpvar_18 = max (lengthSq_14, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_14 = tmpvar_18;
  ndotl_13 = (tmpvar_15 * tmpvar_6.x);
  ndotl_13 = (ndotl_13 + (tmpvar_16 * tmpvar_6.y));
  ndotl_13 = (ndotl_13 + (tmpvar_17 * tmpvar_6.z));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_13 * inversesqrt(tmpvar_18)));
  ndotl_13 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = (tmpvar_19 * (1.0/((1.0 + 
    (tmpvar_18 * lightAttenSq_11)
  ))));
  col_12 = (lightColor0_7 * tmpvar_20.x);
  col_12 = (col_12 + (lightColor1_8 * tmpvar_20.y));
  col_12 = (col_12 + (lightColor2_9 * tmpvar_20.z));
  col_12 = (col_12 + (lightColor3_10 * tmpvar_20.w));
  tmpvar_1 = col_12;
  mediump vec3 normal_21;
  normal_21 = tmpvar_6;
  mediump vec3 ambient_22;
  mediump vec4 tmpvar_23;
  tmpvar_23.w = 1.0;
  tmpvar_23.xyz = normal_21;
  mediump vec3 res_24;
  mediump vec3 x_25;
  x_25.x = dot (unity_SHAr, tmpvar_23);
  x_25.y = dot (unity_SHAg, tmpvar_23);
  x_25.z = dot (unity_SHAb, tmpvar_23);
  mediump vec3 x1_26;
  mediump vec4 tmpvar_27;
  tmpvar_27 = (normal_21.xyzz * normal_21.yzzx);
  x1_26.x = dot (unity_SHBr, tmpvar_27);
  x1_26.y = dot (unity_SHBg, tmpvar_27);
  x1_26.z = dot (unity_SHBb, tmpvar_27);
  res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )));
  mediump vec3 tmpvar_28;
  tmpvar_28 = max (((1.055 * 
    pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_24 = tmpvar_28;
  ambient_22 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_28));
  tmpvar_1 = ambient_22;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_6;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_22;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_10;
  lowp vec4 c_11;
  lowp float diff_12;
  mediump float tmpvar_13;
  tmpvar_13 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_12 = tmpvar_13;
  c_11.xyz = ((col_6.xyz * tmpvar_1) * diff_12);
  c_11.w = col_6.w;
  c_10.w = c_11.w;
  c_10.xyz = (c_11.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = c_15.xyz;
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = c_15.xyz;
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = c_15.xyz;
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize((_glesNormal * tmpvar_3));
  mediump vec3 normal_5;
  normal_5 = tmpvar_4;
  mediump vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = normal_5;
  mediump vec3 res_7;
  mediump vec3 x_8;
  x_8.x = dot (unity_SHAr, tmpvar_6);
  x_8.y = dot (unity_SHAg, tmpvar_6);
  x_8.z = dot (unity_SHAb, tmpvar_6);
  mediump vec3 x1_9;
  mediump vec4 tmpvar_10;
  tmpvar_10 = (normal_5.xyzz * normal_5.yzzx);
  x1_9.x = dot (unity_SHBr, tmpvar_10);
  x1_9.y = dot (unity_SHBg, tmpvar_10);
  x1_9.z = dot (unity_SHBb, tmpvar_10);
  res_7 = (x_8 + (x1_9 + (unity_SHC.xyz * 
    ((normal_5.x * normal_5.x) - (normal_5.y * normal_5.y))
  )));
  mediump vec3 tmpvar_11;
  tmpvar_11 = max (((1.055 * 
    pow (max (res_7, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_7 = tmpvar_11;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_11);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = (c_15.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize((_glesNormal * tmpvar_3));
  mediump vec3 normal_5;
  normal_5 = tmpvar_4;
  mediump vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = normal_5;
  mediump vec3 res_7;
  mediump vec3 x_8;
  x_8.x = dot (unity_SHAr, tmpvar_6);
  x_8.y = dot (unity_SHAg, tmpvar_6);
  x_8.z = dot (unity_SHAb, tmpvar_6);
  mediump vec3 x1_9;
  mediump vec4 tmpvar_10;
  tmpvar_10 = (normal_5.xyzz * normal_5.yzzx);
  x1_9.x = dot (unity_SHBr, tmpvar_10);
  x1_9.y = dot (unity_SHBg, tmpvar_10);
  x1_9.z = dot (unity_SHBb, tmpvar_10);
  res_7 = (x_8 + (x1_9 + (unity_SHC.xyz * 
    ((normal_5.x * normal_5.x) - (normal_5.y * normal_5.y))
  )));
  mediump vec3 tmpvar_11;
  tmpvar_11 = max (((1.055 * 
    pow (max (res_7, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_7 = tmpvar_11;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_11);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = (c_15.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize((_glesNormal * tmpvar_3));
  mediump vec3 normal_5;
  normal_5 = tmpvar_4;
  mediump vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = normal_5;
  mediump vec3 res_7;
  mediump vec3 x_8;
  x_8.x = dot (unity_SHAr, tmpvar_6);
  x_8.y = dot (unity_SHAg, tmpvar_6);
  x_8.z = dot (unity_SHAb, tmpvar_6);
  mediump vec3 x1_9;
  mediump vec4 tmpvar_10;
  tmpvar_10 = (normal_5.xyzz * normal_5.yzzx);
  x1_9.x = dot (unity_SHBr, tmpvar_10);
  x1_9.y = dot (unity_SHBg, tmpvar_10);
  x1_9.z = dot (unity_SHBb, tmpvar_10);
  res_7 = (x_8 + (x1_9 + (unity_SHC.xyz * 
    ((normal_5.x * normal_5.x) - (normal_5.y * normal_5.y))
  )));
  mediump vec3 tmpvar_11;
  tmpvar_11 = max (((1.055 * 
    pow (max (res_7, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_7 = tmpvar_11;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_11);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = (c_15.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.xz = _glesMultiTexCoord0.xx;
  result_2.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 lightColor0_7;
  lightColor0_7 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_8;
  lightColor1_8 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_9;
  lightColor2_9 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_10;
  lightColor3_10 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_11;
  lightAttenSq_11 = unity_4LightAtten0;
  highp vec3 col_12;
  highp vec4 ndotl_13;
  highp vec4 lengthSq_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_4LightPosX0 - tmpvar_4.x);
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosY0 - tmpvar_4.y);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosZ0 - tmpvar_4.z);
  lengthSq_14 = (tmpvar_15 * tmpvar_15);
  lengthSq_14 = (lengthSq_14 + (tmpvar_16 * tmpvar_16));
  lengthSq_14 = (lengthSq_14 + (tmpvar_17 * tmpvar_17));
  highp vec4 tmpvar_18;
  tmpvar_18 = max (lengthSq_14, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_14 = tmpvar_18;
  ndotl_13 = (tmpvar_15 * tmpvar_6.x);
  ndotl_13 = (ndotl_13 + (tmpvar_16 * tmpvar_6.y));
  ndotl_13 = (ndotl_13 + (tmpvar_17 * tmpvar_6.z));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_13 * inversesqrt(tmpvar_18)));
  ndotl_13 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = (tmpvar_19 * (1.0/((1.0 + 
    (tmpvar_18 * lightAttenSq_11)
  ))));
  col_12 = (lightColor0_7 * tmpvar_20.x);
  col_12 = (col_12 + (lightColor1_8 * tmpvar_20.y));
  col_12 = (col_12 + (lightColor2_9 * tmpvar_20.z));
  col_12 = (col_12 + (lightColor3_10 * tmpvar_20.w));
  tmpvar_1 = col_12;
  mediump vec3 normal_21;
  normal_21 = tmpvar_6;
  mediump vec3 ambient_22;
  mediump vec4 tmpvar_23;
  tmpvar_23.w = 1.0;
  tmpvar_23.xyz = normal_21;
  mediump vec3 res_24;
  mediump vec3 x_25;
  x_25.x = dot (unity_SHAr, tmpvar_23);
  x_25.y = dot (unity_SHAg, tmpvar_23);
  x_25.z = dot (unity_SHAb, tmpvar_23);
  mediump vec3 x1_26;
  mediump vec4 tmpvar_27;
  tmpvar_27 = (normal_21.xyzz * normal_21.yzzx);
  x1_26.x = dot (unity_SHBr, tmpvar_27);
  x1_26.y = dot (unity_SHBg, tmpvar_27);
  x1_26.z = dot (unity_SHBb, tmpvar_27);
  res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )));
  mediump vec3 tmpvar_28;
  tmpvar_28 = max (((1.055 * 
    pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_24 = tmpvar_28;
  ambient_22 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_28));
  tmpvar_1 = ambient_22;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_6;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_22;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = (c_15.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.xz = _glesMultiTexCoord0.xx;
  result_2.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 lightColor0_7;
  lightColor0_7 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_8;
  lightColor1_8 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_9;
  lightColor2_9 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_10;
  lightColor3_10 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_11;
  lightAttenSq_11 = unity_4LightAtten0;
  highp vec3 col_12;
  highp vec4 ndotl_13;
  highp vec4 lengthSq_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_4LightPosX0 - tmpvar_4.x);
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosY0 - tmpvar_4.y);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosZ0 - tmpvar_4.z);
  lengthSq_14 = (tmpvar_15 * tmpvar_15);
  lengthSq_14 = (lengthSq_14 + (tmpvar_16 * tmpvar_16));
  lengthSq_14 = (lengthSq_14 + (tmpvar_17 * tmpvar_17));
  highp vec4 tmpvar_18;
  tmpvar_18 = max (lengthSq_14, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_14 = tmpvar_18;
  ndotl_13 = (tmpvar_15 * tmpvar_6.x);
  ndotl_13 = (ndotl_13 + (tmpvar_16 * tmpvar_6.y));
  ndotl_13 = (ndotl_13 + (tmpvar_17 * tmpvar_6.z));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_13 * inversesqrt(tmpvar_18)));
  ndotl_13 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = (tmpvar_19 * (1.0/((1.0 + 
    (tmpvar_18 * lightAttenSq_11)
  ))));
  col_12 = (lightColor0_7 * tmpvar_20.x);
  col_12 = (col_12 + (lightColor1_8 * tmpvar_20.y));
  col_12 = (col_12 + (lightColor2_9 * tmpvar_20.z));
  col_12 = (col_12 + (lightColor3_10 * tmpvar_20.w));
  tmpvar_1 = col_12;
  mediump vec3 normal_21;
  normal_21 = tmpvar_6;
  mediump vec3 ambient_22;
  mediump vec4 tmpvar_23;
  tmpvar_23.w = 1.0;
  tmpvar_23.xyz = normal_21;
  mediump vec3 res_24;
  mediump vec3 x_25;
  x_25.x = dot (unity_SHAr, tmpvar_23);
  x_25.y = dot (unity_SHAg, tmpvar_23);
  x_25.z = dot (unity_SHAb, tmpvar_23);
  mediump vec3 x1_26;
  mediump vec4 tmpvar_27;
  tmpvar_27 = (normal_21.xyzz * normal_21.yzzx);
  x1_26.x = dot (unity_SHBr, tmpvar_27);
  x1_26.y = dot (unity_SHBg, tmpvar_27);
  x1_26.z = dot (unity_SHBb, tmpvar_27);
  res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )));
  mediump vec3 tmpvar_28;
  tmpvar_28 = max (((1.055 * 
    pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_24 = tmpvar_28;
  ambient_22 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_28));
  tmpvar_1 = ambient_22;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_6;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_22;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = (c_15.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.xz = _glesMultiTexCoord0.xx;
  result_2.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_4;
  tmpvar_4 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_5;
  tmpvar_5[0] = unity_WorldToObject[0].xyz;
  tmpvar_5[1] = unity_WorldToObject[1].xyz;
  tmpvar_5[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_glesNormal * tmpvar_5));
  highp vec3 lightColor0_7;
  lightColor0_7 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_8;
  lightColor1_8 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_9;
  lightColor2_9 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_10;
  lightColor3_10 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_11;
  lightAttenSq_11 = unity_4LightAtten0;
  highp vec3 col_12;
  highp vec4 ndotl_13;
  highp vec4 lengthSq_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_4LightPosX0 - tmpvar_4.x);
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosY0 - tmpvar_4.y);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosZ0 - tmpvar_4.z);
  lengthSq_14 = (tmpvar_15 * tmpvar_15);
  lengthSq_14 = (lengthSq_14 + (tmpvar_16 * tmpvar_16));
  lengthSq_14 = (lengthSq_14 + (tmpvar_17 * tmpvar_17));
  highp vec4 tmpvar_18;
  tmpvar_18 = max (lengthSq_14, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_14 = tmpvar_18;
  ndotl_13 = (tmpvar_15 * tmpvar_6.x);
  ndotl_13 = (ndotl_13 + (tmpvar_16 * tmpvar_6.y));
  ndotl_13 = (ndotl_13 + (tmpvar_17 * tmpvar_6.z));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_13 * inversesqrt(tmpvar_18)));
  ndotl_13 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = (tmpvar_19 * (1.0/((1.0 + 
    (tmpvar_18 * lightAttenSq_11)
  ))));
  col_12 = (lightColor0_7 * tmpvar_20.x);
  col_12 = (col_12 + (lightColor1_8 * tmpvar_20.y));
  col_12 = (col_12 + (lightColor2_9 * tmpvar_20.z));
  col_12 = (col_12 + (lightColor3_10 * tmpvar_20.w));
  tmpvar_1 = col_12;
  mediump vec3 normal_21;
  normal_21 = tmpvar_6;
  mediump vec3 ambient_22;
  mediump vec4 tmpvar_23;
  tmpvar_23.w = 1.0;
  tmpvar_23.xyz = normal_21;
  mediump vec3 res_24;
  mediump vec3 x_25;
  x_25.x = dot (unity_SHAr, tmpvar_23);
  x_25.y = dot (unity_SHAg, tmpvar_23);
  x_25.z = dot (unity_SHAb, tmpvar_23);
  mediump vec3 x1_26;
  mediump vec4 tmpvar_27;
  tmpvar_27 = (normal_21.xyzz * normal_21.yzzx);
  x1_26.x = dot (unity_SHBr, tmpvar_27);
  x1_26.y = dot (unity_SHBg, tmpvar_27);
  x1_26.z = dot (unity_SHBb, tmpvar_27);
  res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )));
  mediump vec3 tmpvar_28;
  tmpvar_28 = max (((1.055 * 
    pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_24 = tmpvar_28;
  ambient_22 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_28));
  tmpvar_1 = ambient_22;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_6;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_22;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = (c_15.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6.xyz = tmpvar_8.xyz;
  mediump float alpha_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_11;
  tmpvar_11 = tmpvar_10.xyz;
  alpha_9 = (((tmpvar_11.x + tmpvar_11.y) + tmpvar_11.z) / 3.0);
  col_6.w = alpha_9;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_12;
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = ((col_6.xyz * tmpvar_1) * diff_14);
  c_13.w = col_6.w;
  c_12.w = c_13.w;
  c_12.xyz = c_13.xyz;
  gl_FragData[0] = c_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6.xyz = tmpvar_8.xyz;
  mediump float alpha_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_11;
  tmpvar_11 = tmpvar_10.xyz;
  alpha_9 = (((tmpvar_11.x + tmpvar_11.y) + tmpvar_11.z) / 3.0);
  col_6.w = alpha_9;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_12;
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = ((col_6.xyz * tmpvar_1) * diff_14);
  c_13.w = col_6.w;
  c_12.w = c_13.w;
  c_12.xyz = c_13.xyz;
  gl_FragData[0] = c_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6.xyz = tmpvar_8.xyz;
  mediump float alpha_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_11;
  tmpvar_11 = tmpvar_10.xyz;
  alpha_9 = (((tmpvar_11.x + tmpvar_11.y) + tmpvar_11.z) / 3.0);
  col_6.w = alpha_9;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_12;
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = ((col_6.xyz * tmpvar_1) * diff_14);
  c_13.w = col_6.w;
  c_12.w = c_13.w;
  c_12.xyz = c_13.xyz;
  gl_FragData[0] = c_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  mediump vec3 normal_6;
  normal_6 = tmpvar_5;
  mediump vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = normal_6;
  mediump vec3 res_8;
  mediump vec3 x_9;
  x_9.x = dot (unity_SHAr, tmpvar_7);
  x_9.y = dot (unity_SHAg, tmpvar_7);
  x_9.z = dot (unity_SHAb, tmpvar_7);
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normal_6.xyzz * normal_6.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  res_8 = (x_9 + (x1_10 + (unity_SHC.xyz * 
    ((normal_6.x * normal_6.x) - (normal_6.y * normal_6.y))
  )));
  mediump vec3 tmpvar_12;
  tmpvar_12 = max (((1.055 * 
    pow (max (res_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_8 = tmpvar_12;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_12);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6.xyz = tmpvar_8.xyz;
  mediump float alpha_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_11;
  tmpvar_11 = tmpvar_10.xyz;
  alpha_9 = (((tmpvar_11.x + tmpvar_11.y) + tmpvar_11.z) / 3.0);
  col_6.w = alpha_9;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_12;
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = ((col_6.xyz * tmpvar_1) * diff_14);
  c_13.w = col_6.w;
  c_12.w = c_13.w;
  c_12.xyz = (c_13.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  mediump vec3 normal_6;
  normal_6 = tmpvar_5;
  mediump vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = normal_6;
  mediump vec3 res_8;
  mediump vec3 x_9;
  x_9.x = dot (unity_SHAr, tmpvar_7);
  x_9.y = dot (unity_SHAg, tmpvar_7);
  x_9.z = dot (unity_SHAb, tmpvar_7);
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normal_6.xyzz * normal_6.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  res_8 = (x_9 + (x1_10 + (unity_SHC.xyz * 
    ((normal_6.x * normal_6.x) - (normal_6.y * normal_6.y))
  )));
  mediump vec3 tmpvar_12;
  tmpvar_12 = max (((1.055 * 
    pow (max (res_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_8 = tmpvar_12;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_12);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6.xyz = tmpvar_8.xyz;
  mediump float alpha_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_11;
  tmpvar_11 = tmpvar_10.xyz;
  alpha_9 = (((tmpvar_11.x + tmpvar_11.y) + tmpvar_11.z) / 3.0);
  col_6.w = alpha_9;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_12;
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = ((col_6.xyz * tmpvar_1) * diff_14);
  c_13.w = col_6.w;
  c_12.w = c_13.w;
  c_12.xyz = (c_13.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  mediump vec3 normal_6;
  normal_6 = tmpvar_5;
  mediump vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = normal_6;
  mediump vec3 res_8;
  mediump vec3 x_9;
  x_9.x = dot (unity_SHAr, tmpvar_7);
  x_9.y = dot (unity_SHAg, tmpvar_7);
  x_9.z = dot (unity_SHAb, tmpvar_7);
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normal_6.xyzz * normal_6.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  res_8 = (x_9 + (x1_10 + (unity_SHC.xyz * 
    ((normal_6.x * normal_6.x) - (normal_6.y * normal_6.y))
  )));
  mediump vec3 tmpvar_12;
  tmpvar_12 = max (((1.055 * 
    pow (max (res_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_8 = tmpvar_12;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_12);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6.xyz = tmpvar_8.xyz;
  mediump float alpha_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_11;
  tmpvar_11 = tmpvar_10.xyz;
  alpha_9 = (((tmpvar_11.x + tmpvar_11.y) + tmpvar_11.z) / 3.0);
  col_6.w = alpha_9;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_12;
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = ((col_6.xyz * tmpvar_1) * diff_14);
  c_13.w = col_6.w;
  c_12.w = c_13.w;
  c_12.xyz = (c_13.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_3;
  tmpvar_3 = (_MainTex_TexelSize.y * 1.5);
  result_2.y = mix (tmpvar_3, (0.5 - tmpvar_3), _glesMultiTexCoord0.y);
  result_2.w = (result_2.y + 0.5);
  result_2.yw = (1.0 - result_2.yw);
  result_2.yw = result_2.wy;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 lightColor0_8;
  lightColor0_8 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_9;
  lightColor1_9 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_10;
  lightColor2_10 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_11;
  lightColor3_11 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_12;
  lightAttenSq_12 = unity_4LightAtten0;
  highp vec3 col_13;
  highp vec4 ndotl_14;
  highp vec4 lengthSq_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosX0 - tmpvar_5.x);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosY0 - tmpvar_5.y);
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosZ0 - tmpvar_5.z);
  lengthSq_15 = (tmpvar_16 * tmpvar_16);
  lengthSq_15 = (lengthSq_15 + (tmpvar_17 * tmpvar_17));
  lengthSq_15 = (lengthSq_15 + (tmpvar_18 * tmpvar_18));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (lengthSq_15, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_15 = tmpvar_19;
  ndotl_14 = (tmpvar_16 * tmpvar_7.x);
  ndotl_14 = (ndotl_14 + (tmpvar_17 * tmpvar_7.y));
  ndotl_14 = (ndotl_14 + (tmpvar_18 * tmpvar_7.z));
  highp vec4 tmpvar_20;
  tmpvar_20 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_14 * inversesqrt(tmpvar_19)));
  ndotl_14 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * (1.0/((1.0 + 
    (tmpvar_19 * lightAttenSq_12)
  ))));
  col_13 = (lightColor0_8 * tmpvar_21.x);
  col_13 = (col_13 + (lightColor1_9 * tmpvar_21.y));
  col_13 = (col_13 + (lightColor2_10 * tmpvar_21.z));
  col_13 = (col_13 + (lightColor3_11 * tmpvar_21.w));
  tmpvar_1 = col_13;
  mediump vec3 normal_22;
  normal_22 = tmpvar_7;
  mediump vec3 ambient_23;
  mediump vec4 tmpvar_24;
  tmpvar_24.w = 1.0;
  tmpvar_24.xyz = normal_22;
  mediump vec3 res_25;
  mediump vec3 x_26;
  x_26.x = dot (unity_SHAr, tmpvar_24);
  x_26.y = dot (unity_SHAg, tmpvar_24);
  x_26.z = dot (unity_SHAb, tmpvar_24);
  mediump vec3 x1_27;
  mediump vec4 tmpvar_28;
  tmpvar_28 = (normal_22.xyzz * normal_22.yzzx);
  x1_27.x = dot (unity_SHBr, tmpvar_28);
  x1_27.y = dot (unity_SHBg, tmpvar_28);
  x1_27.z = dot (unity_SHBb, tmpvar_28);
  res_25 = (x_26 + (x1_27 + (unity_SHC.xyz * 
    ((normal_22.x * normal_22.x) - (normal_22.y * normal_22.y))
  )));
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (res_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_25 = tmpvar_29;
  ambient_23 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_29));
  tmpvar_1 = ambient_23;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = tmpvar_7;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_23;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6.xyz = tmpvar_8.xyz;
  mediump float alpha_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_11;
  tmpvar_11 = tmpvar_10.xyz;
  alpha_9 = (((tmpvar_11.x + tmpvar_11.y) + tmpvar_11.z) / 3.0);
  col_6.w = alpha_9;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_12;
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = ((col_6.xyz * tmpvar_1) * diff_14);
  c_13.w = col_6.w;
  c_12.w = c_13.w;
  c_12.xyz = (c_13.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_3;
  tmpvar_3 = (_MainTex_TexelSize.y * 1.5);
  result_2.y = mix (tmpvar_3, (0.5 - tmpvar_3), _glesMultiTexCoord0.y);
  result_2.w = (result_2.y + 0.5);
  result_2.yw = (1.0 - result_2.yw);
  result_2.yw = result_2.wy;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 lightColor0_8;
  lightColor0_8 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_9;
  lightColor1_9 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_10;
  lightColor2_10 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_11;
  lightColor3_11 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_12;
  lightAttenSq_12 = unity_4LightAtten0;
  highp vec3 col_13;
  highp vec4 ndotl_14;
  highp vec4 lengthSq_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosX0 - tmpvar_5.x);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosY0 - tmpvar_5.y);
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosZ0 - tmpvar_5.z);
  lengthSq_15 = (tmpvar_16 * tmpvar_16);
  lengthSq_15 = (lengthSq_15 + (tmpvar_17 * tmpvar_17));
  lengthSq_15 = (lengthSq_15 + (tmpvar_18 * tmpvar_18));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (lengthSq_15, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_15 = tmpvar_19;
  ndotl_14 = (tmpvar_16 * tmpvar_7.x);
  ndotl_14 = (ndotl_14 + (tmpvar_17 * tmpvar_7.y));
  ndotl_14 = (ndotl_14 + (tmpvar_18 * tmpvar_7.z));
  highp vec4 tmpvar_20;
  tmpvar_20 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_14 * inversesqrt(tmpvar_19)));
  ndotl_14 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * (1.0/((1.0 + 
    (tmpvar_19 * lightAttenSq_12)
  ))));
  col_13 = (lightColor0_8 * tmpvar_21.x);
  col_13 = (col_13 + (lightColor1_9 * tmpvar_21.y));
  col_13 = (col_13 + (lightColor2_10 * tmpvar_21.z));
  col_13 = (col_13 + (lightColor3_11 * tmpvar_21.w));
  tmpvar_1 = col_13;
  mediump vec3 normal_22;
  normal_22 = tmpvar_7;
  mediump vec3 ambient_23;
  mediump vec4 tmpvar_24;
  tmpvar_24.w = 1.0;
  tmpvar_24.xyz = normal_22;
  mediump vec3 res_25;
  mediump vec3 x_26;
  x_26.x = dot (unity_SHAr, tmpvar_24);
  x_26.y = dot (unity_SHAg, tmpvar_24);
  x_26.z = dot (unity_SHAb, tmpvar_24);
  mediump vec3 x1_27;
  mediump vec4 tmpvar_28;
  tmpvar_28 = (normal_22.xyzz * normal_22.yzzx);
  x1_27.x = dot (unity_SHBr, tmpvar_28);
  x1_27.y = dot (unity_SHBg, tmpvar_28);
  x1_27.z = dot (unity_SHBb, tmpvar_28);
  res_25 = (x_26 + (x1_27 + (unity_SHC.xyz * 
    ((normal_22.x * normal_22.x) - (normal_22.y * normal_22.y))
  )));
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (res_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_25 = tmpvar_29;
  ambient_23 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_29));
  tmpvar_1 = ambient_23;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = tmpvar_7;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_23;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6.xyz = tmpvar_8.xyz;
  mediump float alpha_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_11;
  tmpvar_11 = tmpvar_10.xyz;
  alpha_9 = (((tmpvar_11.x + tmpvar_11.y) + tmpvar_11.z) / 3.0);
  col_6.w = alpha_9;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_12;
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = ((col_6.xyz * tmpvar_1) * diff_14);
  c_13.w = col_6.w;
  c_12.w = c_13.w;
  c_12.xyz = (c_13.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_3;
  tmpvar_3 = (_MainTex_TexelSize.y * 1.5);
  result_2.y = mix (tmpvar_3, (0.5 - tmpvar_3), _glesMultiTexCoord0.y);
  result_2.w = (result_2.y + 0.5);
  result_2.yw = (1.0 - result_2.yw);
  result_2.yw = result_2.wy;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 lightColor0_8;
  lightColor0_8 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_9;
  lightColor1_9 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_10;
  lightColor2_10 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_11;
  lightColor3_11 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_12;
  lightAttenSq_12 = unity_4LightAtten0;
  highp vec3 col_13;
  highp vec4 ndotl_14;
  highp vec4 lengthSq_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosX0 - tmpvar_5.x);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosY0 - tmpvar_5.y);
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosZ0 - tmpvar_5.z);
  lengthSq_15 = (tmpvar_16 * tmpvar_16);
  lengthSq_15 = (lengthSq_15 + (tmpvar_17 * tmpvar_17));
  lengthSq_15 = (lengthSq_15 + (tmpvar_18 * tmpvar_18));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (lengthSq_15, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_15 = tmpvar_19;
  ndotl_14 = (tmpvar_16 * tmpvar_7.x);
  ndotl_14 = (ndotl_14 + (tmpvar_17 * tmpvar_7.y));
  ndotl_14 = (ndotl_14 + (tmpvar_18 * tmpvar_7.z));
  highp vec4 tmpvar_20;
  tmpvar_20 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_14 * inversesqrt(tmpvar_19)));
  ndotl_14 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * (1.0/((1.0 + 
    (tmpvar_19 * lightAttenSq_12)
  ))));
  col_13 = (lightColor0_8 * tmpvar_21.x);
  col_13 = (col_13 + (lightColor1_9 * tmpvar_21.y));
  col_13 = (col_13 + (lightColor2_10 * tmpvar_21.z));
  col_13 = (col_13 + (lightColor3_11 * tmpvar_21.w));
  tmpvar_1 = col_13;
  mediump vec3 normal_22;
  normal_22 = tmpvar_7;
  mediump vec3 ambient_23;
  mediump vec4 tmpvar_24;
  tmpvar_24.w = 1.0;
  tmpvar_24.xyz = normal_22;
  mediump vec3 res_25;
  mediump vec3 x_26;
  x_26.x = dot (unity_SHAr, tmpvar_24);
  x_26.y = dot (unity_SHAg, tmpvar_24);
  x_26.z = dot (unity_SHAb, tmpvar_24);
  mediump vec3 x1_27;
  mediump vec4 tmpvar_28;
  tmpvar_28 = (normal_22.xyzz * normal_22.yzzx);
  x1_27.x = dot (unity_SHBr, tmpvar_28);
  x1_27.y = dot (unity_SHBg, tmpvar_28);
  x1_27.z = dot (unity_SHBb, tmpvar_28);
  res_25 = (x_26 + (x1_27 + (unity_SHC.xyz * 
    ((normal_22.x * normal_22.x) - (normal_22.y * normal_22.y))
  )));
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (res_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_25 = tmpvar_29;
  ambient_23 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_29));
  tmpvar_1 = ambient_23;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = tmpvar_7;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_23;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6.xyz = tmpvar_8.xyz;
  mediump float alpha_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_11;
  tmpvar_11 = tmpvar_10.xyz;
  alpha_9 = (((tmpvar_11.x + tmpvar_11.y) + tmpvar_11.z) / 3.0);
  col_6.w = alpha_9;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_12;
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = ((col_6.xyz * tmpvar_1) * diff_14);
  c_13.w = col_6.w;
  c_12.w = c_13.w;
  c_12.xyz = (c_13.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  mediump vec3 normal_6;
  normal_6 = tmpvar_5;
  mediump vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = normal_6;
  mediump vec3 res_8;
  mediump vec3 x_9;
  x_9.x = dot (unity_SHAr, tmpvar_7);
  x_9.y = dot (unity_SHAg, tmpvar_7);
  x_9.z = dot (unity_SHAb, tmpvar_7);
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normal_6.xyzz * normal_6.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  res_8 = (x_9 + (x1_10 + (unity_SHC.xyz * 
    ((normal_6.x * normal_6.x) - (normal_6.y * normal_6.y))
  )));
  mediump vec3 tmpvar_12;
  tmpvar_12 = max (((1.055 * 
    pow (max (res_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_8 = tmpvar_12;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_12);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = (c_17.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  mediump vec3 normal_6;
  normal_6 = tmpvar_5;
  mediump vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = normal_6;
  mediump vec3 res_8;
  mediump vec3 x_9;
  x_9.x = dot (unity_SHAr, tmpvar_7);
  x_9.y = dot (unity_SHAg, tmpvar_7);
  x_9.z = dot (unity_SHAb, tmpvar_7);
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normal_6.xyzz * normal_6.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  res_8 = (x_9 + (x1_10 + (unity_SHC.xyz * 
    ((normal_6.x * normal_6.x) - (normal_6.y * normal_6.y))
  )));
  mediump vec3 tmpvar_12;
  tmpvar_12 = max (((1.055 * 
    pow (max (res_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_8 = tmpvar_12;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_12);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = (c_17.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  mediump vec3 normal_6;
  normal_6 = tmpvar_5;
  mediump vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = normal_6;
  mediump vec3 res_8;
  mediump vec3 x_9;
  x_9.x = dot (unity_SHAr, tmpvar_7);
  x_9.y = dot (unity_SHAg, tmpvar_7);
  x_9.z = dot (unity_SHAb, tmpvar_7);
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normal_6.xyzz * normal_6.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  res_8 = (x_9 + (x1_10 + (unity_SHC.xyz * 
    ((normal_6.x * normal_6.x) - (normal_6.y * normal_6.y))
  )));
  mediump vec3 tmpvar_12;
  tmpvar_12 = max (((1.055 * 
    pow (max (res_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_8 = tmpvar_12;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_12);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = (c_17.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_3;
  tmpvar_3 = (_MainTex_TexelSize.y * 1.5);
  result_2.y = mix (tmpvar_3, (0.5 - tmpvar_3), _glesMultiTexCoord0.y);
  result_2.w = (result_2.y + 0.5);
  result_2.yw = (1.0 - result_2.yw);
  result_2.yw = result_2.wy;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 lightColor0_8;
  lightColor0_8 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_9;
  lightColor1_9 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_10;
  lightColor2_10 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_11;
  lightColor3_11 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_12;
  lightAttenSq_12 = unity_4LightAtten0;
  highp vec3 col_13;
  highp vec4 ndotl_14;
  highp vec4 lengthSq_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosX0 - tmpvar_5.x);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosY0 - tmpvar_5.y);
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosZ0 - tmpvar_5.z);
  lengthSq_15 = (tmpvar_16 * tmpvar_16);
  lengthSq_15 = (lengthSq_15 + (tmpvar_17 * tmpvar_17));
  lengthSq_15 = (lengthSq_15 + (tmpvar_18 * tmpvar_18));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (lengthSq_15, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_15 = tmpvar_19;
  ndotl_14 = (tmpvar_16 * tmpvar_7.x);
  ndotl_14 = (ndotl_14 + (tmpvar_17 * tmpvar_7.y));
  ndotl_14 = (ndotl_14 + (tmpvar_18 * tmpvar_7.z));
  highp vec4 tmpvar_20;
  tmpvar_20 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_14 * inversesqrt(tmpvar_19)));
  ndotl_14 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * (1.0/((1.0 + 
    (tmpvar_19 * lightAttenSq_12)
  ))));
  col_13 = (lightColor0_8 * tmpvar_21.x);
  col_13 = (col_13 + (lightColor1_9 * tmpvar_21.y));
  col_13 = (col_13 + (lightColor2_10 * tmpvar_21.z));
  col_13 = (col_13 + (lightColor3_11 * tmpvar_21.w));
  tmpvar_1 = col_13;
  mediump vec3 normal_22;
  normal_22 = tmpvar_7;
  mediump vec3 ambient_23;
  mediump vec4 tmpvar_24;
  tmpvar_24.w = 1.0;
  tmpvar_24.xyz = normal_22;
  mediump vec3 res_25;
  mediump vec3 x_26;
  x_26.x = dot (unity_SHAr, tmpvar_24);
  x_26.y = dot (unity_SHAg, tmpvar_24);
  x_26.z = dot (unity_SHAb, tmpvar_24);
  mediump vec3 x1_27;
  mediump vec4 tmpvar_28;
  tmpvar_28 = (normal_22.xyzz * normal_22.yzzx);
  x1_27.x = dot (unity_SHBr, tmpvar_28);
  x1_27.y = dot (unity_SHBg, tmpvar_28);
  x1_27.z = dot (unity_SHBb, tmpvar_28);
  res_25 = (x_26 + (x1_27 + (unity_SHC.xyz * 
    ((normal_22.x * normal_22.x) - (normal_22.y * normal_22.y))
  )));
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (res_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_25 = tmpvar_29;
  ambient_23 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_29));
  tmpvar_1 = ambient_23;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = tmpvar_7;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_23;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = (c_17.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_3;
  tmpvar_3 = (_MainTex_TexelSize.y * 1.5);
  result_2.y = mix (tmpvar_3, (0.5 - tmpvar_3), _glesMultiTexCoord0.y);
  result_2.w = (result_2.y + 0.5);
  result_2.yw = (1.0 - result_2.yw);
  result_2.yw = result_2.wy;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 lightColor0_8;
  lightColor0_8 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_9;
  lightColor1_9 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_10;
  lightColor2_10 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_11;
  lightColor3_11 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_12;
  lightAttenSq_12 = unity_4LightAtten0;
  highp vec3 col_13;
  highp vec4 ndotl_14;
  highp vec4 lengthSq_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosX0 - tmpvar_5.x);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosY0 - tmpvar_5.y);
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosZ0 - tmpvar_5.z);
  lengthSq_15 = (tmpvar_16 * tmpvar_16);
  lengthSq_15 = (lengthSq_15 + (tmpvar_17 * tmpvar_17));
  lengthSq_15 = (lengthSq_15 + (tmpvar_18 * tmpvar_18));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (lengthSq_15, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_15 = tmpvar_19;
  ndotl_14 = (tmpvar_16 * tmpvar_7.x);
  ndotl_14 = (ndotl_14 + (tmpvar_17 * tmpvar_7.y));
  ndotl_14 = (ndotl_14 + (tmpvar_18 * tmpvar_7.z));
  highp vec4 tmpvar_20;
  tmpvar_20 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_14 * inversesqrt(tmpvar_19)));
  ndotl_14 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * (1.0/((1.0 + 
    (tmpvar_19 * lightAttenSq_12)
  ))));
  col_13 = (lightColor0_8 * tmpvar_21.x);
  col_13 = (col_13 + (lightColor1_9 * tmpvar_21.y));
  col_13 = (col_13 + (lightColor2_10 * tmpvar_21.z));
  col_13 = (col_13 + (lightColor3_11 * tmpvar_21.w));
  tmpvar_1 = col_13;
  mediump vec3 normal_22;
  normal_22 = tmpvar_7;
  mediump vec3 ambient_23;
  mediump vec4 tmpvar_24;
  tmpvar_24.w = 1.0;
  tmpvar_24.xyz = normal_22;
  mediump vec3 res_25;
  mediump vec3 x_26;
  x_26.x = dot (unity_SHAr, tmpvar_24);
  x_26.y = dot (unity_SHAg, tmpvar_24);
  x_26.z = dot (unity_SHAb, tmpvar_24);
  mediump vec3 x1_27;
  mediump vec4 tmpvar_28;
  tmpvar_28 = (normal_22.xyzz * normal_22.yzzx);
  x1_27.x = dot (unity_SHBr, tmpvar_28);
  x1_27.y = dot (unity_SHBg, tmpvar_28);
  x1_27.z = dot (unity_SHBb, tmpvar_28);
  res_25 = (x_26 + (x1_27 + (unity_SHC.xyz * 
    ((normal_22.x * normal_22.x) - (normal_22.y * normal_22.y))
  )));
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (res_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_25 = tmpvar_29;
  ambient_23 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_29));
  tmpvar_1 = ambient_23;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = tmpvar_7;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_23;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = (c_17.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_3;
  tmpvar_3 = (_MainTex_TexelSize.y * 1.5);
  result_2.y = mix (tmpvar_3, (0.5 - tmpvar_3), _glesMultiTexCoord0.y);
  result_2.w = (result_2.y + 0.5);
  result_2.yw = (1.0 - result_2.yw);
  result_2.yw = result_2.wy;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 lightColor0_8;
  lightColor0_8 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_9;
  lightColor1_9 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_10;
  lightColor2_10 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_11;
  lightColor3_11 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_12;
  lightAttenSq_12 = unity_4LightAtten0;
  highp vec3 col_13;
  highp vec4 ndotl_14;
  highp vec4 lengthSq_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosX0 - tmpvar_5.x);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosY0 - tmpvar_5.y);
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosZ0 - tmpvar_5.z);
  lengthSq_15 = (tmpvar_16 * tmpvar_16);
  lengthSq_15 = (lengthSq_15 + (tmpvar_17 * tmpvar_17));
  lengthSq_15 = (lengthSq_15 + (tmpvar_18 * tmpvar_18));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (lengthSq_15, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_15 = tmpvar_19;
  ndotl_14 = (tmpvar_16 * tmpvar_7.x);
  ndotl_14 = (ndotl_14 + (tmpvar_17 * tmpvar_7.y));
  ndotl_14 = (ndotl_14 + (tmpvar_18 * tmpvar_7.z));
  highp vec4 tmpvar_20;
  tmpvar_20 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_14 * inversesqrt(tmpvar_19)));
  ndotl_14 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * (1.0/((1.0 + 
    (tmpvar_19 * lightAttenSq_12)
  ))));
  col_13 = (lightColor0_8 * tmpvar_21.x);
  col_13 = (col_13 + (lightColor1_9 * tmpvar_21.y));
  col_13 = (col_13 + (lightColor2_10 * tmpvar_21.z));
  col_13 = (col_13 + (lightColor3_11 * tmpvar_21.w));
  tmpvar_1 = col_13;
  mediump vec3 normal_22;
  normal_22 = tmpvar_7;
  mediump vec3 ambient_23;
  mediump vec4 tmpvar_24;
  tmpvar_24.w = 1.0;
  tmpvar_24.xyz = normal_22;
  mediump vec3 res_25;
  mediump vec3 x_26;
  x_26.x = dot (unity_SHAr, tmpvar_24);
  x_26.y = dot (unity_SHAg, tmpvar_24);
  x_26.z = dot (unity_SHAb, tmpvar_24);
  mediump vec3 x1_27;
  mediump vec4 tmpvar_28;
  tmpvar_28 = (normal_22.xyzz * normal_22.yzzx);
  x1_27.x = dot (unity_SHBr, tmpvar_28);
  x1_27.y = dot (unity_SHBg, tmpvar_28);
  x1_27.z = dot (unity_SHBb, tmpvar_28);
  res_25 = (x_26 + (x1_27 + (unity_SHC.xyz * 
    ((normal_22.x * normal_22.x) - (normal_22.y * normal_22.y))
  )));
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (res_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_25 = tmpvar_29;
  ambient_23 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_29));
  tmpvar_1 = ambient_23;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = tmpvar_7;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_23;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = (c_17.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_12;
  tmpvar_12 = tmpvar_11.xyz;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * ((tmpvar_12 * 
    ((tmpvar_12 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_10 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_6.w = alpha_10;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = c_15.xyz;
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_12;
  tmpvar_12 = tmpvar_11.xyz;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * ((tmpvar_12 * 
    ((tmpvar_12 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_10 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_6.w = alpha_10;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = c_15.xyz;
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_12;
  tmpvar_12 = tmpvar_11.xyz;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * ((tmpvar_12 * 
    ((tmpvar_12 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_10 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_6.w = alpha_10;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = c_15.xyz;
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  mediump vec3 normal_6;
  normal_6 = tmpvar_5;
  mediump vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = normal_6;
  mediump vec3 res_8;
  mediump vec3 x_9;
  x_9.x = dot (unity_SHAr, tmpvar_7);
  x_9.y = dot (unity_SHAg, tmpvar_7);
  x_9.z = dot (unity_SHAb, tmpvar_7);
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normal_6.xyzz * normal_6.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  res_8 = (x_9 + (x1_10 + (unity_SHC.xyz * 
    ((normal_6.x * normal_6.x) - (normal_6.y * normal_6.y))
  )));
  mediump vec3 tmpvar_12;
  tmpvar_12 = max (((1.055 * 
    pow (max (res_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_8 = tmpvar_12;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_12);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_12;
  tmpvar_12 = tmpvar_11.xyz;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * ((tmpvar_12 * 
    ((tmpvar_12 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_10 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_6.w = alpha_10;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = (c_15.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  mediump vec3 normal_6;
  normal_6 = tmpvar_5;
  mediump vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = normal_6;
  mediump vec3 res_8;
  mediump vec3 x_9;
  x_9.x = dot (unity_SHAr, tmpvar_7);
  x_9.y = dot (unity_SHAg, tmpvar_7);
  x_9.z = dot (unity_SHAb, tmpvar_7);
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normal_6.xyzz * normal_6.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  res_8 = (x_9 + (x1_10 + (unity_SHC.xyz * 
    ((normal_6.x * normal_6.x) - (normal_6.y * normal_6.y))
  )));
  mediump vec3 tmpvar_12;
  tmpvar_12 = max (((1.055 * 
    pow (max (res_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_8 = tmpvar_12;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_12);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_12;
  tmpvar_12 = tmpvar_11.xyz;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * ((tmpvar_12 * 
    ((tmpvar_12 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_10 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_6.w = alpha_10;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = (c_15.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  mediump vec3 normal_6;
  normal_6 = tmpvar_5;
  mediump vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = normal_6;
  mediump vec3 res_8;
  mediump vec3 x_9;
  x_9.x = dot (unity_SHAr, tmpvar_7);
  x_9.y = dot (unity_SHAg, tmpvar_7);
  x_9.z = dot (unity_SHAb, tmpvar_7);
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normal_6.xyzz * normal_6.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  res_8 = (x_9 + (x1_10 + (unity_SHC.xyz * 
    ((normal_6.x * normal_6.x) - (normal_6.y * normal_6.y))
  )));
  mediump vec3 tmpvar_12;
  tmpvar_12 = max (((1.055 * 
    pow (max (res_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_8 = tmpvar_12;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_12);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_12;
  tmpvar_12 = tmpvar_11.xyz;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * ((tmpvar_12 * 
    ((tmpvar_12 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_10 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_6.w = alpha_10;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = (c_15.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_3;
  tmpvar_3 = (_MainTex_TexelSize.y * 1.5);
  result_2.y = mix (tmpvar_3, (0.5 - tmpvar_3), _glesMultiTexCoord0.y);
  result_2.w = (result_2.y + 0.5);
  result_2.yw = (1.0 - result_2.yw);
  result_2.yw = result_2.wy;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 lightColor0_8;
  lightColor0_8 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_9;
  lightColor1_9 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_10;
  lightColor2_10 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_11;
  lightColor3_11 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_12;
  lightAttenSq_12 = unity_4LightAtten0;
  highp vec3 col_13;
  highp vec4 ndotl_14;
  highp vec4 lengthSq_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosX0 - tmpvar_5.x);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosY0 - tmpvar_5.y);
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosZ0 - tmpvar_5.z);
  lengthSq_15 = (tmpvar_16 * tmpvar_16);
  lengthSq_15 = (lengthSq_15 + (tmpvar_17 * tmpvar_17));
  lengthSq_15 = (lengthSq_15 + (tmpvar_18 * tmpvar_18));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (lengthSq_15, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_15 = tmpvar_19;
  ndotl_14 = (tmpvar_16 * tmpvar_7.x);
  ndotl_14 = (ndotl_14 + (tmpvar_17 * tmpvar_7.y));
  ndotl_14 = (ndotl_14 + (tmpvar_18 * tmpvar_7.z));
  highp vec4 tmpvar_20;
  tmpvar_20 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_14 * inversesqrt(tmpvar_19)));
  ndotl_14 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * (1.0/((1.0 + 
    (tmpvar_19 * lightAttenSq_12)
  ))));
  col_13 = (lightColor0_8 * tmpvar_21.x);
  col_13 = (col_13 + (lightColor1_9 * tmpvar_21.y));
  col_13 = (col_13 + (lightColor2_10 * tmpvar_21.z));
  col_13 = (col_13 + (lightColor3_11 * tmpvar_21.w));
  tmpvar_1 = col_13;
  mediump vec3 normal_22;
  normal_22 = tmpvar_7;
  mediump vec3 ambient_23;
  mediump vec4 tmpvar_24;
  tmpvar_24.w = 1.0;
  tmpvar_24.xyz = normal_22;
  mediump vec3 res_25;
  mediump vec3 x_26;
  x_26.x = dot (unity_SHAr, tmpvar_24);
  x_26.y = dot (unity_SHAg, tmpvar_24);
  x_26.z = dot (unity_SHAb, tmpvar_24);
  mediump vec3 x1_27;
  mediump vec4 tmpvar_28;
  tmpvar_28 = (normal_22.xyzz * normal_22.yzzx);
  x1_27.x = dot (unity_SHBr, tmpvar_28);
  x1_27.y = dot (unity_SHBg, tmpvar_28);
  x1_27.z = dot (unity_SHBb, tmpvar_28);
  res_25 = (x_26 + (x1_27 + (unity_SHC.xyz * 
    ((normal_22.x * normal_22.x) - (normal_22.y * normal_22.y))
  )));
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (res_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_25 = tmpvar_29;
  ambient_23 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_29));
  tmpvar_1 = ambient_23;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = tmpvar_7;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_23;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_12;
  tmpvar_12 = tmpvar_11.xyz;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * ((tmpvar_12 * 
    ((tmpvar_12 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_10 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_6.w = alpha_10;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = (c_15.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_3;
  tmpvar_3 = (_MainTex_TexelSize.y * 1.5);
  result_2.y = mix (tmpvar_3, (0.5 - tmpvar_3), _glesMultiTexCoord0.y);
  result_2.w = (result_2.y + 0.5);
  result_2.yw = (1.0 - result_2.yw);
  result_2.yw = result_2.wy;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 lightColor0_8;
  lightColor0_8 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_9;
  lightColor1_9 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_10;
  lightColor2_10 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_11;
  lightColor3_11 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_12;
  lightAttenSq_12 = unity_4LightAtten0;
  highp vec3 col_13;
  highp vec4 ndotl_14;
  highp vec4 lengthSq_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosX0 - tmpvar_5.x);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosY0 - tmpvar_5.y);
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosZ0 - tmpvar_5.z);
  lengthSq_15 = (tmpvar_16 * tmpvar_16);
  lengthSq_15 = (lengthSq_15 + (tmpvar_17 * tmpvar_17));
  lengthSq_15 = (lengthSq_15 + (tmpvar_18 * tmpvar_18));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (lengthSq_15, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_15 = tmpvar_19;
  ndotl_14 = (tmpvar_16 * tmpvar_7.x);
  ndotl_14 = (ndotl_14 + (tmpvar_17 * tmpvar_7.y));
  ndotl_14 = (ndotl_14 + (tmpvar_18 * tmpvar_7.z));
  highp vec4 tmpvar_20;
  tmpvar_20 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_14 * inversesqrt(tmpvar_19)));
  ndotl_14 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * (1.0/((1.0 + 
    (tmpvar_19 * lightAttenSq_12)
  ))));
  col_13 = (lightColor0_8 * tmpvar_21.x);
  col_13 = (col_13 + (lightColor1_9 * tmpvar_21.y));
  col_13 = (col_13 + (lightColor2_10 * tmpvar_21.z));
  col_13 = (col_13 + (lightColor3_11 * tmpvar_21.w));
  tmpvar_1 = col_13;
  mediump vec3 normal_22;
  normal_22 = tmpvar_7;
  mediump vec3 ambient_23;
  mediump vec4 tmpvar_24;
  tmpvar_24.w = 1.0;
  tmpvar_24.xyz = normal_22;
  mediump vec3 res_25;
  mediump vec3 x_26;
  x_26.x = dot (unity_SHAr, tmpvar_24);
  x_26.y = dot (unity_SHAg, tmpvar_24);
  x_26.z = dot (unity_SHAb, tmpvar_24);
  mediump vec3 x1_27;
  mediump vec4 tmpvar_28;
  tmpvar_28 = (normal_22.xyzz * normal_22.yzzx);
  x1_27.x = dot (unity_SHBr, tmpvar_28);
  x1_27.y = dot (unity_SHBg, tmpvar_28);
  x1_27.z = dot (unity_SHBb, tmpvar_28);
  res_25 = (x_26 + (x1_27 + (unity_SHC.xyz * 
    ((normal_22.x * normal_22.x) - (normal_22.y * normal_22.y))
  )));
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (res_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_25 = tmpvar_29;
  ambient_23 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_29));
  tmpvar_1 = ambient_23;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = tmpvar_7;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_23;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_12;
  tmpvar_12 = tmpvar_11.xyz;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * ((tmpvar_12 * 
    ((tmpvar_12 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_10 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_6.w = alpha_10;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = (c_15.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_3;
  tmpvar_3 = (_MainTex_TexelSize.y * 1.5);
  result_2.y = mix (tmpvar_3, (0.5 - tmpvar_3), _glesMultiTexCoord0.y);
  result_2.w = (result_2.y + 0.5);
  result_2.yw = (1.0 - result_2.yw);
  result_2.yw = result_2.wy;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 lightColor0_8;
  lightColor0_8 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_9;
  lightColor1_9 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_10;
  lightColor2_10 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_11;
  lightColor3_11 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_12;
  lightAttenSq_12 = unity_4LightAtten0;
  highp vec3 col_13;
  highp vec4 ndotl_14;
  highp vec4 lengthSq_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosX0 - tmpvar_5.x);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosY0 - tmpvar_5.y);
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosZ0 - tmpvar_5.z);
  lengthSq_15 = (tmpvar_16 * tmpvar_16);
  lengthSq_15 = (lengthSq_15 + (tmpvar_17 * tmpvar_17));
  lengthSq_15 = (lengthSq_15 + (tmpvar_18 * tmpvar_18));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (lengthSq_15, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_15 = tmpvar_19;
  ndotl_14 = (tmpvar_16 * tmpvar_7.x);
  ndotl_14 = (ndotl_14 + (tmpvar_17 * tmpvar_7.y));
  ndotl_14 = (ndotl_14 + (tmpvar_18 * tmpvar_7.z));
  highp vec4 tmpvar_20;
  tmpvar_20 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_14 * inversesqrt(tmpvar_19)));
  ndotl_14 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * (1.0/((1.0 + 
    (tmpvar_19 * lightAttenSq_12)
  ))));
  col_13 = (lightColor0_8 * tmpvar_21.x);
  col_13 = (col_13 + (lightColor1_9 * tmpvar_21.y));
  col_13 = (col_13 + (lightColor2_10 * tmpvar_21.z));
  col_13 = (col_13 + (lightColor3_11 * tmpvar_21.w));
  tmpvar_1 = col_13;
  mediump vec3 normal_22;
  normal_22 = tmpvar_7;
  mediump vec3 ambient_23;
  mediump vec4 tmpvar_24;
  tmpvar_24.w = 1.0;
  tmpvar_24.xyz = normal_22;
  mediump vec3 res_25;
  mediump vec3 x_26;
  x_26.x = dot (unity_SHAr, tmpvar_24);
  x_26.y = dot (unity_SHAg, tmpvar_24);
  x_26.z = dot (unity_SHAb, tmpvar_24);
  mediump vec3 x1_27;
  mediump vec4 tmpvar_28;
  tmpvar_28 = (normal_22.xyzz * normal_22.yzzx);
  x1_27.x = dot (unity_SHBr, tmpvar_28);
  x1_27.y = dot (unity_SHBg, tmpvar_28);
  x1_27.z = dot (unity_SHBb, tmpvar_28);
  res_25 = (x_26 + (x1_27 + (unity_SHC.xyz * 
    ((normal_22.x * normal_22.x) - (normal_22.y * normal_22.y))
  )));
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (res_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_25 = tmpvar_29;
  ambient_23 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_29));
  tmpvar_1 = ambient_23;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = tmpvar_7;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_23;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_12;
  tmpvar_12 = tmpvar_11.xyz;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * ((tmpvar_12 * 
    ((tmpvar_12 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_10 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_6.w = alpha_10;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = (c_15.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  mediump vec3 normal_6;
  normal_6 = tmpvar_5;
  mediump vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = normal_6;
  mediump vec3 res_8;
  mediump vec3 x_9;
  x_9.x = dot (unity_SHAr, tmpvar_7);
  x_9.y = dot (unity_SHAg, tmpvar_7);
  x_9.z = dot (unity_SHAb, tmpvar_7);
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normal_6.xyzz * normal_6.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  res_8 = (x_9 + (x1_10 + (unity_SHC.xyz * 
    ((normal_6.x * normal_6.x) - (normal_6.y * normal_6.y))
  )));
  mediump vec3 tmpvar_12;
  tmpvar_12 = max (((1.055 * 
    pow (max (res_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_8 = tmpvar_12;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_12);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = (c_17.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  mediump vec3 normal_6;
  normal_6 = tmpvar_5;
  mediump vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = normal_6;
  mediump vec3 res_8;
  mediump vec3 x_9;
  x_9.x = dot (unity_SHAr, tmpvar_7);
  x_9.y = dot (unity_SHAg, tmpvar_7);
  x_9.z = dot (unity_SHAb, tmpvar_7);
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normal_6.xyzz * normal_6.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  res_8 = (x_9 + (x1_10 + (unity_SHC.xyz * 
    ((normal_6.x * normal_6.x) - (normal_6.y * normal_6.y))
  )));
  mediump vec3 tmpvar_12;
  tmpvar_12 = max (((1.055 * 
    pow (max (res_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_8 = tmpvar_12;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_12);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = (c_17.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  mediump vec3 normal_6;
  normal_6 = tmpvar_5;
  mediump vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = normal_6;
  mediump vec3 res_8;
  mediump vec3 x_9;
  x_9.x = dot (unity_SHAr, tmpvar_7);
  x_9.y = dot (unity_SHAg, tmpvar_7);
  x_9.z = dot (unity_SHAb, tmpvar_7);
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normal_6.xyzz * normal_6.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  res_8 = (x_9 + (x1_10 + (unity_SHC.xyz * 
    ((normal_6.x * normal_6.x) - (normal_6.y * normal_6.y))
  )));
  mediump vec3 tmpvar_12;
  tmpvar_12 = max (((1.055 * 
    pow (max (res_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_8 = tmpvar_12;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_12);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = (c_17.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_3;
  tmpvar_3 = (_MainTex_TexelSize.y * 1.5);
  result_2.y = mix (tmpvar_3, (0.5 - tmpvar_3), _glesMultiTexCoord0.y);
  result_2.w = (result_2.y + 0.5);
  result_2.yw = (1.0 - result_2.yw);
  result_2.yw = result_2.wy;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 lightColor0_8;
  lightColor0_8 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_9;
  lightColor1_9 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_10;
  lightColor2_10 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_11;
  lightColor3_11 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_12;
  lightAttenSq_12 = unity_4LightAtten0;
  highp vec3 col_13;
  highp vec4 ndotl_14;
  highp vec4 lengthSq_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosX0 - tmpvar_5.x);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosY0 - tmpvar_5.y);
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosZ0 - tmpvar_5.z);
  lengthSq_15 = (tmpvar_16 * tmpvar_16);
  lengthSq_15 = (lengthSq_15 + (tmpvar_17 * tmpvar_17));
  lengthSq_15 = (lengthSq_15 + (tmpvar_18 * tmpvar_18));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (lengthSq_15, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_15 = tmpvar_19;
  ndotl_14 = (tmpvar_16 * tmpvar_7.x);
  ndotl_14 = (ndotl_14 + (tmpvar_17 * tmpvar_7.y));
  ndotl_14 = (ndotl_14 + (tmpvar_18 * tmpvar_7.z));
  highp vec4 tmpvar_20;
  tmpvar_20 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_14 * inversesqrt(tmpvar_19)));
  ndotl_14 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * (1.0/((1.0 + 
    (tmpvar_19 * lightAttenSq_12)
  ))));
  col_13 = (lightColor0_8 * tmpvar_21.x);
  col_13 = (col_13 + (lightColor1_9 * tmpvar_21.y));
  col_13 = (col_13 + (lightColor2_10 * tmpvar_21.z));
  col_13 = (col_13 + (lightColor3_11 * tmpvar_21.w));
  tmpvar_1 = col_13;
  mediump vec3 normal_22;
  normal_22 = tmpvar_7;
  mediump vec3 ambient_23;
  mediump vec4 tmpvar_24;
  tmpvar_24.w = 1.0;
  tmpvar_24.xyz = normal_22;
  mediump vec3 res_25;
  mediump vec3 x_26;
  x_26.x = dot (unity_SHAr, tmpvar_24);
  x_26.y = dot (unity_SHAg, tmpvar_24);
  x_26.z = dot (unity_SHAb, tmpvar_24);
  mediump vec3 x1_27;
  mediump vec4 tmpvar_28;
  tmpvar_28 = (normal_22.xyzz * normal_22.yzzx);
  x1_27.x = dot (unity_SHBr, tmpvar_28);
  x1_27.y = dot (unity_SHBg, tmpvar_28);
  x1_27.z = dot (unity_SHBb, tmpvar_28);
  res_25 = (x_26 + (x1_27 + (unity_SHC.xyz * 
    ((normal_22.x * normal_22.x) - (normal_22.y * normal_22.y))
  )));
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (res_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_25 = tmpvar_29;
  ambient_23 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_29));
  tmpvar_1 = ambient_23;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = tmpvar_7;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_23;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = (c_17.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_3;
  tmpvar_3 = (_MainTex_TexelSize.y * 1.5);
  result_2.y = mix (tmpvar_3, (0.5 - tmpvar_3), _glesMultiTexCoord0.y);
  result_2.w = (result_2.y + 0.5);
  result_2.yw = (1.0 - result_2.yw);
  result_2.yw = result_2.wy;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 lightColor0_8;
  lightColor0_8 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_9;
  lightColor1_9 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_10;
  lightColor2_10 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_11;
  lightColor3_11 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_12;
  lightAttenSq_12 = unity_4LightAtten0;
  highp vec3 col_13;
  highp vec4 ndotl_14;
  highp vec4 lengthSq_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosX0 - tmpvar_5.x);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosY0 - tmpvar_5.y);
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosZ0 - tmpvar_5.z);
  lengthSq_15 = (tmpvar_16 * tmpvar_16);
  lengthSq_15 = (lengthSq_15 + (tmpvar_17 * tmpvar_17));
  lengthSq_15 = (lengthSq_15 + (tmpvar_18 * tmpvar_18));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (lengthSq_15, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_15 = tmpvar_19;
  ndotl_14 = (tmpvar_16 * tmpvar_7.x);
  ndotl_14 = (ndotl_14 + (tmpvar_17 * tmpvar_7.y));
  ndotl_14 = (ndotl_14 + (tmpvar_18 * tmpvar_7.z));
  highp vec4 tmpvar_20;
  tmpvar_20 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_14 * inversesqrt(tmpvar_19)));
  ndotl_14 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * (1.0/((1.0 + 
    (tmpvar_19 * lightAttenSq_12)
  ))));
  col_13 = (lightColor0_8 * tmpvar_21.x);
  col_13 = (col_13 + (lightColor1_9 * tmpvar_21.y));
  col_13 = (col_13 + (lightColor2_10 * tmpvar_21.z));
  col_13 = (col_13 + (lightColor3_11 * tmpvar_21.w));
  tmpvar_1 = col_13;
  mediump vec3 normal_22;
  normal_22 = tmpvar_7;
  mediump vec3 ambient_23;
  mediump vec4 tmpvar_24;
  tmpvar_24.w = 1.0;
  tmpvar_24.xyz = normal_22;
  mediump vec3 res_25;
  mediump vec3 x_26;
  x_26.x = dot (unity_SHAr, tmpvar_24);
  x_26.y = dot (unity_SHAg, tmpvar_24);
  x_26.z = dot (unity_SHAb, tmpvar_24);
  mediump vec3 x1_27;
  mediump vec4 tmpvar_28;
  tmpvar_28 = (normal_22.xyzz * normal_22.yzzx);
  x1_27.x = dot (unity_SHBr, tmpvar_28);
  x1_27.y = dot (unity_SHBg, tmpvar_28);
  x1_27.z = dot (unity_SHBb, tmpvar_28);
  res_25 = (x_26 + (x1_27 + (unity_SHC.xyz * 
    ((normal_22.x * normal_22.x) - (normal_22.y * normal_22.y))
  )));
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (res_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_25 = tmpvar_29;
  ambient_23 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_29));
  tmpvar_1 = ambient_23;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = tmpvar_7;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_23;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = (c_17.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_3;
  tmpvar_3 = (_MainTex_TexelSize.y * 1.5);
  result_2.y = mix (tmpvar_3, (0.5 - tmpvar_3), _glesMultiTexCoord0.y);
  result_2.w = (result_2.y + 0.5);
  result_2.yw = (1.0 - result_2.yw);
  result_2.yw = result_2.wy;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 lightColor0_8;
  lightColor0_8 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_9;
  lightColor1_9 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_10;
  lightColor2_10 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_11;
  lightColor3_11 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_12;
  lightAttenSq_12 = unity_4LightAtten0;
  highp vec3 col_13;
  highp vec4 ndotl_14;
  highp vec4 lengthSq_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosX0 - tmpvar_5.x);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosY0 - tmpvar_5.y);
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosZ0 - tmpvar_5.z);
  lengthSq_15 = (tmpvar_16 * tmpvar_16);
  lengthSq_15 = (lengthSq_15 + (tmpvar_17 * tmpvar_17));
  lengthSq_15 = (lengthSq_15 + (tmpvar_18 * tmpvar_18));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (lengthSq_15, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_15 = tmpvar_19;
  ndotl_14 = (tmpvar_16 * tmpvar_7.x);
  ndotl_14 = (ndotl_14 + (tmpvar_17 * tmpvar_7.y));
  ndotl_14 = (ndotl_14 + (tmpvar_18 * tmpvar_7.z));
  highp vec4 tmpvar_20;
  tmpvar_20 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_14 * inversesqrt(tmpvar_19)));
  ndotl_14 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * (1.0/((1.0 + 
    (tmpvar_19 * lightAttenSq_12)
  ))));
  col_13 = (lightColor0_8 * tmpvar_21.x);
  col_13 = (col_13 + (lightColor1_9 * tmpvar_21.y));
  col_13 = (col_13 + (lightColor2_10 * tmpvar_21.z));
  col_13 = (col_13 + (lightColor3_11 * tmpvar_21.w));
  tmpvar_1 = col_13;
  mediump vec3 normal_22;
  normal_22 = tmpvar_7;
  mediump vec3 ambient_23;
  mediump vec4 tmpvar_24;
  tmpvar_24.w = 1.0;
  tmpvar_24.xyz = normal_22;
  mediump vec3 res_25;
  mediump vec3 x_26;
  x_26.x = dot (unity_SHAr, tmpvar_24);
  x_26.y = dot (unity_SHAg, tmpvar_24);
  x_26.z = dot (unity_SHAb, tmpvar_24);
  mediump vec3 x1_27;
  mediump vec4 tmpvar_28;
  tmpvar_28 = (normal_22.xyzz * normal_22.yzzx);
  x1_27.x = dot (unity_SHBr, tmpvar_28);
  x1_27.y = dot (unity_SHBg, tmpvar_28);
  x1_27.z = dot (unity_SHBb, tmpvar_28);
  res_25 = (x_26 + (x1_27 + (unity_SHC.xyz * 
    ((normal_22.x * normal_22.x) - (normal_22.y * normal_22.y))
  )));
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (res_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_25 = tmpvar_29;
  ambient_23 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_29));
  tmpvar_1 = ambient_23;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = tmpvar_7;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_23;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = (c_17.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6.xyz = tmpvar_8.xyz;
  mediump float alpha_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_11;
  tmpvar_11 = tmpvar_10.xyz;
  alpha_9 = (((tmpvar_11.x + tmpvar_11.y) + tmpvar_11.z) / 3.0);
  col_6.w = alpha_9;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_12;
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = ((col_6.xyz * tmpvar_1) * diff_14);
  c_13.w = col_6.w;
  c_12.w = c_13.w;
  c_12.xyz = c_13.xyz;
  gl_FragData[0] = c_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6.xyz = tmpvar_8.xyz;
  mediump float alpha_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_11;
  tmpvar_11 = tmpvar_10.xyz;
  alpha_9 = (((tmpvar_11.x + tmpvar_11.y) + tmpvar_11.z) / 3.0);
  col_6.w = alpha_9;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_12;
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = ((col_6.xyz * tmpvar_1) * diff_14);
  c_13.w = col_6.w;
  c_12.w = c_13.w;
  c_12.xyz = c_13.xyz;
  gl_FragData[0] = c_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6.xyz = tmpvar_8.xyz;
  mediump float alpha_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_11;
  tmpvar_11 = tmpvar_10.xyz;
  alpha_9 = (((tmpvar_11.x + tmpvar_11.y) + tmpvar_11.z) / 3.0);
  col_6.w = alpha_9;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_12;
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = ((col_6.xyz * tmpvar_1) * diff_14);
  c_13.w = col_6.w;
  c_12.w = c_13.w;
  c_12.xyz = c_13.xyz;
  gl_FragData[0] = c_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  mediump vec3 normal_6;
  normal_6 = tmpvar_5;
  mediump vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = normal_6;
  mediump vec3 res_8;
  mediump vec3 x_9;
  x_9.x = dot (unity_SHAr, tmpvar_7);
  x_9.y = dot (unity_SHAg, tmpvar_7);
  x_9.z = dot (unity_SHAb, tmpvar_7);
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normal_6.xyzz * normal_6.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  res_8 = (x_9 + (x1_10 + (unity_SHC.xyz * 
    ((normal_6.x * normal_6.x) - (normal_6.y * normal_6.y))
  )));
  mediump vec3 tmpvar_12;
  tmpvar_12 = max (((1.055 * 
    pow (max (res_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_8 = tmpvar_12;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_12);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6.xyz = tmpvar_8.xyz;
  mediump float alpha_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_11;
  tmpvar_11 = tmpvar_10.xyz;
  alpha_9 = (((tmpvar_11.x + tmpvar_11.y) + tmpvar_11.z) / 3.0);
  col_6.w = alpha_9;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_12;
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = ((col_6.xyz * tmpvar_1) * diff_14);
  c_13.w = col_6.w;
  c_12.w = c_13.w;
  c_12.xyz = (c_13.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  mediump vec3 normal_6;
  normal_6 = tmpvar_5;
  mediump vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = normal_6;
  mediump vec3 res_8;
  mediump vec3 x_9;
  x_9.x = dot (unity_SHAr, tmpvar_7);
  x_9.y = dot (unity_SHAg, tmpvar_7);
  x_9.z = dot (unity_SHAb, tmpvar_7);
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normal_6.xyzz * normal_6.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  res_8 = (x_9 + (x1_10 + (unity_SHC.xyz * 
    ((normal_6.x * normal_6.x) - (normal_6.y * normal_6.y))
  )));
  mediump vec3 tmpvar_12;
  tmpvar_12 = max (((1.055 * 
    pow (max (res_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_8 = tmpvar_12;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_12);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6.xyz = tmpvar_8.xyz;
  mediump float alpha_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_11;
  tmpvar_11 = tmpvar_10.xyz;
  alpha_9 = (((tmpvar_11.x + tmpvar_11.y) + tmpvar_11.z) / 3.0);
  col_6.w = alpha_9;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_12;
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = ((col_6.xyz * tmpvar_1) * diff_14);
  c_13.w = col_6.w;
  c_12.w = c_13.w;
  c_12.xyz = (c_13.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  mediump vec3 normal_6;
  normal_6 = tmpvar_5;
  mediump vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = normal_6;
  mediump vec3 res_8;
  mediump vec3 x_9;
  x_9.x = dot (unity_SHAr, tmpvar_7);
  x_9.y = dot (unity_SHAg, tmpvar_7);
  x_9.z = dot (unity_SHAb, tmpvar_7);
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normal_6.xyzz * normal_6.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  res_8 = (x_9 + (x1_10 + (unity_SHC.xyz * 
    ((normal_6.x * normal_6.x) - (normal_6.y * normal_6.y))
  )));
  mediump vec3 tmpvar_12;
  tmpvar_12 = max (((1.055 * 
    pow (max (res_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_8 = tmpvar_12;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_12);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6.xyz = tmpvar_8.xyz;
  mediump float alpha_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_11;
  tmpvar_11 = tmpvar_10.xyz;
  alpha_9 = (((tmpvar_11.x + tmpvar_11.y) + tmpvar_11.z) / 3.0);
  col_6.w = alpha_9;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_12;
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = ((col_6.xyz * tmpvar_1) * diff_14);
  c_13.w = col_6.w;
  c_12.w = c_13.w;
  c_12.xyz = (c_13.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_3;
  tmpvar_3 = (_MainTex_TexelSize.x * 1.5);
  result_2.x = mix (tmpvar_3, (0.5 - tmpvar_3), _glesMultiTexCoord0.x);
  result_2.z = (result_2.x + 0.5);
  result_2.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 lightColor0_8;
  lightColor0_8 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_9;
  lightColor1_9 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_10;
  lightColor2_10 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_11;
  lightColor3_11 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_12;
  lightAttenSq_12 = unity_4LightAtten0;
  highp vec3 col_13;
  highp vec4 ndotl_14;
  highp vec4 lengthSq_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosX0 - tmpvar_5.x);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosY0 - tmpvar_5.y);
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosZ0 - tmpvar_5.z);
  lengthSq_15 = (tmpvar_16 * tmpvar_16);
  lengthSq_15 = (lengthSq_15 + (tmpvar_17 * tmpvar_17));
  lengthSq_15 = (lengthSq_15 + (tmpvar_18 * tmpvar_18));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (lengthSq_15, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_15 = tmpvar_19;
  ndotl_14 = (tmpvar_16 * tmpvar_7.x);
  ndotl_14 = (ndotl_14 + (tmpvar_17 * tmpvar_7.y));
  ndotl_14 = (ndotl_14 + (tmpvar_18 * tmpvar_7.z));
  highp vec4 tmpvar_20;
  tmpvar_20 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_14 * inversesqrt(tmpvar_19)));
  ndotl_14 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * (1.0/((1.0 + 
    (tmpvar_19 * lightAttenSq_12)
  ))));
  col_13 = (lightColor0_8 * tmpvar_21.x);
  col_13 = (col_13 + (lightColor1_9 * tmpvar_21.y));
  col_13 = (col_13 + (lightColor2_10 * tmpvar_21.z));
  col_13 = (col_13 + (lightColor3_11 * tmpvar_21.w));
  tmpvar_1 = col_13;
  mediump vec3 normal_22;
  normal_22 = tmpvar_7;
  mediump vec3 ambient_23;
  mediump vec4 tmpvar_24;
  tmpvar_24.w = 1.0;
  tmpvar_24.xyz = normal_22;
  mediump vec3 res_25;
  mediump vec3 x_26;
  x_26.x = dot (unity_SHAr, tmpvar_24);
  x_26.y = dot (unity_SHAg, tmpvar_24);
  x_26.z = dot (unity_SHAb, tmpvar_24);
  mediump vec3 x1_27;
  mediump vec4 tmpvar_28;
  tmpvar_28 = (normal_22.xyzz * normal_22.yzzx);
  x1_27.x = dot (unity_SHBr, tmpvar_28);
  x1_27.y = dot (unity_SHBg, tmpvar_28);
  x1_27.z = dot (unity_SHBb, tmpvar_28);
  res_25 = (x_26 + (x1_27 + (unity_SHC.xyz * 
    ((normal_22.x * normal_22.x) - (normal_22.y * normal_22.y))
  )));
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (res_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_25 = tmpvar_29;
  ambient_23 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_29));
  tmpvar_1 = ambient_23;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = tmpvar_7;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_23;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6.xyz = tmpvar_8.xyz;
  mediump float alpha_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_11;
  tmpvar_11 = tmpvar_10.xyz;
  alpha_9 = (((tmpvar_11.x + tmpvar_11.y) + tmpvar_11.z) / 3.0);
  col_6.w = alpha_9;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_12;
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = ((col_6.xyz * tmpvar_1) * diff_14);
  c_13.w = col_6.w;
  c_12.w = c_13.w;
  c_12.xyz = (c_13.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_3;
  tmpvar_3 = (_MainTex_TexelSize.x * 1.5);
  result_2.x = mix (tmpvar_3, (0.5 - tmpvar_3), _glesMultiTexCoord0.x);
  result_2.z = (result_2.x + 0.5);
  result_2.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 lightColor0_8;
  lightColor0_8 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_9;
  lightColor1_9 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_10;
  lightColor2_10 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_11;
  lightColor3_11 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_12;
  lightAttenSq_12 = unity_4LightAtten0;
  highp vec3 col_13;
  highp vec4 ndotl_14;
  highp vec4 lengthSq_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosX0 - tmpvar_5.x);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosY0 - tmpvar_5.y);
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosZ0 - tmpvar_5.z);
  lengthSq_15 = (tmpvar_16 * tmpvar_16);
  lengthSq_15 = (lengthSq_15 + (tmpvar_17 * tmpvar_17));
  lengthSq_15 = (lengthSq_15 + (tmpvar_18 * tmpvar_18));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (lengthSq_15, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_15 = tmpvar_19;
  ndotl_14 = (tmpvar_16 * tmpvar_7.x);
  ndotl_14 = (ndotl_14 + (tmpvar_17 * tmpvar_7.y));
  ndotl_14 = (ndotl_14 + (tmpvar_18 * tmpvar_7.z));
  highp vec4 tmpvar_20;
  tmpvar_20 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_14 * inversesqrt(tmpvar_19)));
  ndotl_14 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * (1.0/((1.0 + 
    (tmpvar_19 * lightAttenSq_12)
  ))));
  col_13 = (lightColor0_8 * tmpvar_21.x);
  col_13 = (col_13 + (lightColor1_9 * tmpvar_21.y));
  col_13 = (col_13 + (lightColor2_10 * tmpvar_21.z));
  col_13 = (col_13 + (lightColor3_11 * tmpvar_21.w));
  tmpvar_1 = col_13;
  mediump vec3 normal_22;
  normal_22 = tmpvar_7;
  mediump vec3 ambient_23;
  mediump vec4 tmpvar_24;
  tmpvar_24.w = 1.0;
  tmpvar_24.xyz = normal_22;
  mediump vec3 res_25;
  mediump vec3 x_26;
  x_26.x = dot (unity_SHAr, tmpvar_24);
  x_26.y = dot (unity_SHAg, tmpvar_24);
  x_26.z = dot (unity_SHAb, tmpvar_24);
  mediump vec3 x1_27;
  mediump vec4 tmpvar_28;
  tmpvar_28 = (normal_22.xyzz * normal_22.yzzx);
  x1_27.x = dot (unity_SHBr, tmpvar_28);
  x1_27.y = dot (unity_SHBg, tmpvar_28);
  x1_27.z = dot (unity_SHBb, tmpvar_28);
  res_25 = (x_26 + (x1_27 + (unity_SHC.xyz * 
    ((normal_22.x * normal_22.x) - (normal_22.y * normal_22.y))
  )));
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (res_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_25 = tmpvar_29;
  ambient_23 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_29));
  tmpvar_1 = ambient_23;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = tmpvar_7;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_23;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6.xyz = tmpvar_8.xyz;
  mediump float alpha_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_11;
  tmpvar_11 = tmpvar_10.xyz;
  alpha_9 = (((tmpvar_11.x + tmpvar_11.y) + tmpvar_11.z) / 3.0);
  col_6.w = alpha_9;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_12;
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = ((col_6.xyz * tmpvar_1) * diff_14);
  c_13.w = col_6.w;
  c_12.w = c_13.w;
  c_12.xyz = (c_13.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_3;
  tmpvar_3 = (_MainTex_TexelSize.x * 1.5);
  result_2.x = mix (tmpvar_3, (0.5 - tmpvar_3), _glesMultiTexCoord0.x);
  result_2.z = (result_2.x + 0.5);
  result_2.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 lightColor0_8;
  lightColor0_8 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_9;
  lightColor1_9 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_10;
  lightColor2_10 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_11;
  lightColor3_11 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_12;
  lightAttenSq_12 = unity_4LightAtten0;
  highp vec3 col_13;
  highp vec4 ndotl_14;
  highp vec4 lengthSq_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosX0 - tmpvar_5.x);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosY0 - tmpvar_5.y);
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosZ0 - tmpvar_5.z);
  lengthSq_15 = (tmpvar_16 * tmpvar_16);
  lengthSq_15 = (lengthSq_15 + (tmpvar_17 * tmpvar_17));
  lengthSq_15 = (lengthSq_15 + (tmpvar_18 * tmpvar_18));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (lengthSq_15, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_15 = tmpvar_19;
  ndotl_14 = (tmpvar_16 * tmpvar_7.x);
  ndotl_14 = (ndotl_14 + (tmpvar_17 * tmpvar_7.y));
  ndotl_14 = (ndotl_14 + (tmpvar_18 * tmpvar_7.z));
  highp vec4 tmpvar_20;
  tmpvar_20 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_14 * inversesqrt(tmpvar_19)));
  ndotl_14 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * (1.0/((1.0 + 
    (tmpvar_19 * lightAttenSq_12)
  ))));
  col_13 = (lightColor0_8 * tmpvar_21.x);
  col_13 = (col_13 + (lightColor1_9 * tmpvar_21.y));
  col_13 = (col_13 + (lightColor2_10 * tmpvar_21.z));
  col_13 = (col_13 + (lightColor3_11 * tmpvar_21.w));
  tmpvar_1 = col_13;
  mediump vec3 normal_22;
  normal_22 = tmpvar_7;
  mediump vec3 ambient_23;
  mediump vec4 tmpvar_24;
  tmpvar_24.w = 1.0;
  tmpvar_24.xyz = normal_22;
  mediump vec3 res_25;
  mediump vec3 x_26;
  x_26.x = dot (unity_SHAr, tmpvar_24);
  x_26.y = dot (unity_SHAg, tmpvar_24);
  x_26.z = dot (unity_SHAb, tmpvar_24);
  mediump vec3 x1_27;
  mediump vec4 tmpvar_28;
  tmpvar_28 = (normal_22.xyzz * normal_22.yzzx);
  x1_27.x = dot (unity_SHBr, tmpvar_28);
  x1_27.y = dot (unity_SHBg, tmpvar_28);
  x1_27.z = dot (unity_SHBb, tmpvar_28);
  res_25 = (x_26 + (x1_27 + (unity_SHC.xyz * 
    ((normal_22.x * normal_22.x) - (normal_22.y * normal_22.y))
  )));
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (res_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_25 = tmpvar_29;
  ambient_23 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_29));
  tmpvar_1 = ambient_23;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = tmpvar_7;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_23;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6.xyz = tmpvar_8.xyz;
  mediump float alpha_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_11;
  tmpvar_11 = tmpvar_10.xyz;
  alpha_9 = (((tmpvar_11.x + tmpvar_11.y) + tmpvar_11.z) / 3.0);
  col_6.w = alpha_9;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_12;
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = ((col_6.xyz * tmpvar_1) * diff_14);
  c_13.w = col_6.w;
  c_12.w = c_13.w;
  c_12.xyz = (c_13.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  mediump vec3 normal_6;
  normal_6 = tmpvar_5;
  mediump vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = normal_6;
  mediump vec3 res_8;
  mediump vec3 x_9;
  x_9.x = dot (unity_SHAr, tmpvar_7);
  x_9.y = dot (unity_SHAg, tmpvar_7);
  x_9.z = dot (unity_SHAb, tmpvar_7);
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normal_6.xyzz * normal_6.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  res_8 = (x_9 + (x1_10 + (unity_SHC.xyz * 
    ((normal_6.x * normal_6.x) - (normal_6.y * normal_6.y))
  )));
  mediump vec3 tmpvar_12;
  tmpvar_12 = max (((1.055 * 
    pow (max (res_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_8 = tmpvar_12;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_12);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = (c_17.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  mediump vec3 normal_6;
  normal_6 = tmpvar_5;
  mediump vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = normal_6;
  mediump vec3 res_8;
  mediump vec3 x_9;
  x_9.x = dot (unity_SHAr, tmpvar_7);
  x_9.y = dot (unity_SHAg, tmpvar_7);
  x_9.z = dot (unity_SHAb, tmpvar_7);
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normal_6.xyzz * normal_6.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  res_8 = (x_9 + (x1_10 + (unity_SHC.xyz * 
    ((normal_6.x * normal_6.x) - (normal_6.y * normal_6.y))
  )));
  mediump vec3 tmpvar_12;
  tmpvar_12 = max (((1.055 * 
    pow (max (res_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_8 = tmpvar_12;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_12);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = (c_17.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  mediump vec3 normal_6;
  normal_6 = tmpvar_5;
  mediump vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = normal_6;
  mediump vec3 res_8;
  mediump vec3 x_9;
  x_9.x = dot (unity_SHAr, tmpvar_7);
  x_9.y = dot (unity_SHAg, tmpvar_7);
  x_9.z = dot (unity_SHAb, tmpvar_7);
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normal_6.xyzz * normal_6.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  res_8 = (x_9 + (x1_10 + (unity_SHC.xyz * 
    ((normal_6.x * normal_6.x) - (normal_6.y * normal_6.y))
  )));
  mediump vec3 tmpvar_12;
  tmpvar_12 = max (((1.055 * 
    pow (max (res_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_8 = tmpvar_12;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_12);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = (c_17.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_3;
  tmpvar_3 = (_MainTex_TexelSize.x * 1.5);
  result_2.x = mix (tmpvar_3, (0.5 - tmpvar_3), _glesMultiTexCoord0.x);
  result_2.z = (result_2.x + 0.5);
  result_2.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 lightColor0_8;
  lightColor0_8 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_9;
  lightColor1_9 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_10;
  lightColor2_10 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_11;
  lightColor3_11 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_12;
  lightAttenSq_12 = unity_4LightAtten0;
  highp vec3 col_13;
  highp vec4 ndotl_14;
  highp vec4 lengthSq_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosX0 - tmpvar_5.x);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosY0 - tmpvar_5.y);
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosZ0 - tmpvar_5.z);
  lengthSq_15 = (tmpvar_16 * tmpvar_16);
  lengthSq_15 = (lengthSq_15 + (tmpvar_17 * tmpvar_17));
  lengthSq_15 = (lengthSq_15 + (tmpvar_18 * tmpvar_18));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (lengthSq_15, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_15 = tmpvar_19;
  ndotl_14 = (tmpvar_16 * tmpvar_7.x);
  ndotl_14 = (ndotl_14 + (tmpvar_17 * tmpvar_7.y));
  ndotl_14 = (ndotl_14 + (tmpvar_18 * tmpvar_7.z));
  highp vec4 tmpvar_20;
  tmpvar_20 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_14 * inversesqrt(tmpvar_19)));
  ndotl_14 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * (1.0/((1.0 + 
    (tmpvar_19 * lightAttenSq_12)
  ))));
  col_13 = (lightColor0_8 * tmpvar_21.x);
  col_13 = (col_13 + (lightColor1_9 * tmpvar_21.y));
  col_13 = (col_13 + (lightColor2_10 * tmpvar_21.z));
  col_13 = (col_13 + (lightColor3_11 * tmpvar_21.w));
  tmpvar_1 = col_13;
  mediump vec3 normal_22;
  normal_22 = tmpvar_7;
  mediump vec3 ambient_23;
  mediump vec4 tmpvar_24;
  tmpvar_24.w = 1.0;
  tmpvar_24.xyz = normal_22;
  mediump vec3 res_25;
  mediump vec3 x_26;
  x_26.x = dot (unity_SHAr, tmpvar_24);
  x_26.y = dot (unity_SHAg, tmpvar_24);
  x_26.z = dot (unity_SHAb, tmpvar_24);
  mediump vec3 x1_27;
  mediump vec4 tmpvar_28;
  tmpvar_28 = (normal_22.xyzz * normal_22.yzzx);
  x1_27.x = dot (unity_SHBr, tmpvar_28);
  x1_27.y = dot (unity_SHBg, tmpvar_28);
  x1_27.z = dot (unity_SHBb, tmpvar_28);
  res_25 = (x_26 + (x1_27 + (unity_SHC.xyz * 
    ((normal_22.x * normal_22.x) - (normal_22.y * normal_22.y))
  )));
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (res_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_25 = tmpvar_29;
  ambient_23 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_29));
  tmpvar_1 = ambient_23;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = tmpvar_7;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_23;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = (c_17.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_3;
  tmpvar_3 = (_MainTex_TexelSize.x * 1.5);
  result_2.x = mix (tmpvar_3, (0.5 - tmpvar_3), _glesMultiTexCoord0.x);
  result_2.z = (result_2.x + 0.5);
  result_2.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 lightColor0_8;
  lightColor0_8 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_9;
  lightColor1_9 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_10;
  lightColor2_10 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_11;
  lightColor3_11 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_12;
  lightAttenSq_12 = unity_4LightAtten0;
  highp vec3 col_13;
  highp vec4 ndotl_14;
  highp vec4 lengthSq_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosX0 - tmpvar_5.x);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosY0 - tmpvar_5.y);
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosZ0 - tmpvar_5.z);
  lengthSq_15 = (tmpvar_16 * tmpvar_16);
  lengthSq_15 = (lengthSq_15 + (tmpvar_17 * tmpvar_17));
  lengthSq_15 = (lengthSq_15 + (tmpvar_18 * tmpvar_18));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (lengthSq_15, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_15 = tmpvar_19;
  ndotl_14 = (tmpvar_16 * tmpvar_7.x);
  ndotl_14 = (ndotl_14 + (tmpvar_17 * tmpvar_7.y));
  ndotl_14 = (ndotl_14 + (tmpvar_18 * tmpvar_7.z));
  highp vec4 tmpvar_20;
  tmpvar_20 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_14 * inversesqrt(tmpvar_19)));
  ndotl_14 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * (1.0/((1.0 + 
    (tmpvar_19 * lightAttenSq_12)
  ))));
  col_13 = (lightColor0_8 * tmpvar_21.x);
  col_13 = (col_13 + (lightColor1_9 * tmpvar_21.y));
  col_13 = (col_13 + (lightColor2_10 * tmpvar_21.z));
  col_13 = (col_13 + (lightColor3_11 * tmpvar_21.w));
  tmpvar_1 = col_13;
  mediump vec3 normal_22;
  normal_22 = tmpvar_7;
  mediump vec3 ambient_23;
  mediump vec4 tmpvar_24;
  tmpvar_24.w = 1.0;
  tmpvar_24.xyz = normal_22;
  mediump vec3 res_25;
  mediump vec3 x_26;
  x_26.x = dot (unity_SHAr, tmpvar_24);
  x_26.y = dot (unity_SHAg, tmpvar_24);
  x_26.z = dot (unity_SHAb, tmpvar_24);
  mediump vec3 x1_27;
  mediump vec4 tmpvar_28;
  tmpvar_28 = (normal_22.xyzz * normal_22.yzzx);
  x1_27.x = dot (unity_SHBr, tmpvar_28);
  x1_27.y = dot (unity_SHBg, tmpvar_28);
  x1_27.z = dot (unity_SHBb, tmpvar_28);
  res_25 = (x_26 + (x1_27 + (unity_SHC.xyz * 
    ((normal_22.x * normal_22.x) - (normal_22.y * normal_22.y))
  )));
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (res_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_25 = tmpvar_29;
  ambient_23 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_29));
  tmpvar_1 = ambient_23;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = tmpvar_7;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_23;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = (c_17.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_3;
  tmpvar_3 = (_MainTex_TexelSize.x * 1.5);
  result_2.x = mix (tmpvar_3, (0.5 - tmpvar_3), _glesMultiTexCoord0.x);
  result_2.z = (result_2.x + 0.5);
  result_2.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 lightColor0_8;
  lightColor0_8 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_9;
  lightColor1_9 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_10;
  lightColor2_10 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_11;
  lightColor3_11 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_12;
  lightAttenSq_12 = unity_4LightAtten0;
  highp vec3 col_13;
  highp vec4 ndotl_14;
  highp vec4 lengthSq_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosX0 - tmpvar_5.x);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosY0 - tmpvar_5.y);
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosZ0 - tmpvar_5.z);
  lengthSq_15 = (tmpvar_16 * tmpvar_16);
  lengthSq_15 = (lengthSq_15 + (tmpvar_17 * tmpvar_17));
  lengthSq_15 = (lengthSq_15 + (tmpvar_18 * tmpvar_18));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (lengthSq_15, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_15 = tmpvar_19;
  ndotl_14 = (tmpvar_16 * tmpvar_7.x);
  ndotl_14 = (ndotl_14 + (tmpvar_17 * tmpvar_7.y));
  ndotl_14 = (ndotl_14 + (tmpvar_18 * tmpvar_7.z));
  highp vec4 tmpvar_20;
  tmpvar_20 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_14 * inversesqrt(tmpvar_19)));
  ndotl_14 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * (1.0/((1.0 + 
    (tmpvar_19 * lightAttenSq_12)
  ))));
  col_13 = (lightColor0_8 * tmpvar_21.x);
  col_13 = (col_13 + (lightColor1_9 * tmpvar_21.y));
  col_13 = (col_13 + (lightColor2_10 * tmpvar_21.z));
  col_13 = (col_13 + (lightColor3_11 * tmpvar_21.w));
  tmpvar_1 = col_13;
  mediump vec3 normal_22;
  normal_22 = tmpvar_7;
  mediump vec3 ambient_23;
  mediump vec4 tmpvar_24;
  tmpvar_24.w = 1.0;
  tmpvar_24.xyz = normal_22;
  mediump vec3 res_25;
  mediump vec3 x_26;
  x_26.x = dot (unity_SHAr, tmpvar_24);
  x_26.y = dot (unity_SHAg, tmpvar_24);
  x_26.z = dot (unity_SHAb, tmpvar_24);
  mediump vec3 x1_27;
  mediump vec4 tmpvar_28;
  tmpvar_28 = (normal_22.xyzz * normal_22.yzzx);
  x1_27.x = dot (unity_SHBr, tmpvar_28);
  x1_27.y = dot (unity_SHBg, tmpvar_28);
  x1_27.z = dot (unity_SHBb, tmpvar_28);
  res_25 = (x_26 + (x1_27 + (unity_SHC.xyz * 
    ((normal_22.x * normal_22.x) - (normal_22.y * normal_22.y))
  )));
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (res_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_25 = tmpvar_29;
  ambient_23 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_29));
  tmpvar_1 = ambient_23;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = tmpvar_7;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_23;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = (c_17.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_12;
  tmpvar_12 = tmpvar_11.xyz;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * ((tmpvar_12 * 
    ((tmpvar_12 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_10 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_6.w = alpha_10;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = c_15.xyz;
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_12;
  tmpvar_12 = tmpvar_11.xyz;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * ((tmpvar_12 * 
    ((tmpvar_12 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_10 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_6.w = alpha_10;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = c_15.xyz;
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_12;
  tmpvar_12 = tmpvar_11.xyz;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * ((tmpvar_12 * 
    ((tmpvar_12 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_10 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_6.w = alpha_10;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = c_15.xyz;
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  mediump vec3 normal_6;
  normal_6 = tmpvar_5;
  mediump vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = normal_6;
  mediump vec3 res_8;
  mediump vec3 x_9;
  x_9.x = dot (unity_SHAr, tmpvar_7);
  x_9.y = dot (unity_SHAg, tmpvar_7);
  x_9.z = dot (unity_SHAb, tmpvar_7);
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normal_6.xyzz * normal_6.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  res_8 = (x_9 + (x1_10 + (unity_SHC.xyz * 
    ((normal_6.x * normal_6.x) - (normal_6.y * normal_6.y))
  )));
  mediump vec3 tmpvar_12;
  tmpvar_12 = max (((1.055 * 
    pow (max (res_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_8 = tmpvar_12;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_12);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_12;
  tmpvar_12 = tmpvar_11.xyz;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * ((tmpvar_12 * 
    ((tmpvar_12 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_10 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_6.w = alpha_10;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = (c_15.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  mediump vec3 normal_6;
  normal_6 = tmpvar_5;
  mediump vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = normal_6;
  mediump vec3 res_8;
  mediump vec3 x_9;
  x_9.x = dot (unity_SHAr, tmpvar_7);
  x_9.y = dot (unity_SHAg, tmpvar_7);
  x_9.z = dot (unity_SHAb, tmpvar_7);
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normal_6.xyzz * normal_6.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  res_8 = (x_9 + (x1_10 + (unity_SHC.xyz * 
    ((normal_6.x * normal_6.x) - (normal_6.y * normal_6.y))
  )));
  mediump vec3 tmpvar_12;
  tmpvar_12 = max (((1.055 * 
    pow (max (res_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_8 = tmpvar_12;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_12);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_12;
  tmpvar_12 = tmpvar_11.xyz;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * ((tmpvar_12 * 
    ((tmpvar_12 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_10 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_6.w = alpha_10;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = (c_15.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  mediump vec3 normal_6;
  normal_6 = tmpvar_5;
  mediump vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = normal_6;
  mediump vec3 res_8;
  mediump vec3 x_9;
  x_9.x = dot (unity_SHAr, tmpvar_7);
  x_9.y = dot (unity_SHAg, tmpvar_7);
  x_9.z = dot (unity_SHAb, tmpvar_7);
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normal_6.xyzz * normal_6.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  res_8 = (x_9 + (x1_10 + (unity_SHC.xyz * 
    ((normal_6.x * normal_6.x) - (normal_6.y * normal_6.y))
  )));
  mediump vec3 tmpvar_12;
  tmpvar_12 = max (((1.055 * 
    pow (max (res_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_8 = tmpvar_12;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_12);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_12;
  tmpvar_12 = tmpvar_11.xyz;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * ((tmpvar_12 * 
    ((tmpvar_12 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_10 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_6.w = alpha_10;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = (c_15.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_3;
  tmpvar_3 = (_MainTex_TexelSize.x * 1.5);
  result_2.x = mix (tmpvar_3, (0.5 - tmpvar_3), _glesMultiTexCoord0.x);
  result_2.z = (result_2.x + 0.5);
  result_2.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 lightColor0_8;
  lightColor0_8 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_9;
  lightColor1_9 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_10;
  lightColor2_10 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_11;
  lightColor3_11 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_12;
  lightAttenSq_12 = unity_4LightAtten0;
  highp vec3 col_13;
  highp vec4 ndotl_14;
  highp vec4 lengthSq_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosX0 - tmpvar_5.x);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosY0 - tmpvar_5.y);
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosZ0 - tmpvar_5.z);
  lengthSq_15 = (tmpvar_16 * tmpvar_16);
  lengthSq_15 = (lengthSq_15 + (tmpvar_17 * tmpvar_17));
  lengthSq_15 = (lengthSq_15 + (tmpvar_18 * tmpvar_18));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (lengthSq_15, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_15 = tmpvar_19;
  ndotl_14 = (tmpvar_16 * tmpvar_7.x);
  ndotl_14 = (ndotl_14 + (tmpvar_17 * tmpvar_7.y));
  ndotl_14 = (ndotl_14 + (tmpvar_18 * tmpvar_7.z));
  highp vec4 tmpvar_20;
  tmpvar_20 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_14 * inversesqrt(tmpvar_19)));
  ndotl_14 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * (1.0/((1.0 + 
    (tmpvar_19 * lightAttenSq_12)
  ))));
  col_13 = (lightColor0_8 * tmpvar_21.x);
  col_13 = (col_13 + (lightColor1_9 * tmpvar_21.y));
  col_13 = (col_13 + (lightColor2_10 * tmpvar_21.z));
  col_13 = (col_13 + (lightColor3_11 * tmpvar_21.w));
  tmpvar_1 = col_13;
  mediump vec3 normal_22;
  normal_22 = tmpvar_7;
  mediump vec3 ambient_23;
  mediump vec4 tmpvar_24;
  tmpvar_24.w = 1.0;
  tmpvar_24.xyz = normal_22;
  mediump vec3 res_25;
  mediump vec3 x_26;
  x_26.x = dot (unity_SHAr, tmpvar_24);
  x_26.y = dot (unity_SHAg, tmpvar_24);
  x_26.z = dot (unity_SHAb, tmpvar_24);
  mediump vec3 x1_27;
  mediump vec4 tmpvar_28;
  tmpvar_28 = (normal_22.xyzz * normal_22.yzzx);
  x1_27.x = dot (unity_SHBr, tmpvar_28);
  x1_27.y = dot (unity_SHBg, tmpvar_28);
  x1_27.z = dot (unity_SHBb, tmpvar_28);
  res_25 = (x_26 + (x1_27 + (unity_SHC.xyz * 
    ((normal_22.x * normal_22.x) - (normal_22.y * normal_22.y))
  )));
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (res_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_25 = tmpvar_29;
  ambient_23 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_29));
  tmpvar_1 = ambient_23;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = tmpvar_7;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_23;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_12;
  tmpvar_12 = tmpvar_11.xyz;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * ((tmpvar_12 * 
    ((tmpvar_12 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_10 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_6.w = alpha_10;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = (c_15.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_3;
  tmpvar_3 = (_MainTex_TexelSize.x * 1.5);
  result_2.x = mix (tmpvar_3, (0.5 - tmpvar_3), _glesMultiTexCoord0.x);
  result_2.z = (result_2.x + 0.5);
  result_2.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 lightColor0_8;
  lightColor0_8 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_9;
  lightColor1_9 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_10;
  lightColor2_10 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_11;
  lightColor3_11 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_12;
  lightAttenSq_12 = unity_4LightAtten0;
  highp vec3 col_13;
  highp vec4 ndotl_14;
  highp vec4 lengthSq_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosX0 - tmpvar_5.x);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosY0 - tmpvar_5.y);
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosZ0 - tmpvar_5.z);
  lengthSq_15 = (tmpvar_16 * tmpvar_16);
  lengthSq_15 = (lengthSq_15 + (tmpvar_17 * tmpvar_17));
  lengthSq_15 = (lengthSq_15 + (tmpvar_18 * tmpvar_18));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (lengthSq_15, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_15 = tmpvar_19;
  ndotl_14 = (tmpvar_16 * tmpvar_7.x);
  ndotl_14 = (ndotl_14 + (tmpvar_17 * tmpvar_7.y));
  ndotl_14 = (ndotl_14 + (tmpvar_18 * tmpvar_7.z));
  highp vec4 tmpvar_20;
  tmpvar_20 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_14 * inversesqrt(tmpvar_19)));
  ndotl_14 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * (1.0/((1.0 + 
    (tmpvar_19 * lightAttenSq_12)
  ))));
  col_13 = (lightColor0_8 * tmpvar_21.x);
  col_13 = (col_13 + (lightColor1_9 * tmpvar_21.y));
  col_13 = (col_13 + (lightColor2_10 * tmpvar_21.z));
  col_13 = (col_13 + (lightColor3_11 * tmpvar_21.w));
  tmpvar_1 = col_13;
  mediump vec3 normal_22;
  normal_22 = tmpvar_7;
  mediump vec3 ambient_23;
  mediump vec4 tmpvar_24;
  tmpvar_24.w = 1.0;
  tmpvar_24.xyz = normal_22;
  mediump vec3 res_25;
  mediump vec3 x_26;
  x_26.x = dot (unity_SHAr, tmpvar_24);
  x_26.y = dot (unity_SHAg, tmpvar_24);
  x_26.z = dot (unity_SHAb, tmpvar_24);
  mediump vec3 x1_27;
  mediump vec4 tmpvar_28;
  tmpvar_28 = (normal_22.xyzz * normal_22.yzzx);
  x1_27.x = dot (unity_SHBr, tmpvar_28);
  x1_27.y = dot (unity_SHBg, tmpvar_28);
  x1_27.z = dot (unity_SHBb, tmpvar_28);
  res_25 = (x_26 + (x1_27 + (unity_SHC.xyz * 
    ((normal_22.x * normal_22.x) - (normal_22.y * normal_22.y))
  )));
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (res_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_25 = tmpvar_29;
  ambient_23 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_29));
  tmpvar_1 = ambient_23;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = tmpvar_7;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_23;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_12;
  tmpvar_12 = tmpvar_11.xyz;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * ((tmpvar_12 * 
    ((tmpvar_12 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_10 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_6.w = alpha_10;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = (c_15.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_3;
  tmpvar_3 = (_MainTex_TexelSize.x * 1.5);
  result_2.x = mix (tmpvar_3, (0.5 - tmpvar_3), _glesMultiTexCoord0.x);
  result_2.z = (result_2.x + 0.5);
  result_2.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 lightColor0_8;
  lightColor0_8 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_9;
  lightColor1_9 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_10;
  lightColor2_10 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_11;
  lightColor3_11 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_12;
  lightAttenSq_12 = unity_4LightAtten0;
  highp vec3 col_13;
  highp vec4 ndotl_14;
  highp vec4 lengthSq_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosX0 - tmpvar_5.x);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosY0 - tmpvar_5.y);
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosZ0 - tmpvar_5.z);
  lengthSq_15 = (tmpvar_16 * tmpvar_16);
  lengthSq_15 = (lengthSq_15 + (tmpvar_17 * tmpvar_17));
  lengthSq_15 = (lengthSq_15 + (tmpvar_18 * tmpvar_18));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (lengthSq_15, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_15 = tmpvar_19;
  ndotl_14 = (tmpvar_16 * tmpvar_7.x);
  ndotl_14 = (ndotl_14 + (tmpvar_17 * tmpvar_7.y));
  ndotl_14 = (ndotl_14 + (tmpvar_18 * tmpvar_7.z));
  highp vec4 tmpvar_20;
  tmpvar_20 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_14 * inversesqrt(tmpvar_19)));
  ndotl_14 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * (1.0/((1.0 + 
    (tmpvar_19 * lightAttenSq_12)
  ))));
  col_13 = (lightColor0_8 * tmpvar_21.x);
  col_13 = (col_13 + (lightColor1_9 * tmpvar_21.y));
  col_13 = (col_13 + (lightColor2_10 * tmpvar_21.z));
  col_13 = (col_13 + (lightColor3_11 * tmpvar_21.w));
  tmpvar_1 = col_13;
  mediump vec3 normal_22;
  normal_22 = tmpvar_7;
  mediump vec3 ambient_23;
  mediump vec4 tmpvar_24;
  tmpvar_24.w = 1.0;
  tmpvar_24.xyz = normal_22;
  mediump vec3 res_25;
  mediump vec3 x_26;
  x_26.x = dot (unity_SHAr, tmpvar_24);
  x_26.y = dot (unity_SHAg, tmpvar_24);
  x_26.z = dot (unity_SHAb, tmpvar_24);
  mediump vec3 x1_27;
  mediump vec4 tmpvar_28;
  tmpvar_28 = (normal_22.xyzz * normal_22.yzzx);
  x1_27.x = dot (unity_SHBr, tmpvar_28);
  x1_27.y = dot (unity_SHBg, tmpvar_28);
  x1_27.z = dot (unity_SHBb, tmpvar_28);
  res_25 = (x_26 + (x1_27 + (unity_SHC.xyz * 
    ((normal_22.x * normal_22.x) - (normal_22.y * normal_22.y))
  )));
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (res_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_25 = tmpvar_29;
  ambient_23 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_29));
  tmpvar_1 = ambient_23;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = tmpvar_7;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_23;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_12;
  tmpvar_12 = tmpvar_11.xyz;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * ((tmpvar_12 * 
    ((tmpvar_12 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_10 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_6.w = alpha_10;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = (c_15.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  mediump vec3 normal_6;
  normal_6 = tmpvar_5;
  mediump vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = normal_6;
  mediump vec3 res_8;
  mediump vec3 x_9;
  x_9.x = dot (unity_SHAr, tmpvar_7);
  x_9.y = dot (unity_SHAg, tmpvar_7);
  x_9.z = dot (unity_SHAb, tmpvar_7);
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normal_6.xyzz * normal_6.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  res_8 = (x_9 + (x1_10 + (unity_SHC.xyz * 
    ((normal_6.x * normal_6.x) - (normal_6.y * normal_6.y))
  )));
  mediump vec3 tmpvar_12;
  tmpvar_12 = max (((1.055 * 
    pow (max (res_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_8 = tmpvar_12;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_12);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = (c_17.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  mediump vec3 normal_6;
  normal_6 = tmpvar_5;
  mediump vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = normal_6;
  mediump vec3 res_8;
  mediump vec3 x_9;
  x_9.x = dot (unity_SHAr, tmpvar_7);
  x_9.y = dot (unity_SHAg, tmpvar_7);
  x_9.z = dot (unity_SHAb, tmpvar_7);
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normal_6.xyzz * normal_6.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  res_8 = (x_9 + (x1_10 + (unity_SHC.xyz * 
    ((normal_6.x * normal_6.x) - (normal_6.y * normal_6.y))
  )));
  mediump vec3 tmpvar_12;
  tmpvar_12 = max (((1.055 * 
    pow (max (res_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_8 = tmpvar_12;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_12);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = (c_17.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_glesNormal * tmpvar_4));
  mediump vec3 normal_6;
  normal_6 = tmpvar_5;
  mediump vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = normal_6;
  mediump vec3 res_8;
  mediump vec3 x_9;
  x_9.x = dot (unity_SHAr, tmpvar_7);
  x_9.y = dot (unity_SHAg, tmpvar_7);
  x_9.z = dot (unity_SHAb, tmpvar_7);
  mediump vec3 x1_10;
  mediump vec4 tmpvar_11;
  tmpvar_11 = (normal_6.xyzz * normal_6.yzzx);
  x1_10.x = dot (unity_SHBr, tmpvar_11);
  x1_10.y = dot (unity_SHBg, tmpvar_11);
  x1_10.z = dot (unity_SHBb, tmpvar_11);
  res_8 = (x_9 + (x1_10 + (unity_SHC.xyz * 
    ((normal_6.x * normal_6.x) - (normal_6.y * normal_6.y))
  )));
  mediump vec3 tmpvar_12;
  tmpvar_12 = max (((1.055 * 
    pow (max (res_8, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_8 = tmpvar_12;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
  xlv_TEXCOORD3 = max (vec3(0.0, 0.0, 0.0), tmpvar_12);
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = (c_17.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_3;
  tmpvar_3 = (_MainTex_TexelSize.x * 1.5);
  result_2.x = mix (tmpvar_3, (0.5 - tmpvar_3), _glesMultiTexCoord0.x);
  result_2.z = (result_2.x + 0.5);
  result_2.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 lightColor0_8;
  lightColor0_8 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_9;
  lightColor1_9 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_10;
  lightColor2_10 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_11;
  lightColor3_11 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_12;
  lightAttenSq_12 = unity_4LightAtten0;
  highp vec3 col_13;
  highp vec4 ndotl_14;
  highp vec4 lengthSq_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosX0 - tmpvar_5.x);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosY0 - tmpvar_5.y);
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosZ0 - tmpvar_5.z);
  lengthSq_15 = (tmpvar_16 * tmpvar_16);
  lengthSq_15 = (lengthSq_15 + (tmpvar_17 * tmpvar_17));
  lengthSq_15 = (lengthSq_15 + (tmpvar_18 * tmpvar_18));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (lengthSq_15, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_15 = tmpvar_19;
  ndotl_14 = (tmpvar_16 * tmpvar_7.x);
  ndotl_14 = (ndotl_14 + (tmpvar_17 * tmpvar_7.y));
  ndotl_14 = (ndotl_14 + (tmpvar_18 * tmpvar_7.z));
  highp vec4 tmpvar_20;
  tmpvar_20 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_14 * inversesqrt(tmpvar_19)));
  ndotl_14 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * (1.0/((1.0 + 
    (tmpvar_19 * lightAttenSq_12)
  ))));
  col_13 = (lightColor0_8 * tmpvar_21.x);
  col_13 = (col_13 + (lightColor1_9 * tmpvar_21.y));
  col_13 = (col_13 + (lightColor2_10 * tmpvar_21.z));
  col_13 = (col_13 + (lightColor3_11 * tmpvar_21.w));
  tmpvar_1 = col_13;
  mediump vec3 normal_22;
  normal_22 = tmpvar_7;
  mediump vec3 ambient_23;
  mediump vec4 tmpvar_24;
  tmpvar_24.w = 1.0;
  tmpvar_24.xyz = normal_22;
  mediump vec3 res_25;
  mediump vec3 x_26;
  x_26.x = dot (unity_SHAr, tmpvar_24);
  x_26.y = dot (unity_SHAg, tmpvar_24);
  x_26.z = dot (unity_SHAb, tmpvar_24);
  mediump vec3 x1_27;
  mediump vec4 tmpvar_28;
  tmpvar_28 = (normal_22.xyzz * normal_22.yzzx);
  x1_27.x = dot (unity_SHBr, tmpvar_28);
  x1_27.y = dot (unity_SHBg, tmpvar_28);
  x1_27.z = dot (unity_SHBb, tmpvar_28);
  res_25 = (x_26 + (x1_27 + (unity_SHC.xyz * 
    ((normal_22.x * normal_22.x) - (normal_22.y * normal_22.y))
  )));
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (res_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_25 = tmpvar_29;
  ambient_23 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_29));
  tmpvar_1 = ambient_23;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = tmpvar_7;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_23;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = (c_17.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_3;
  tmpvar_3 = (_MainTex_TexelSize.x * 1.5);
  result_2.x = mix (tmpvar_3, (0.5 - tmpvar_3), _glesMultiTexCoord0.x);
  result_2.z = (result_2.x + 0.5);
  result_2.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 lightColor0_8;
  lightColor0_8 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_9;
  lightColor1_9 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_10;
  lightColor2_10 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_11;
  lightColor3_11 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_12;
  lightAttenSq_12 = unity_4LightAtten0;
  highp vec3 col_13;
  highp vec4 ndotl_14;
  highp vec4 lengthSq_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosX0 - tmpvar_5.x);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosY0 - tmpvar_5.y);
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosZ0 - tmpvar_5.z);
  lengthSq_15 = (tmpvar_16 * tmpvar_16);
  lengthSq_15 = (lengthSq_15 + (tmpvar_17 * tmpvar_17));
  lengthSq_15 = (lengthSq_15 + (tmpvar_18 * tmpvar_18));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (lengthSq_15, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_15 = tmpvar_19;
  ndotl_14 = (tmpvar_16 * tmpvar_7.x);
  ndotl_14 = (ndotl_14 + (tmpvar_17 * tmpvar_7.y));
  ndotl_14 = (ndotl_14 + (tmpvar_18 * tmpvar_7.z));
  highp vec4 tmpvar_20;
  tmpvar_20 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_14 * inversesqrt(tmpvar_19)));
  ndotl_14 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * (1.0/((1.0 + 
    (tmpvar_19 * lightAttenSq_12)
  ))));
  col_13 = (lightColor0_8 * tmpvar_21.x);
  col_13 = (col_13 + (lightColor1_9 * tmpvar_21.y));
  col_13 = (col_13 + (lightColor2_10 * tmpvar_21.z));
  col_13 = (col_13 + (lightColor3_11 * tmpvar_21.w));
  tmpvar_1 = col_13;
  mediump vec3 normal_22;
  normal_22 = tmpvar_7;
  mediump vec3 ambient_23;
  mediump vec4 tmpvar_24;
  tmpvar_24.w = 1.0;
  tmpvar_24.xyz = normal_22;
  mediump vec3 res_25;
  mediump vec3 x_26;
  x_26.x = dot (unity_SHAr, tmpvar_24);
  x_26.y = dot (unity_SHAg, tmpvar_24);
  x_26.z = dot (unity_SHAb, tmpvar_24);
  mediump vec3 x1_27;
  mediump vec4 tmpvar_28;
  tmpvar_28 = (normal_22.xyzz * normal_22.yzzx);
  x1_27.x = dot (unity_SHBr, tmpvar_28);
  x1_27.y = dot (unity_SHBg, tmpvar_28);
  x1_27.z = dot (unity_SHBb, tmpvar_28);
  res_25 = (x_26 + (x1_27 + (unity_SHC.xyz * 
    ((normal_22.x * normal_22.x) - (normal_22.y * normal_22.y))
  )));
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (res_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_25 = tmpvar_29;
  ambient_23 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_29));
  tmpvar_1 = ambient_23;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = tmpvar_7;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_23;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = (c_17.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  highp vec4 result_2;
  result_2.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_3;
  tmpvar_3 = (_MainTex_TexelSize.x * 1.5);
  result_2.x = mix (tmpvar_3, (0.5 - tmpvar_3), _glesMultiTexCoord0.x);
  result_2.z = (result_2.x + 0.5);
  result_2.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = _glesVertex.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = unity_WorldToObject[0].xyz;
  tmpvar_6[1] = unity_WorldToObject[1].xyz;
  tmpvar_6[2] = unity_WorldToObject[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_glesNormal * tmpvar_6));
  highp vec3 lightColor0_8;
  lightColor0_8 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_9;
  lightColor1_9 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_10;
  lightColor2_10 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_11;
  lightColor3_11 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_12;
  lightAttenSq_12 = unity_4LightAtten0;
  highp vec3 col_13;
  highp vec4 ndotl_14;
  highp vec4 lengthSq_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = (unity_4LightPosX0 - tmpvar_5.x);
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_4LightPosY0 - tmpvar_5.y);
  highp vec4 tmpvar_18;
  tmpvar_18 = (unity_4LightPosZ0 - tmpvar_5.z);
  lengthSq_15 = (tmpvar_16 * tmpvar_16);
  lengthSq_15 = (lengthSq_15 + (tmpvar_17 * tmpvar_17));
  lengthSq_15 = (lengthSq_15 + (tmpvar_18 * tmpvar_18));
  highp vec4 tmpvar_19;
  tmpvar_19 = max (lengthSq_15, vec4(1e-06, 1e-06, 1e-06, 1e-06));
  lengthSq_15 = tmpvar_19;
  ndotl_14 = (tmpvar_16 * tmpvar_7.x);
  ndotl_14 = (ndotl_14 + (tmpvar_17 * tmpvar_7.y));
  ndotl_14 = (ndotl_14 + (tmpvar_18 * tmpvar_7.z));
  highp vec4 tmpvar_20;
  tmpvar_20 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_14 * inversesqrt(tmpvar_19)));
  ndotl_14 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * (1.0/((1.0 + 
    (tmpvar_19 * lightAttenSq_12)
  ))));
  col_13 = (lightColor0_8 * tmpvar_21.x);
  col_13 = (col_13 + (lightColor1_9 * tmpvar_21.y));
  col_13 = (col_13 + (lightColor2_10 * tmpvar_21.z));
  col_13 = (col_13 + (lightColor3_11 * tmpvar_21.w));
  tmpvar_1 = col_13;
  mediump vec3 normal_22;
  normal_22 = tmpvar_7;
  mediump vec3 ambient_23;
  mediump vec4 tmpvar_24;
  tmpvar_24.w = 1.0;
  tmpvar_24.xyz = normal_22;
  mediump vec3 res_25;
  mediump vec3 x_26;
  x_26.x = dot (unity_SHAr, tmpvar_24);
  x_26.y = dot (unity_SHAg, tmpvar_24);
  x_26.z = dot (unity_SHAb, tmpvar_24);
  mediump vec3 x1_27;
  mediump vec4 tmpvar_28;
  tmpvar_28 = (normal_22.xyzz * normal_22.yzzx);
  x1_27.x = dot (unity_SHBr, tmpvar_28);
  x1_27.y = dot (unity_SHBg, tmpvar_28);
  x1_27.z = dot (unity_SHBb, tmpvar_28);
  res_25 = (x_26 + (x1_27 + (unity_SHC.xyz * 
    ((normal_22.x * normal_22.x) - (normal_22.y * normal_22.y))
  )));
  mediump vec3 tmpvar_29;
  tmpvar_29 = max (((1.055 * 
    pow (max (res_25, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
  ) - 0.055), vec3(0.0, 0.0, 0.0));
  res_25 = tmpvar_29;
  ambient_23 = (tmpvar_1 + max (vec3(0.0, 0.0, 0.0), tmpvar_29));
  tmpvar_1 = ambient_23;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
  xlv_TEXCOORD0 = tmpvar_7;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = result_2;
  xlv_TEXCOORD3 = ambient_23;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = (c_17.xyz + (col_6.xyz * xlv_TEXCOORD3));
  gl_FragData[0] = c_16;
}


#endif
"
}
}
Program "fp" {
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
}
}
 Pass {
  Name "FORWARD"
  LOD 200
  Tags { "IGNOREPROJECTOR" = "true" "LIGHTMODE" = "FORWARDADD" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
  ZWrite Off
  Cull Off
  GpuProgramID 83023
Program "vp" {
SubProgram "gles hw_tier00 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  col_8 = tmpvar_10;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_11).xyz;
  highp float tmpvar_12;
  tmpvar_12 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_12;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_13;
  lowp vec4 c_14;
  lowp float diff_15;
  mediump float tmpvar_16;
  tmpvar_16 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_15 = tmpvar_16;
  c_14.xyz = ((col_8.xyz * tmpvar_1) * diff_15);
  c_14.w = col_8.w;
  c_13.w = c_14.w;
  c_13.xyz = c_14.xyz;
  gl_FragData[0] = c_13;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  col_8 = tmpvar_10;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_11).xyz;
  highp float tmpvar_12;
  tmpvar_12 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_12;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_13;
  lowp vec4 c_14;
  lowp float diff_15;
  mediump float tmpvar_16;
  tmpvar_16 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_15 = tmpvar_16;
  c_14.xyz = ((col_8.xyz * tmpvar_1) * diff_15);
  c_14.w = col_8.w;
  c_13.w = c_14.w;
  c_13.xyz = c_14.xyz;
  gl_FragData[0] = c_13;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  col_8 = tmpvar_10;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_11).xyz;
  highp float tmpvar_12;
  tmpvar_12 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_12;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_13;
  lowp vec4 c_14;
  lowp float diff_15;
  mediump float tmpvar_16;
  tmpvar_16 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_15 = tmpvar_16;
  c_14.xyz = ((col_8.xyz * tmpvar_1) * diff_15);
  c_14.w = col_8.w;
  c_13.w = c_14.w;
  c_13.xyz = c_14.xyz;
  gl_FragData[0] = c_13;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6 = tmpvar_8;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_9;
  lowp vec4 c_10;
  lowp float diff_11;
  mediump float tmpvar_12;
  tmpvar_12 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_11 = tmpvar_12;
  c_10.xyz = ((col_6.xyz * tmpvar_1) * diff_11);
  c_10.w = col_6.w;
  c_9.w = c_10.w;
  c_9.xyz = c_10.xyz;
  gl_FragData[0] = c_9;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6 = tmpvar_8;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_9;
  lowp vec4 c_10;
  lowp float diff_11;
  mediump float tmpvar_12;
  tmpvar_12 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_11 = tmpvar_12;
  c_10.xyz = ((col_6.xyz * tmpvar_1) * diff_11);
  c_10.w = col_6.w;
  c_9.w = c_10.w;
  c_9.xyz = c_10.xyz;
  gl_FragData[0] = c_9;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6 = tmpvar_8;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_9;
  lowp vec4 c_10;
  lowp float diff_11;
  mediump float tmpvar_12;
  tmpvar_12 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_11 = tmpvar_12;
  c_10.xyz = ((col_6.xyz * tmpvar_1) * diff_11);
  c_10.w = col_6.w;
  c_9.w = c_10.w;
  c_9.xyz = c_10.xyz;
  gl_FragData[0] = c_9;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  col_8 = tmpvar_10;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_11);
  lowp float tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_12 = tmpvar_13.w;
  lowp float tmpvar_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_14 = tmpvar_15.w;
  highp float tmpvar_16;
  tmpvar_16 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_12) * tmpvar_14);
  atten_3 = tmpvar_16;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_17;
  lowp vec4 c_18;
  lowp float diff_19;
  mediump float tmpvar_20;
  tmpvar_20 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_19 = tmpvar_20;
  c_18.xyz = ((col_8.xyz * tmpvar_1) * diff_19);
  c_18.w = col_8.w;
  c_17.w = c_18.w;
  c_17.xyz = c_18.xyz;
  gl_FragData[0] = c_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  col_8 = tmpvar_10;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_11);
  lowp float tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_12 = tmpvar_13.w;
  lowp float tmpvar_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_14 = tmpvar_15.w;
  highp float tmpvar_16;
  tmpvar_16 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_12) * tmpvar_14);
  atten_3 = tmpvar_16;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_17;
  lowp vec4 c_18;
  lowp float diff_19;
  mediump float tmpvar_20;
  tmpvar_20 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_19 = tmpvar_20;
  c_18.xyz = ((col_8.xyz * tmpvar_1) * diff_19);
  c_18.w = col_8.w;
  c_17.w = c_18.w;
  c_17.xyz = c_18.xyz;
  gl_FragData[0] = c_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  col_8 = tmpvar_10;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_11);
  lowp float tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_12 = tmpvar_13.w;
  lowp float tmpvar_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_14 = tmpvar_15.w;
  highp float tmpvar_16;
  tmpvar_16 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_12) * tmpvar_14);
  atten_3 = tmpvar_16;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_17;
  lowp vec4 c_18;
  lowp float diff_19;
  mediump float tmpvar_20;
  tmpvar_20 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_19 = tmpvar_20;
  c_18.xyz = ((col_8.xyz * tmpvar_1) * diff_19);
  c_18.w = col_8.w;
  c_17.w = c_18.w;
  c_17.xyz = c_18.xyz;
  gl_FragData[0] = c_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  col_8 = tmpvar_10;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_11).xyz;
  highp float tmpvar_12;
  tmpvar_12 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_12;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_13;
  lowp vec4 c_14;
  lowp float diff_15;
  mediump float tmpvar_16;
  tmpvar_16 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_15 = tmpvar_16;
  c_14.xyz = ((col_8.xyz * tmpvar_1) * diff_15);
  c_14.w = col_8.w;
  c_13.w = c_14.w;
  c_13.xyz = c_14.xyz;
  gl_FragData[0] = c_13;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  col_8 = tmpvar_10;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_11).xyz;
  highp float tmpvar_12;
  tmpvar_12 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_12;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_13;
  lowp vec4 c_14;
  lowp float diff_15;
  mediump float tmpvar_16;
  tmpvar_16 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_15 = tmpvar_16;
  c_14.xyz = ((col_8.xyz * tmpvar_1) * diff_15);
  c_14.w = col_8.w;
  c_13.w = c_14.w;
  c_13.xyz = c_14.xyz;
  gl_FragData[0] = c_13;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  col_8 = tmpvar_10;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_11).xyz;
  highp float tmpvar_12;
  tmpvar_12 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_12;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_13;
  lowp vec4 c_14;
  lowp float diff_15;
  mediump float tmpvar_16;
  tmpvar_16 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_15 = tmpvar_16;
  c_14.xyz = ((col_8.xyz * tmpvar_1) * diff_15);
  c_14.w = col_8.w;
  c_13.w = c_14.w;
  c_13.xyz = c_14.xyz;
  gl_FragData[0] = c_13;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  col_7 = tmpvar_9;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = xlv_TEXCOORD1;
  highp float tmpvar_11;
  tmpvar_11 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_10).xy).w;
  atten_3 = tmpvar_11;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_12;
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = ((col_7.xyz * tmpvar_1) * diff_14);
  c_13.w = col_7.w;
  c_12.w = c_13.w;
  c_12.xyz = c_13.xyz;
  gl_FragData[0] = c_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  col_7 = tmpvar_9;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = xlv_TEXCOORD1;
  highp float tmpvar_11;
  tmpvar_11 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_10).xy).w;
  atten_3 = tmpvar_11;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_12;
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = ((col_7.xyz * tmpvar_1) * diff_14);
  c_13.w = col_7.w;
  c_12.w = c_13.w;
  c_12.xyz = c_13.xyz;
  gl_FragData[0] = c_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  col_7 = tmpvar_9;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = xlv_TEXCOORD1;
  highp float tmpvar_11;
  tmpvar_11 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_10).xy).w;
  atten_3 = tmpvar_11;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_12;
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = ((col_7.xyz * tmpvar_1) * diff_14);
  c_13.w = col_7.w;
  c_12.w = c_13.w;
  c_12.xyz = c_13.xyz;
  gl_FragData[0] = c_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  col_8 = rgba_9;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16).xyz;
  highp float tmpvar_17;
  tmpvar_17 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_17;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_18;
  lowp vec4 c_19;
  lowp float diff_20;
  mediump float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_20 = tmpvar_21;
  c_19.xyz = ((col_8.xyz * tmpvar_1) * diff_20);
  c_19.w = col_8.w;
  c_18.w = c_19.w;
  c_18.xyz = c_19.xyz;
  gl_FragData[0] = c_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  col_8 = rgba_9;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16).xyz;
  highp float tmpvar_17;
  tmpvar_17 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_17;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_18;
  lowp vec4 c_19;
  lowp float diff_20;
  mediump float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_20 = tmpvar_21;
  c_19.xyz = ((col_8.xyz * tmpvar_1) * diff_20);
  c_19.w = col_8.w;
  c_18.w = c_19.w;
  c_18.xyz = c_19.xyz;
  gl_FragData[0] = c_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  col_8 = rgba_9;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16).xyz;
  highp float tmpvar_17;
  tmpvar_17 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_17;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_18;
  lowp vec4 c_19;
  lowp float diff_20;
  mediump float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_20 = tmpvar_21;
  c_19.xyz = ((col_8.xyz * tmpvar_1) * diff_20);
  c_19.w = col_8.w;
  c_18.w = c_19.w;
  c_18.xyz = c_19.xyz;
  gl_FragData[0] = c_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = c_15.xyz;
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = c_15.xyz;
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = c_15.xyz;
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_10;
  lowp vec4 c_11;
  lowp float diff_12;
  mediump float tmpvar_13;
  tmpvar_13 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_12 = tmpvar_13;
  c_11.xyz = ((col_6.xyz * tmpvar_1) * diff_12);
  c_11.w = col_6.w;
  c_10.w = c_11.w;
  c_10.xyz = c_11.xyz;
  gl_FragData[0] = c_10;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_10;
  lowp vec4 c_11;
  lowp float diff_12;
  mediump float tmpvar_13;
  tmpvar_13 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_12 = tmpvar_13;
  c_11.xyz = ((col_6.xyz * tmpvar_1) * diff_12);
  c_11.w = col_6.w;
  c_10.w = c_11.w;
  c_10.xyz = c_11.xyz;
  gl_FragData[0] = c_10;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_10;
  lowp vec4 c_11;
  lowp float diff_12;
  mediump float tmpvar_13;
  tmpvar_13 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_12 = tmpvar_13;
  c_11.xyz = ((col_6.xyz * tmpvar_1) * diff_12);
  c_11.w = col_6.w;
  c_10.w = c_11.w;
  c_10.xyz = c_11.xyz;
  gl_FragData[0] = c_10;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  col_8 = rgba_9;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16);
  lowp float tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_17 = tmpvar_18.w;
  lowp float tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_19 = tmpvar_20.w;
  highp float tmpvar_21;
  tmpvar_21 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_17) * tmpvar_19);
  atten_3 = tmpvar_21;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_22;
  lowp vec4 c_23;
  lowp float diff_24;
  mediump float tmpvar_25;
  tmpvar_25 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_24 = tmpvar_25;
  c_23.xyz = ((col_8.xyz * tmpvar_1) * diff_24);
  c_23.w = col_8.w;
  c_22.w = c_23.w;
  c_22.xyz = c_23.xyz;
  gl_FragData[0] = c_22;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  col_8 = rgba_9;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16);
  lowp float tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_17 = tmpvar_18.w;
  lowp float tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_19 = tmpvar_20.w;
  highp float tmpvar_21;
  tmpvar_21 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_17) * tmpvar_19);
  atten_3 = tmpvar_21;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_22;
  lowp vec4 c_23;
  lowp float diff_24;
  mediump float tmpvar_25;
  tmpvar_25 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_24 = tmpvar_25;
  c_23.xyz = ((col_8.xyz * tmpvar_1) * diff_24);
  c_23.w = col_8.w;
  c_22.w = c_23.w;
  c_22.xyz = c_23.xyz;
  gl_FragData[0] = c_22;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  col_8 = rgba_9;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16);
  lowp float tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_17 = tmpvar_18.w;
  lowp float tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_19 = tmpvar_20.w;
  highp float tmpvar_21;
  tmpvar_21 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_17) * tmpvar_19);
  atten_3 = tmpvar_21;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_22;
  lowp vec4 c_23;
  lowp float diff_24;
  mediump float tmpvar_25;
  tmpvar_25 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_24 = tmpvar_25;
  c_23.xyz = ((col_8.xyz * tmpvar_1) * diff_24);
  c_23.w = col_8.w;
  c_22.w = c_23.w;
  c_22.xyz = c_23.xyz;
  gl_FragData[0] = c_22;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  col_8 = rgba_9;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16).xyz;
  highp float tmpvar_17;
  tmpvar_17 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_17;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_18;
  lowp vec4 c_19;
  lowp float diff_20;
  mediump float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_20 = tmpvar_21;
  c_19.xyz = ((col_8.xyz * tmpvar_1) * diff_20);
  c_19.w = col_8.w;
  c_18.w = c_19.w;
  c_18.xyz = c_19.xyz;
  gl_FragData[0] = c_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  col_8 = rgba_9;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16).xyz;
  highp float tmpvar_17;
  tmpvar_17 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_17;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_18;
  lowp vec4 c_19;
  lowp float diff_20;
  mediump float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_20 = tmpvar_21;
  c_19.xyz = ((col_8.xyz * tmpvar_1) * diff_20);
  c_19.w = col_8.w;
  c_18.w = c_19.w;
  c_18.xyz = c_19.xyz;
  gl_FragData[0] = c_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  col_8 = rgba_9;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16).xyz;
  highp float tmpvar_17;
  tmpvar_17 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_17;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_18;
  lowp vec4 c_19;
  lowp float diff_20;
  mediump float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_20 = tmpvar_21;
  c_19.xyz = ((col_8.xyz * tmpvar_1) * diff_20);
  c_19.w = col_8.w;
  c_18.w = c_19.w;
  c_18.xyz = c_19.xyz;
  gl_FragData[0] = c_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  mediump vec4 rgba_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_11;
  tmpvar_11.x = tmpvar_9.x;
  tmpvar_11.yz = tmpvar_10.xy;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _YpCbCrTransform[0].xyz;
  tmpvar_12[1] = _YpCbCrTransform[1].xyz;
  tmpvar_12[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_13;
  v_13.x = _YpCbCrTransform[0].w;
  v_13.y = _YpCbCrTransform[1].w;
  v_13.z = _YpCbCrTransform[2].w;
  v_13.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = (tmpvar_12 * (tmpvar_11 + v_13.xyz));
  rgba_8 = tmpvar_14;
  col_7 = rgba_8;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = xlv_TEXCOORD1;
  highp float tmpvar_16;
  tmpvar_16 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_15).xy).w;
  atten_3 = tmpvar_16;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_17;
  lowp vec4 c_18;
  lowp float diff_19;
  mediump float tmpvar_20;
  tmpvar_20 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_19 = tmpvar_20;
  c_18.xyz = ((col_7.xyz * tmpvar_1) * diff_19);
  c_18.w = col_7.w;
  c_17.w = c_18.w;
  c_17.xyz = c_18.xyz;
  gl_FragData[0] = c_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  mediump vec4 rgba_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_11;
  tmpvar_11.x = tmpvar_9.x;
  tmpvar_11.yz = tmpvar_10.xy;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _YpCbCrTransform[0].xyz;
  tmpvar_12[1] = _YpCbCrTransform[1].xyz;
  tmpvar_12[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_13;
  v_13.x = _YpCbCrTransform[0].w;
  v_13.y = _YpCbCrTransform[1].w;
  v_13.z = _YpCbCrTransform[2].w;
  v_13.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = (tmpvar_12 * (tmpvar_11 + v_13.xyz));
  rgba_8 = tmpvar_14;
  col_7 = rgba_8;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = xlv_TEXCOORD1;
  highp float tmpvar_16;
  tmpvar_16 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_15).xy).w;
  atten_3 = tmpvar_16;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_17;
  lowp vec4 c_18;
  lowp float diff_19;
  mediump float tmpvar_20;
  tmpvar_20 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_19 = tmpvar_20;
  c_18.xyz = ((col_7.xyz * tmpvar_1) * diff_19);
  c_18.w = col_7.w;
  c_17.w = c_18.w;
  c_17.xyz = c_18.xyz;
  gl_FragData[0] = c_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  mediump vec4 rgba_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_11;
  tmpvar_11.x = tmpvar_9.x;
  tmpvar_11.yz = tmpvar_10.xy;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _YpCbCrTransform[0].xyz;
  tmpvar_12[1] = _YpCbCrTransform[1].xyz;
  tmpvar_12[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_13;
  v_13.x = _YpCbCrTransform[0].w;
  v_13.y = _YpCbCrTransform[1].w;
  v_13.z = _YpCbCrTransform[2].w;
  v_13.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = (tmpvar_12 * (tmpvar_11 + v_13.xyz));
  rgba_8 = tmpvar_14;
  col_7 = rgba_8;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = xlv_TEXCOORD1;
  highp float tmpvar_16;
  tmpvar_16 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_15).xy).w;
  atten_3 = tmpvar_16;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_17;
  lowp vec4 c_18;
  lowp float diff_19;
  mediump float tmpvar_20;
  tmpvar_20 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_19 = tmpvar_20;
  c_18.xyz = ((col_7.xyz * tmpvar_1) * diff_19);
  c_18.w = col_7.w;
  c_17.w = c_18.w;
  c_17.xyz = c_18.xyz;
  gl_FragData[0] = c_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  rgba_9.w = tmpvar_11.w;
  rgba_9.xyz = (tmpvar_11.xyz * ((tmpvar_11.xyz * 
    ((tmpvar_11.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8 = rgba_9;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_12).xyz;
  highp float tmpvar_13;
  tmpvar_13 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_13;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_8.xyz * tmpvar_1) * diff_16);
  c_15.w = col_8.w;
  c_14.w = c_15.w;
  c_14.xyz = c_15.xyz;
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  rgba_9.w = tmpvar_11.w;
  rgba_9.xyz = (tmpvar_11.xyz * ((tmpvar_11.xyz * 
    ((tmpvar_11.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8 = rgba_9;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_12).xyz;
  highp float tmpvar_13;
  tmpvar_13 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_13;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_8.xyz * tmpvar_1) * diff_16);
  c_15.w = col_8.w;
  c_14.w = c_15.w;
  c_14.xyz = c_15.xyz;
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  rgba_9.w = tmpvar_11.w;
  rgba_9.xyz = (tmpvar_11.xyz * ((tmpvar_11.xyz * 
    ((tmpvar_11.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8 = rgba_9;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_12).xyz;
  highp float tmpvar_13;
  tmpvar_13 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_13;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_8.xyz * tmpvar_1) * diff_16);
  c_15.w = col_8.w;
  c_14.w = c_15.w;
  c_14.xyz = c_15.xyz;
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6.xyz = tmpvar_8.xyz;
  mediump float alpha_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_11;
  tmpvar_11 = tmpvar_10.xyz;
  alpha_9 = (((tmpvar_11.x + tmpvar_11.y) + tmpvar_11.z) / 3.0);
  col_6.w = alpha_9;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_12;
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = ((col_6.xyz * tmpvar_1) * diff_14);
  c_13.w = col_6.w;
  c_12.w = c_13.w;
  c_12.xyz = c_13.xyz;
  gl_FragData[0] = c_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6.xyz = tmpvar_8.xyz;
  mediump float alpha_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_11;
  tmpvar_11 = tmpvar_10.xyz;
  alpha_9 = (((tmpvar_11.x + tmpvar_11.y) + tmpvar_11.z) / 3.0);
  col_6.w = alpha_9;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_12;
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = ((col_6.xyz * tmpvar_1) * diff_14);
  c_13.w = col_6.w;
  c_12.w = c_13.w;
  c_12.xyz = c_13.xyz;
  gl_FragData[0] = c_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6.xyz = tmpvar_8.xyz;
  mediump float alpha_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_11;
  tmpvar_11 = tmpvar_10.xyz;
  alpha_9 = (((tmpvar_11.x + tmpvar_11.y) + tmpvar_11.z) / 3.0);
  col_6.w = alpha_9;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_12;
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = ((col_6.xyz * tmpvar_1) * diff_14);
  c_13.w = col_6.w;
  c_12.w = c_13.w;
  c_12.xyz = c_13.xyz;
  gl_FragData[0] = c_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  rgba_9.w = tmpvar_11.w;
  rgba_9.xyz = (tmpvar_11.xyz * ((tmpvar_11.xyz * 
    ((tmpvar_11.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8 = rgba_9;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_12);
  lowp float tmpvar_13;
  highp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_13 = tmpvar_14.w;
  lowp float tmpvar_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_15 = tmpvar_16.w;
  highp float tmpvar_17;
  tmpvar_17 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_13) * tmpvar_15);
  atten_3 = tmpvar_17;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_18;
  lowp vec4 c_19;
  lowp float diff_20;
  mediump float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_20 = tmpvar_21;
  c_19.xyz = ((col_8.xyz * tmpvar_1) * diff_20);
  c_19.w = col_8.w;
  c_18.w = c_19.w;
  c_18.xyz = c_19.xyz;
  gl_FragData[0] = c_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  rgba_9.w = tmpvar_11.w;
  rgba_9.xyz = (tmpvar_11.xyz * ((tmpvar_11.xyz * 
    ((tmpvar_11.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8 = rgba_9;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_12);
  lowp float tmpvar_13;
  highp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_13 = tmpvar_14.w;
  lowp float tmpvar_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_15 = tmpvar_16.w;
  highp float tmpvar_17;
  tmpvar_17 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_13) * tmpvar_15);
  atten_3 = tmpvar_17;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_18;
  lowp vec4 c_19;
  lowp float diff_20;
  mediump float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_20 = tmpvar_21;
  c_19.xyz = ((col_8.xyz * tmpvar_1) * diff_20);
  c_19.w = col_8.w;
  c_18.w = c_19.w;
  c_18.xyz = c_19.xyz;
  gl_FragData[0] = c_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  rgba_9.w = tmpvar_11.w;
  rgba_9.xyz = (tmpvar_11.xyz * ((tmpvar_11.xyz * 
    ((tmpvar_11.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8 = rgba_9;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_12);
  lowp float tmpvar_13;
  highp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_13 = tmpvar_14.w;
  lowp float tmpvar_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_15 = tmpvar_16.w;
  highp float tmpvar_17;
  tmpvar_17 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_13) * tmpvar_15);
  atten_3 = tmpvar_17;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_18;
  lowp vec4 c_19;
  lowp float diff_20;
  mediump float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_20 = tmpvar_21;
  c_19.xyz = ((col_8.xyz * tmpvar_1) * diff_20);
  c_19.w = col_8.w;
  c_18.w = c_19.w;
  c_18.xyz = c_19.xyz;
  gl_FragData[0] = c_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  rgba_9.w = tmpvar_11.w;
  rgba_9.xyz = (tmpvar_11.xyz * ((tmpvar_11.xyz * 
    ((tmpvar_11.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8 = rgba_9;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_12).xyz;
  highp float tmpvar_13;
  tmpvar_13 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_13;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_8.xyz * tmpvar_1) * diff_16);
  c_15.w = col_8.w;
  c_14.w = c_15.w;
  c_14.xyz = c_15.xyz;
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  rgba_9.w = tmpvar_11.w;
  rgba_9.xyz = (tmpvar_11.xyz * ((tmpvar_11.xyz * 
    ((tmpvar_11.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8 = rgba_9;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_12).xyz;
  highp float tmpvar_13;
  tmpvar_13 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_13;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_8.xyz * tmpvar_1) * diff_16);
  c_15.w = col_8.w;
  c_14.w = c_15.w;
  c_14.xyz = c_15.xyz;
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  rgba_9.w = tmpvar_11.w;
  rgba_9.xyz = (tmpvar_11.xyz * ((tmpvar_11.xyz * 
    ((tmpvar_11.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8 = rgba_9;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_12).xyz;
  highp float tmpvar_13;
  tmpvar_13 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_13;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_8.xyz * tmpvar_1) * diff_16);
  c_15.w = col_8.w;
  c_14.w = c_15.w;
  c_14.xyz = c_15.xyz;
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  mediump vec4 rgba_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  rgba_8.w = tmpvar_10.w;
  rgba_8.xyz = (tmpvar_10.xyz * ((tmpvar_10.xyz * 
    ((tmpvar_10.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_7 = rgba_8;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = xlv_TEXCOORD1;
  highp float tmpvar_12;
  tmpvar_12 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_11).xy).w;
  atten_3 = tmpvar_12;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_13;
  lowp vec4 c_14;
  lowp float diff_15;
  mediump float tmpvar_16;
  tmpvar_16 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_15 = tmpvar_16;
  c_14.xyz = ((col_7.xyz * tmpvar_1) * diff_15);
  c_14.w = col_7.w;
  c_13.w = c_14.w;
  c_13.xyz = c_14.xyz;
  gl_FragData[0] = c_13;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  mediump vec4 rgba_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  rgba_8.w = tmpvar_10.w;
  rgba_8.xyz = (tmpvar_10.xyz * ((tmpvar_10.xyz * 
    ((tmpvar_10.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_7 = rgba_8;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = xlv_TEXCOORD1;
  highp float tmpvar_12;
  tmpvar_12 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_11).xy).w;
  atten_3 = tmpvar_12;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_13;
  lowp vec4 c_14;
  lowp float diff_15;
  mediump float tmpvar_16;
  tmpvar_16 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_15 = tmpvar_16;
  c_14.xyz = ((col_7.xyz * tmpvar_1) * diff_15);
  c_14.w = col_7.w;
  c_13.w = c_14.w;
  c_13.xyz = c_14.xyz;
  gl_FragData[0] = c_13;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  mediump vec4 rgba_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  rgba_8.w = tmpvar_10.w;
  rgba_8.xyz = (tmpvar_10.xyz * ((tmpvar_10.xyz * 
    ((tmpvar_10.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_7 = rgba_8;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = xlv_TEXCOORD1;
  highp float tmpvar_12;
  tmpvar_12 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_11).xy).w;
  atten_3 = tmpvar_12;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_13;
  lowp vec4 c_14;
  lowp float diff_15;
  mediump float tmpvar_16;
  tmpvar_16 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_15 = tmpvar_16;
  c_14.xyz = ((col_7.xyz * tmpvar_1) * diff_15);
  c_14.w = col_7.w;
  c_13.w = c_14.w;
  c_13.xyz = c_14.xyz;
  gl_FragData[0] = c_13;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  rgba_9.xyz = (rgba_9.xyz * ((rgba_9.xyz * 
    ((rgba_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8 = rgba_9;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16).xyz;
  highp float tmpvar_17;
  tmpvar_17 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_17;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_18;
  lowp vec4 c_19;
  lowp float diff_20;
  mediump float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_20 = tmpvar_21;
  c_19.xyz = ((col_8.xyz * tmpvar_1) * diff_20);
  c_19.w = col_8.w;
  c_18.w = c_19.w;
  c_18.xyz = c_19.xyz;
  gl_FragData[0] = c_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  rgba_9.xyz = (rgba_9.xyz * ((rgba_9.xyz * 
    ((rgba_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8 = rgba_9;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16).xyz;
  highp float tmpvar_17;
  tmpvar_17 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_17;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_18;
  lowp vec4 c_19;
  lowp float diff_20;
  mediump float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_20 = tmpvar_21;
  c_19.xyz = ((col_8.xyz * tmpvar_1) * diff_20);
  c_19.w = col_8.w;
  c_18.w = c_19.w;
  c_18.xyz = c_19.xyz;
  gl_FragData[0] = c_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  rgba_9.xyz = (rgba_9.xyz * ((rgba_9.xyz * 
    ((rgba_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8 = rgba_9;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16).xyz;
  highp float tmpvar_17;
  tmpvar_17 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_17;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_18;
  lowp vec4 c_19;
  lowp float diff_20;
  mediump float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_20 = tmpvar_21;
  c_19.xyz = ((col_8.xyz * tmpvar_1) * diff_20);
  c_19.w = col_8.w;
  c_18.w = c_19.w;
  c_18.xyz = c_19.xyz;
  gl_FragData[0] = c_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = c_15.xyz;
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = c_15.xyz;
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6 = rgba_7;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = c_15.xyz;
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_12;
  tmpvar_12 = tmpvar_11.xyz;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * ((tmpvar_12 * 
    ((tmpvar_12 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_10 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_6.w = alpha_10;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = c_15.xyz;
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_12;
  tmpvar_12 = tmpvar_11.xyz;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * ((tmpvar_12 * 
    ((tmpvar_12 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_10 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_6.w = alpha_10;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = c_15.xyz;
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_12;
  tmpvar_12 = tmpvar_11.xyz;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * ((tmpvar_12 * 
    ((tmpvar_12 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_10 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_6.w = alpha_10;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = c_15.xyz;
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  rgba_9.xyz = (rgba_9.xyz * ((rgba_9.xyz * 
    ((rgba_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8 = rgba_9;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16);
  lowp float tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_17 = tmpvar_18.w;
  lowp float tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_19 = tmpvar_20.w;
  highp float tmpvar_21;
  tmpvar_21 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_17) * tmpvar_19);
  atten_3 = tmpvar_21;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_22;
  lowp vec4 c_23;
  lowp float diff_24;
  mediump float tmpvar_25;
  tmpvar_25 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_24 = tmpvar_25;
  c_23.xyz = ((col_8.xyz * tmpvar_1) * diff_24);
  c_23.w = col_8.w;
  c_22.w = c_23.w;
  c_22.xyz = c_23.xyz;
  gl_FragData[0] = c_22;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  rgba_9.xyz = (rgba_9.xyz * ((rgba_9.xyz * 
    ((rgba_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8 = rgba_9;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16);
  lowp float tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_17 = tmpvar_18.w;
  lowp float tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_19 = tmpvar_20.w;
  highp float tmpvar_21;
  tmpvar_21 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_17) * tmpvar_19);
  atten_3 = tmpvar_21;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_22;
  lowp vec4 c_23;
  lowp float diff_24;
  mediump float tmpvar_25;
  tmpvar_25 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_24 = tmpvar_25;
  c_23.xyz = ((col_8.xyz * tmpvar_1) * diff_24);
  c_23.w = col_8.w;
  c_22.w = c_23.w;
  c_22.xyz = c_23.xyz;
  gl_FragData[0] = c_22;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  rgba_9.xyz = (rgba_9.xyz * ((rgba_9.xyz * 
    ((rgba_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8 = rgba_9;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16);
  lowp float tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_17 = tmpvar_18.w;
  lowp float tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_19 = tmpvar_20.w;
  highp float tmpvar_21;
  tmpvar_21 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_17) * tmpvar_19);
  atten_3 = tmpvar_21;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_22;
  lowp vec4 c_23;
  lowp float diff_24;
  mediump float tmpvar_25;
  tmpvar_25 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_24 = tmpvar_25;
  c_23.xyz = ((col_8.xyz * tmpvar_1) * diff_24);
  c_23.w = col_8.w;
  c_22.w = c_23.w;
  c_22.xyz = c_23.xyz;
  gl_FragData[0] = c_22;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  rgba_9.xyz = (rgba_9.xyz * ((rgba_9.xyz * 
    ((rgba_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8 = rgba_9;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16).xyz;
  highp float tmpvar_17;
  tmpvar_17 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_17;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_18;
  lowp vec4 c_19;
  lowp float diff_20;
  mediump float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_20 = tmpvar_21;
  c_19.xyz = ((col_8.xyz * tmpvar_1) * diff_20);
  c_19.w = col_8.w;
  c_18.w = c_19.w;
  c_18.xyz = c_19.xyz;
  gl_FragData[0] = c_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  rgba_9.xyz = (rgba_9.xyz * ((rgba_9.xyz * 
    ((rgba_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8 = rgba_9;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16).xyz;
  highp float tmpvar_17;
  tmpvar_17 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_17;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_18;
  lowp vec4 c_19;
  lowp float diff_20;
  mediump float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_20 = tmpvar_21;
  c_19.xyz = ((col_8.xyz * tmpvar_1) * diff_20);
  c_19.w = col_8.w;
  c_18.w = c_19.w;
  c_18.xyz = c_19.xyz;
  gl_FragData[0] = c_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  rgba_9.xyz = (rgba_9.xyz * ((rgba_9.xyz * 
    ((rgba_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8 = rgba_9;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16).xyz;
  highp float tmpvar_17;
  tmpvar_17 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_17;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_18;
  lowp vec4 c_19;
  lowp float diff_20;
  mediump float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_20 = tmpvar_21;
  c_19.xyz = ((col_8.xyz * tmpvar_1) * diff_20);
  c_19.w = col_8.w;
  c_18.w = c_19.w;
  c_18.xyz = c_19.xyz;
  gl_FragData[0] = c_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  mediump vec4 rgba_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_11;
  tmpvar_11.x = tmpvar_9.x;
  tmpvar_11.yz = tmpvar_10.xy;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _YpCbCrTransform[0].xyz;
  tmpvar_12[1] = _YpCbCrTransform[1].xyz;
  tmpvar_12[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_13;
  v_13.x = _YpCbCrTransform[0].w;
  v_13.y = _YpCbCrTransform[1].w;
  v_13.z = _YpCbCrTransform[2].w;
  v_13.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = (tmpvar_12 * (tmpvar_11 + v_13.xyz));
  rgba_8 = tmpvar_14;
  rgba_8.xyz = (rgba_8.xyz * ((rgba_8.xyz * 
    ((rgba_8.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_7 = rgba_8;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = xlv_TEXCOORD1;
  highp float tmpvar_16;
  tmpvar_16 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_15).xy).w;
  atten_3 = tmpvar_16;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_17;
  lowp vec4 c_18;
  lowp float diff_19;
  mediump float tmpvar_20;
  tmpvar_20 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_19 = tmpvar_20;
  c_18.xyz = ((col_7.xyz * tmpvar_1) * diff_19);
  c_18.w = col_7.w;
  c_17.w = c_18.w;
  c_17.xyz = c_18.xyz;
  gl_FragData[0] = c_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  mediump vec4 rgba_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_11;
  tmpvar_11.x = tmpvar_9.x;
  tmpvar_11.yz = tmpvar_10.xy;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _YpCbCrTransform[0].xyz;
  tmpvar_12[1] = _YpCbCrTransform[1].xyz;
  tmpvar_12[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_13;
  v_13.x = _YpCbCrTransform[0].w;
  v_13.y = _YpCbCrTransform[1].w;
  v_13.z = _YpCbCrTransform[2].w;
  v_13.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = (tmpvar_12 * (tmpvar_11 + v_13.xyz));
  rgba_8 = tmpvar_14;
  rgba_8.xyz = (rgba_8.xyz * ((rgba_8.xyz * 
    ((rgba_8.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_7 = rgba_8;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = xlv_TEXCOORD1;
  highp float tmpvar_16;
  tmpvar_16 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_15).xy).w;
  atten_3 = tmpvar_16;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_17;
  lowp vec4 c_18;
  lowp float diff_19;
  mediump float tmpvar_20;
  tmpvar_20 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_19 = tmpvar_20;
  c_18.xyz = ((col_7.xyz * tmpvar_1) * diff_19);
  c_18.w = col_7.w;
  c_17.w = c_18.w;
  c_17.xyz = c_18.xyz;
  gl_FragData[0] = c_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_3;
  tmpvar_3[0] = unity_WorldToObject[0].xyz;
  tmpvar_3[1] = unity_WorldToObject[1].xyz;
  tmpvar_3[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_2));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_3));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  mediump vec4 rgba_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_11;
  tmpvar_11.x = tmpvar_9.x;
  tmpvar_11.yz = tmpvar_10.xy;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _YpCbCrTransform[0].xyz;
  tmpvar_12[1] = _YpCbCrTransform[1].xyz;
  tmpvar_12[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_13;
  v_13.x = _YpCbCrTransform[0].w;
  v_13.y = _YpCbCrTransform[1].w;
  v_13.z = _YpCbCrTransform[2].w;
  v_13.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = (tmpvar_12 * (tmpvar_11 + v_13.xyz));
  rgba_8 = tmpvar_14;
  rgba_8.xyz = (rgba_8.xyz * ((rgba_8.xyz * 
    ((rgba_8.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_7 = rgba_8;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = xlv_TEXCOORD1;
  highp float tmpvar_16;
  tmpvar_16 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_15).xy).w;
  atten_3 = tmpvar_16;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_17;
  lowp vec4 c_18;
  lowp float diff_19;
  mediump float tmpvar_20;
  tmpvar_20 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_19 = tmpvar_20;
  c_18.xyz = ((col_7.xyz * tmpvar_1) * diff_19);
  c_18.w = col_7.w;
  c_17.w = c_18.w;
  c_17.xyz = c_18.xyz;
  gl_FragData[0] = c_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  col_8.xyz = tmpvar_10.xyz;
  mediump float alpha_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_13;
  tmpvar_13 = tmpvar_12.xyz;
  alpha_11 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_8.w = alpha_11;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_14).xyz;
  highp float tmpvar_15;
  tmpvar_15 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_15;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_8.xyz * tmpvar_1) * diff_18);
  c_17.w = col_8.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  col_8.xyz = tmpvar_10.xyz;
  mediump float alpha_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_13;
  tmpvar_13 = tmpvar_12.xyz;
  alpha_11 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_8.w = alpha_11;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_14).xyz;
  highp float tmpvar_15;
  tmpvar_15 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_15;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_8.xyz * tmpvar_1) * diff_18);
  c_17.w = col_8.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  col_8.xyz = tmpvar_10.xyz;
  mediump float alpha_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_13;
  tmpvar_13 = tmpvar_12.xyz;
  alpha_11 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_8.w = alpha_11;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_14).xyz;
  highp float tmpvar_15;
  tmpvar_15 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_15;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_8.xyz * tmpvar_1) * diff_18);
  c_17.w = col_8.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6.xyz = tmpvar_8.xyz;
  mediump float alpha_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_11;
  tmpvar_11 = tmpvar_10.xyz;
  alpha_9 = (((tmpvar_11.x + tmpvar_11.y) + tmpvar_11.z) / 3.0);
  col_6.w = alpha_9;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_12;
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = ((col_6.xyz * tmpvar_1) * diff_14);
  c_13.w = col_6.w;
  c_12.w = c_13.w;
  c_12.xyz = c_13.xyz;
  gl_FragData[0] = c_12;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6.xyz = tmpvar_8.xyz;
  mediump float alpha_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_11;
  tmpvar_11 = tmpvar_10.xyz;
  alpha_9 = (((tmpvar_11.x + tmpvar_11.y) + tmpvar_11.z) / 3.0);
  col_6.w = alpha_9;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_12;
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = ((col_6.xyz * tmpvar_1) * diff_14);
  c_13.w = col_6.w;
  c_12.w = c_13.w;
  c_12.xyz = c_13.xyz;
  gl_FragData[0] = c_12;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col_6.xyz = tmpvar_8.xyz;
  mediump float alpha_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_11;
  tmpvar_11 = tmpvar_10.xyz;
  alpha_9 = (((tmpvar_11.x + tmpvar_11.y) + tmpvar_11.z) / 3.0);
  col_6.w = alpha_9;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_12;
  lowp vec4 c_13;
  lowp float diff_14;
  mediump float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_14 = tmpvar_15;
  c_13.xyz = ((col_6.xyz * tmpvar_1) * diff_14);
  c_13.w = col_6.w;
  c_12.w = c_13.w;
  c_12.xyz = c_13.xyz;
  gl_FragData[0] = c_12;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  col_8.xyz = tmpvar_10.xyz;
  mediump float alpha_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_13;
  tmpvar_13 = tmpvar_12.xyz;
  alpha_11 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_8.w = alpha_11;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_14);
  lowp float tmpvar_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_15 = tmpvar_16.w;
  lowp float tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_17 = tmpvar_18.w;
  highp float tmpvar_19;
  tmpvar_19 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_15) * tmpvar_17);
  atten_3 = tmpvar_19;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_20;
  lowp vec4 c_21;
  lowp float diff_22;
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_22 = tmpvar_23;
  c_21.xyz = ((col_8.xyz * tmpvar_1) * diff_22);
  c_21.w = col_8.w;
  c_20.w = c_21.w;
  c_20.xyz = c_21.xyz;
  gl_FragData[0] = c_20;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  col_8.xyz = tmpvar_10.xyz;
  mediump float alpha_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_13;
  tmpvar_13 = tmpvar_12.xyz;
  alpha_11 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_8.w = alpha_11;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_14);
  lowp float tmpvar_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_15 = tmpvar_16.w;
  lowp float tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_17 = tmpvar_18.w;
  highp float tmpvar_19;
  tmpvar_19 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_15) * tmpvar_17);
  atten_3 = tmpvar_19;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_20;
  lowp vec4 c_21;
  lowp float diff_22;
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_22 = tmpvar_23;
  c_21.xyz = ((col_8.xyz * tmpvar_1) * diff_22);
  c_21.w = col_8.w;
  c_20.w = c_21.w;
  c_20.xyz = c_21.xyz;
  gl_FragData[0] = c_20;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  col_8.xyz = tmpvar_10.xyz;
  mediump float alpha_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_13;
  tmpvar_13 = tmpvar_12.xyz;
  alpha_11 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_8.w = alpha_11;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_14);
  lowp float tmpvar_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_15 = tmpvar_16.w;
  lowp float tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_17 = tmpvar_18.w;
  highp float tmpvar_19;
  tmpvar_19 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_15) * tmpvar_17);
  atten_3 = tmpvar_19;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_20;
  lowp vec4 c_21;
  lowp float diff_22;
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_22 = tmpvar_23;
  c_21.xyz = ((col_8.xyz * tmpvar_1) * diff_22);
  c_21.w = col_8.w;
  c_20.w = c_21.w;
  c_20.xyz = c_21.xyz;
  gl_FragData[0] = c_20;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  col_8.xyz = tmpvar_10.xyz;
  mediump float alpha_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_13;
  tmpvar_13 = tmpvar_12.xyz;
  alpha_11 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_8.w = alpha_11;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_14).xyz;
  highp float tmpvar_15;
  tmpvar_15 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_15;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_8.xyz * tmpvar_1) * diff_18);
  c_17.w = col_8.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  col_8.xyz = tmpvar_10.xyz;
  mediump float alpha_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_13;
  tmpvar_13 = tmpvar_12.xyz;
  alpha_11 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_8.w = alpha_11;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_14).xyz;
  highp float tmpvar_15;
  tmpvar_15 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_15;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_8.xyz * tmpvar_1) * diff_18);
  c_17.w = col_8.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  col_8.xyz = tmpvar_10.xyz;
  mediump float alpha_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_13;
  tmpvar_13 = tmpvar_12.xyz;
  alpha_11 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_8.w = alpha_11;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_14).xyz;
  highp float tmpvar_15;
  tmpvar_15 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_15;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_8.xyz * tmpvar_1) * diff_18);
  c_17.w = col_8.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  col_7.xyz = tmpvar_9.xyz;
  mediump float alpha_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_12;
  tmpvar_12 = tmpvar_11.xyz;
  alpha_10 = (((tmpvar_12.x + tmpvar_12.y) + tmpvar_12.z) / 3.0);
  col_7.w = alpha_10;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = xlv_TEXCOORD1;
  highp float tmpvar_14;
  tmpvar_14 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_13).xy).w;
  atten_3 = tmpvar_14;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_15;
  lowp vec4 c_16;
  lowp float diff_17;
  mediump float tmpvar_18;
  tmpvar_18 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_17 = tmpvar_18;
  c_16.xyz = ((col_7.xyz * tmpvar_1) * diff_17);
  c_16.w = col_7.w;
  c_15.w = c_16.w;
  c_15.xyz = c_16.xyz;
  gl_FragData[0] = c_15;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  col_7.xyz = tmpvar_9.xyz;
  mediump float alpha_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_12;
  tmpvar_12 = tmpvar_11.xyz;
  alpha_10 = (((tmpvar_12.x + tmpvar_12.y) + tmpvar_12.z) / 3.0);
  col_7.w = alpha_10;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = xlv_TEXCOORD1;
  highp float tmpvar_14;
  tmpvar_14 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_13).xy).w;
  atten_3 = tmpvar_14;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_15;
  lowp vec4 c_16;
  lowp float diff_17;
  mediump float tmpvar_18;
  tmpvar_18 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_17 = tmpvar_18;
  c_16.xyz = ((col_7.xyz * tmpvar_1) * diff_17);
  c_16.w = col_7.w;
  c_15.w = c_16.w;
  c_15.xyz = c_16.xyz;
  gl_FragData[0] = c_15;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  col_7.xyz = tmpvar_9.xyz;
  mediump float alpha_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_12;
  tmpvar_12 = tmpvar_11.xyz;
  alpha_10 = (((tmpvar_12.x + tmpvar_12.y) + tmpvar_12.z) / 3.0);
  col_7.w = alpha_10;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = xlv_TEXCOORD1;
  highp float tmpvar_14;
  tmpvar_14 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_13).xy).w;
  atten_3 = tmpvar_14;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_15;
  lowp vec4 c_16;
  lowp float diff_17;
  mediump float tmpvar_18;
  tmpvar_18 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_17 = tmpvar_18;
  c_16.xyz = ((col_7.xyz * tmpvar_1) * diff_17);
  c_16.w = col_7.w;
  c_15.w = c_16.w;
  c_15.xyz = c_16.xyz;
  gl_FragData[0] = c_15;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18).xyz;
  highp float tmpvar_19;
  tmpvar_19 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_19;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_20;
  lowp vec4 c_21;
  lowp float diff_22;
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_22 = tmpvar_23;
  c_21.xyz = ((col_8.xyz * tmpvar_1) * diff_22);
  c_21.w = col_8.w;
  c_20.w = c_21.w;
  c_20.xyz = c_21.xyz;
  gl_FragData[0] = c_20;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18).xyz;
  highp float tmpvar_19;
  tmpvar_19 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_19;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_20;
  lowp vec4 c_21;
  lowp float diff_22;
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_22 = tmpvar_23;
  c_21.xyz = ((col_8.xyz * tmpvar_1) * diff_22);
  c_21.w = col_8.w;
  c_20.w = c_21.w;
  c_20.xyz = c_21.xyz;
  gl_FragData[0] = c_20;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18).xyz;
  highp float tmpvar_19;
  tmpvar_19 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_19;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_20;
  lowp vec4 c_21;
  lowp float diff_22;
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_22 = tmpvar_23;
  c_21.xyz = ((col_8.xyz * tmpvar_1) * diff_22);
  c_21.w = col_8.w;
  c_20.w = c_21.w;
  c_20.xyz = c_21.xyz;
  gl_FragData[0] = c_20;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_12;
  tmpvar_12 = tmpvar_11.xyz;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * ((tmpvar_12 * 
    ((tmpvar_12 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_10 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_6.w = alpha_10;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = c_15.xyz;
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_12;
  tmpvar_12 = tmpvar_11.xyz;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * ((tmpvar_12 * 
    ((tmpvar_12 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_10 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_6.w = alpha_10;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = c_15.xyz;
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  rgba_7.w = tmpvar_9.w;
  rgba_7.xyz = (tmpvar_9.xyz * ((tmpvar_9.xyz * 
    ((tmpvar_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_12;
  tmpvar_12 = tmpvar_11.xyz;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * ((tmpvar_12 * 
    ((tmpvar_12 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_10 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_6.w = alpha_10;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_14;
  lowp vec4 c_15;
  lowp float diff_16;
  mediump float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_16 = tmpvar_17;
  c_15.xyz = ((col_6.xyz * tmpvar_1) * diff_16);
  c_15.w = col_6.w;
  c_14.w = c_15.w;
  c_14.xyz = c_15.xyz;
  gl_FragData[0] = c_14;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18);
  lowp float tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_19 = tmpvar_20.w;
  lowp float tmpvar_21;
  highp vec4 tmpvar_22;
  tmpvar_22 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_21 = tmpvar_22.w;
  highp float tmpvar_23;
  tmpvar_23 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_19) * tmpvar_21);
  atten_3 = tmpvar_23;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_24;
  lowp vec4 c_25;
  lowp float diff_26;
  mediump float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_26 = tmpvar_27;
  c_25.xyz = ((col_8.xyz * tmpvar_1) * diff_26);
  c_25.w = col_8.w;
  c_24.w = c_25.w;
  c_24.xyz = c_25.xyz;
  gl_FragData[0] = c_24;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18);
  lowp float tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_19 = tmpvar_20.w;
  lowp float tmpvar_21;
  highp vec4 tmpvar_22;
  tmpvar_22 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_21 = tmpvar_22.w;
  highp float tmpvar_23;
  tmpvar_23 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_19) * tmpvar_21);
  atten_3 = tmpvar_23;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_24;
  lowp vec4 c_25;
  lowp float diff_26;
  mediump float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_26 = tmpvar_27;
  c_25.xyz = ((col_8.xyz * tmpvar_1) * diff_26);
  c_25.w = col_8.w;
  c_24.w = c_25.w;
  c_24.xyz = c_25.xyz;
  gl_FragData[0] = c_24;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18);
  lowp float tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_19 = tmpvar_20.w;
  lowp float tmpvar_21;
  highp vec4 tmpvar_22;
  tmpvar_22 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_21 = tmpvar_22.w;
  highp float tmpvar_23;
  tmpvar_23 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_19) * tmpvar_21);
  atten_3 = tmpvar_23;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_24;
  lowp vec4 c_25;
  lowp float diff_26;
  mediump float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_26 = tmpvar_27;
  c_25.xyz = ((col_8.xyz * tmpvar_1) * diff_26);
  c_25.w = col_8.w;
  c_24.w = c_25.w;
  c_24.xyz = c_25.xyz;
  gl_FragData[0] = c_24;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18).xyz;
  highp float tmpvar_19;
  tmpvar_19 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_19;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_20;
  lowp vec4 c_21;
  lowp float diff_22;
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_22 = tmpvar_23;
  c_21.xyz = ((col_8.xyz * tmpvar_1) * diff_22);
  c_21.w = col_8.w;
  c_20.w = c_21.w;
  c_20.xyz = c_21.xyz;
  gl_FragData[0] = c_20;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18).xyz;
  highp float tmpvar_19;
  tmpvar_19 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_19;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_20;
  lowp vec4 c_21;
  lowp float diff_22;
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_22 = tmpvar_23;
  c_21.xyz = ((col_8.xyz * tmpvar_1) * diff_22);
  c_21.w = col_8.w;
  c_20.w = c_21.w;
  c_20.xyz = c_21.xyz;
  gl_FragData[0] = c_20;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18).xyz;
  highp float tmpvar_19;
  tmpvar_19 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_19;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_20;
  lowp vec4 c_21;
  lowp float diff_22;
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_22 = tmpvar_23;
  c_21.xyz = ((col_8.xyz * tmpvar_1) * diff_22);
  c_21.w = col_8.w;
  c_20.w = c_21.w;
  c_20.xyz = c_21.xyz;
  gl_FragData[0] = c_20;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  mediump vec4 rgba_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_11;
  tmpvar_11.x = tmpvar_9.x;
  tmpvar_11.yz = tmpvar_10.xy;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _YpCbCrTransform[0].xyz;
  tmpvar_12[1] = _YpCbCrTransform[1].xyz;
  tmpvar_12[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_13;
  v_13.x = _YpCbCrTransform[0].w;
  v_13.y = _YpCbCrTransform[1].w;
  v_13.z = _YpCbCrTransform[2].w;
  v_13.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = (tmpvar_12 * (tmpvar_11 + v_13.xyz));
  rgba_8 = tmpvar_14;
  col_7.xyz = rgba_8.xyz;
  mediump float alpha_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_15 = ((tmpvar_16.x - 0.0625) * 1.164384);
  col_7.w = alpha_15;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = xlv_TEXCOORD1;
  highp float tmpvar_18;
  tmpvar_18 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_17).xy).w;
  atten_3 = tmpvar_18;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_19;
  lowp vec4 c_20;
  lowp float diff_21;
  mediump float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_21 = tmpvar_22;
  c_20.xyz = ((col_7.xyz * tmpvar_1) * diff_21);
  c_20.w = col_7.w;
  c_19.w = c_20.w;
  c_19.xyz = c_20.xyz;
  gl_FragData[0] = c_19;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  mediump vec4 rgba_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_11;
  tmpvar_11.x = tmpvar_9.x;
  tmpvar_11.yz = tmpvar_10.xy;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _YpCbCrTransform[0].xyz;
  tmpvar_12[1] = _YpCbCrTransform[1].xyz;
  tmpvar_12[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_13;
  v_13.x = _YpCbCrTransform[0].w;
  v_13.y = _YpCbCrTransform[1].w;
  v_13.z = _YpCbCrTransform[2].w;
  v_13.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = (tmpvar_12 * (tmpvar_11 + v_13.xyz));
  rgba_8 = tmpvar_14;
  col_7.xyz = rgba_8.xyz;
  mediump float alpha_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_15 = ((tmpvar_16.x - 0.0625) * 1.164384);
  col_7.w = alpha_15;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = xlv_TEXCOORD1;
  highp float tmpvar_18;
  tmpvar_18 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_17).xy).w;
  atten_3 = tmpvar_18;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_19;
  lowp vec4 c_20;
  lowp float diff_21;
  mediump float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_21 = tmpvar_22;
  c_20.xyz = ((col_7.xyz * tmpvar_1) * diff_21);
  c_20.w = col_7.w;
  c_19.w = c_20.w;
  c_19.xyz = c_20.xyz;
  gl_FragData[0] = c_19;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  mediump vec4 rgba_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_11;
  tmpvar_11.x = tmpvar_9.x;
  tmpvar_11.yz = tmpvar_10.xy;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _YpCbCrTransform[0].xyz;
  tmpvar_12[1] = _YpCbCrTransform[1].xyz;
  tmpvar_12[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_13;
  v_13.x = _YpCbCrTransform[0].w;
  v_13.y = _YpCbCrTransform[1].w;
  v_13.z = _YpCbCrTransform[2].w;
  v_13.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = (tmpvar_12 * (tmpvar_11 + v_13.xyz));
  rgba_8 = tmpvar_14;
  col_7.xyz = rgba_8.xyz;
  mediump float alpha_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_15 = ((tmpvar_16.x - 0.0625) * 1.164384);
  col_7.w = alpha_15;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = xlv_TEXCOORD1;
  highp float tmpvar_18;
  tmpvar_18 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_17).xy).w;
  atten_3 = tmpvar_18;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_19;
  lowp vec4 c_20;
  lowp float diff_21;
  mediump float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_21 = tmpvar_22;
  c_20.xyz = ((col_7.xyz * tmpvar_1) * diff_21);
  c_20.w = col_7.w;
  c_19.w = c_20.w;
  c_19.xyz = c_20.xyz;
  gl_FragData[0] = c_19;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  rgba_9.w = tmpvar_11.w;
  rgba_9.xyz = (tmpvar_11.xyz * ((tmpvar_11.xyz * 
    ((tmpvar_11.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_14;
  tmpvar_14 = tmpvar_13.xyz;
  mediump vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * ((tmpvar_14 * 
    ((tmpvar_14 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_12 = (((tmpvar_15.x + tmpvar_15.y) + tmpvar_15.z) / 3.0);
  col_8.w = alpha_12;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16).xyz;
  highp float tmpvar_17;
  tmpvar_17 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_17;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_18;
  lowp vec4 c_19;
  lowp float diff_20;
  mediump float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_20 = tmpvar_21;
  c_19.xyz = ((col_8.xyz * tmpvar_1) * diff_20);
  c_19.w = col_8.w;
  c_18.w = c_19.w;
  c_18.xyz = c_19.xyz;
  gl_FragData[0] = c_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  rgba_9.w = tmpvar_11.w;
  rgba_9.xyz = (tmpvar_11.xyz * ((tmpvar_11.xyz * 
    ((tmpvar_11.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_14;
  tmpvar_14 = tmpvar_13.xyz;
  mediump vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * ((tmpvar_14 * 
    ((tmpvar_14 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_12 = (((tmpvar_15.x + tmpvar_15.y) + tmpvar_15.z) / 3.0);
  col_8.w = alpha_12;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16).xyz;
  highp float tmpvar_17;
  tmpvar_17 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_17;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_18;
  lowp vec4 c_19;
  lowp float diff_20;
  mediump float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_20 = tmpvar_21;
  c_19.xyz = ((col_8.xyz * tmpvar_1) * diff_20);
  c_19.w = col_8.w;
  c_18.w = c_19.w;
  c_18.xyz = c_19.xyz;
  gl_FragData[0] = c_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  rgba_9.w = tmpvar_11.w;
  rgba_9.xyz = (tmpvar_11.xyz * ((tmpvar_11.xyz * 
    ((tmpvar_11.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_14;
  tmpvar_14 = tmpvar_13.xyz;
  mediump vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * ((tmpvar_14 * 
    ((tmpvar_14 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_12 = (((tmpvar_15.x + tmpvar_15.y) + tmpvar_15.z) / 3.0);
  col_8.w = alpha_12;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16).xyz;
  highp float tmpvar_17;
  tmpvar_17 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_17;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_18;
  lowp vec4 c_19;
  lowp float diff_20;
  mediump float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_20 = tmpvar_21;
  c_19.xyz = ((col_8.xyz * tmpvar_1) * diff_20);
  c_19.w = col_8.w;
  c_18.w = c_19.w;
  c_18.xyz = c_19.xyz;
  gl_FragData[0] = c_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  rgba_9.w = tmpvar_11.w;
  rgba_9.xyz = (tmpvar_11.xyz * ((tmpvar_11.xyz * 
    ((tmpvar_11.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_14;
  tmpvar_14 = tmpvar_13.xyz;
  mediump vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * ((tmpvar_14 * 
    ((tmpvar_14 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_12 = (((tmpvar_15.x + tmpvar_15.y) + tmpvar_15.z) / 3.0);
  col_8.w = alpha_12;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16);
  lowp float tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_17 = tmpvar_18.w;
  lowp float tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_19 = tmpvar_20.w;
  highp float tmpvar_21;
  tmpvar_21 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_17) * tmpvar_19);
  atten_3 = tmpvar_21;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_22;
  lowp vec4 c_23;
  lowp float diff_24;
  mediump float tmpvar_25;
  tmpvar_25 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_24 = tmpvar_25;
  c_23.xyz = ((col_8.xyz * tmpvar_1) * diff_24);
  c_23.w = col_8.w;
  c_22.w = c_23.w;
  c_22.xyz = c_23.xyz;
  gl_FragData[0] = c_22;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  rgba_9.w = tmpvar_11.w;
  rgba_9.xyz = (tmpvar_11.xyz * ((tmpvar_11.xyz * 
    ((tmpvar_11.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_14;
  tmpvar_14 = tmpvar_13.xyz;
  mediump vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * ((tmpvar_14 * 
    ((tmpvar_14 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_12 = (((tmpvar_15.x + tmpvar_15.y) + tmpvar_15.z) / 3.0);
  col_8.w = alpha_12;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16);
  lowp float tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_17 = tmpvar_18.w;
  lowp float tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_19 = tmpvar_20.w;
  highp float tmpvar_21;
  tmpvar_21 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_17) * tmpvar_19);
  atten_3 = tmpvar_21;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_22;
  lowp vec4 c_23;
  lowp float diff_24;
  mediump float tmpvar_25;
  tmpvar_25 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_24 = tmpvar_25;
  c_23.xyz = ((col_8.xyz * tmpvar_1) * diff_24);
  c_23.w = col_8.w;
  c_22.w = c_23.w;
  c_22.xyz = c_23.xyz;
  gl_FragData[0] = c_22;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  rgba_9.w = tmpvar_11.w;
  rgba_9.xyz = (tmpvar_11.xyz * ((tmpvar_11.xyz * 
    ((tmpvar_11.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_14;
  tmpvar_14 = tmpvar_13.xyz;
  mediump vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * ((tmpvar_14 * 
    ((tmpvar_14 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_12 = (((tmpvar_15.x + tmpvar_15.y) + tmpvar_15.z) / 3.0);
  col_8.w = alpha_12;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16);
  lowp float tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_17 = tmpvar_18.w;
  lowp float tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_19 = tmpvar_20.w;
  highp float tmpvar_21;
  tmpvar_21 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_17) * tmpvar_19);
  atten_3 = tmpvar_21;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_22;
  lowp vec4 c_23;
  lowp float diff_24;
  mediump float tmpvar_25;
  tmpvar_25 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_24 = tmpvar_25;
  c_23.xyz = ((col_8.xyz * tmpvar_1) * diff_24);
  c_23.w = col_8.w;
  c_22.w = c_23.w;
  c_22.xyz = c_23.xyz;
  gl_FragData[0] = c_22;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  rgba_9.w = tmpvar_11.w;
  rgba_9.xyz = (tmpvar_11.xyz * ((tmpvar_11.xyz * 
    ((tmpvar_11.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_14;
  tmpvar_14 = tmpvar_13.xyz;
  mediump vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * ((tmpvar_14 * 
    ((tmpvar_14 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_12 = (((tmpvar_15.x + tmpvar_15.y) + tmpvar_15.z) / 3.0);
  col_8.w = alpha_12;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16).xyz;
  highp float tmpvar_17;
  tmpvar_17 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_17;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_18;
  lowp vec4 c_19;
  lowp float diff_20;
  mediump float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_20 = tmpvar_21;
  c_19.xyz = ((col_8.xyz * tmpvar_1) * diff_20);
  c_19.w = col_8.w;
  c_18.w = c_19.w;
  c_18.xyz = c_19.xyz;
  gl_FragData[0] = c_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  rgba_9.w = tmpvar_11.w;
  rgba_9.xyz = (tmpvar_11.xyz * ((tmpvar_11.xyz * 
    ((tmpvar_11.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_14;
  tmpvar_14 = tmpvar_13.xyz;
  mediump vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * ((tmpvar_14 * 
    ((tmpvar_14 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_12 = (((tmpvar_15.x + tmpvar_15.y) + tmpvar_15.z) / 3.0);
  col_8.w = alpha_12;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16).xyz;
  highp float tmpvar_17;
  tmpvar_17 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_17;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_18;
  lowp vec4 c_19;
  lowp float diff_20;
  mediump float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_20 = tmpvar_21;
  c_19.xyz = ((col_8.xyz * tmpvar_1) * diff_20);
  c_19.w = col_8.w;
  c_18.w = c_19.w;
  c_18.xyz = c_19.xyz;
  gl_FragData[0] = c_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  rgba_9.w = tmpvar_11.w;
  rgba_9.xyz = (tmpvar_11.xyz * ((tmpvar_11.xyz * 
    ((tmpvar_11.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_14;
  tmpvar_14 = tmpvar_13.xyz;
  mediump vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * ((tmpvar_14 * 
    ((tmpvar_14 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_12 = (((tmpvar_15.x + tmpvar_15.y) + tmpvar_15.z) / 3.0);
  col_8.w = alpha_12;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16).xyz;
  highp float tmpvar_17;
  tmpvar_17 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_17;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_18;
  lowp vec4 c_19;
  lowp float diff_20;
  mediump float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_20 = tmpvar_21;
  c_19.xyz = ((col_8.xyz * tmpvar_1) * diff_20);
  c_19.w = col_8.w;
  c_18.w = c_19.w;
  c_18.xyz = c_19.xyz;
  gl_FragData[0] = c_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  mediump vec4 rgba_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  rgba_8.w = tmpvar_10.w;
  rgba_8.xyz = (tmpvar_10.xyz * ((tmpvar_10.xyz * 
    ((tmpvar_10.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_7.xyz = rgba_8.xyz;
  mediump float alpha_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_13;
  tmpvar_13 = tmpvar_12.xyz;
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_13 * ((tmpvar_13 * 
    ((tmpvar_13 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_11 = (((tmpvar_14.x + tmpvar_14.y) + tmpvar_14.z) / 3.0);
  col_7.w = alpha_11;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = xlv_TEXCOORD1;
  highp float tmpvar_16;
  tmpvar_16 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_15).xy).w;
  atten_3 = tmpvar_16;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_17;
  lowp vec4 c_18;
  lowp float diff_19;
  mediump float tmpvar_20;
  tmpvar_20 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_19 = tmpvar_20;
  c_18.xyz = ((col_7.xyz * tmpvar_1) * diff_19);
  c_18.w = col_7.w;
  c_17.w = c_18.w;
  c_17.xyz = c_18.xyz;
  gl_FragData[0] = c_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  mediump vec4 rgba_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  rgba_8.w = tmpvar_10.w;
  rgba_8.xyz = (tmpvar_10.xyz * ((tmpvar_10.xyz * 
    ((tmpvar_10.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_7.xyz = rgba_8.xyz;
  mediump float alpha_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_13;
  tmpvar_13 = tmpvar_12.xyz;
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_13 * ((tmpvar_13 * 
    ((tmpvar_13 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_11 = (((tmpvar_14.x + tmpvar_14.y) + tmpvar_14.z) / 3.0);
  col_7.w = alpha_11;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = xlv_TEXCOORD1;
  highp float tmpvar_16;
  tmpvar_16 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_15).xy).w;
  atten_3 = tmpvar_16;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_17;
  lowp vec4 c_18;
  lowp float diff_19;
  mediump float tmpvar_20;
  tmpvar_20 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_19 = tmpvar_20;
  c_18.xyz = ((col_7.xyz * tmpvar_1) * diff_19);
  c_18.w = col_7.w;
  c_17.w = c_18.w;
  c_17.xyz = c_18.xyz;
  gl_FragData[0] = c_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  mediump vec4 rgba_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  rgba_8.w = tmpvar_10.w;
  rgba_8.xyz = (tmpvar_10.xyz * ((tmpvar_10.xyz * 
    ((tmpvar_10.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_7.xyz = rgba_8.xyz;
  mediump float alpha_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_13;
  tmpvar_13 = tmpvar_12.xyz;
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_13 * ((tmpvar_13 * 
    ((tmpvar_13 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_11 = (((tmpvar_14.x + tmpvar_14.y) + tmpvar_14.z) / 3.0);
  col_7.w = alpha_11;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = xlv_TEXCOORD1;
  highp float tmpvar_16;
  tmpvar_16 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_15).xy).w;
  atten_3 = tmpvar_16;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_17;
  lowp vec4 c_18;
  lowp float diff_19;
  mediump float tmpvar_20;
  tmpvar_20 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_19 = tmpvar_20;
  c_18.xyz = ((col_7.xyz * tmpvar_1) * diff_19);
  c_18.w = col_7.w;
  c_17.w = c_18.w;
  c_17.xyz = c_18.xyz;
  gl_FragData[0] = c_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  rgba_9.xyz = (rgba_9.xyz * ((rgba_9.xyz * 
    ((rgba_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18).xyz;
  highp float tmpvar_19;
  tmpvar_19 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_19;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_20;
  lowp vec4 c_21;
  lowp float diff_22;
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_22 = tmpvar_23;
  c_21.xyz = ((col_8.xyz * tmpvar_1) * diff_22);
  c_21.w = col_8.w;
  c_20.w = c_21.w;
  c_20.xyz = c_21.xyz;
  gl_FragData[0] = c_20;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  rgba_9.xyz = (rgba_9.xyz * ((rgba_9.xyz * 
    ((rgba_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18).xyz;
  highp float tmpvar_19;
  tmpvar_19 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_19;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_20;
  lowp vec4 c_21;
  lowp float diff_22;
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_22 = tmpvar_23;
  c_21.xyz = ((col_8.xyz * tmpvar_1) * diff_22);
  c_21.w = col_8.w;
  c_20.w = c_21.w;
  c_20.xyz = c_21.xyz;
  gl_FragData[0] = c_20;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  rgba_9.xyz = (rgba_9.xyz * ((rgba_9.xyz * 
    ((rgba_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18).xyz;
  highp float tmpvar_19;
  tmpvar_19 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_19;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_20;
  lowp vec4 c_21;
  lowp float diff_22;
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_22 = tmpvar_23;
  c_21.xyz = ((col_8.xyz * tmpvar_1) * diff_22);
  c_21.w = col_8.w;
  c_20.w = c_21.w;
  c_20.xyz = c_21.xyz;
  gl_FragData[0] = c_20;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  rgba_9.xyz = (rgba_9.xyz * ((rgba_9.xyz * 
    ((rgba_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18);
  lowp float tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_19 = tmpvar_20.w;
  lowp float tmpvar_21;
  highp vec4 tmpvar_22;
  tmpvar_22 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_21 = tmpvar_22.w;
  highp float tmpvar_23;
  tmpvar_23 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_19) * tmpvar_21);
  atten_3 = tmpvar_23;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_24;
  lowp vec4 c_25;
  lowp float diff_26;
  mediump float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_26 = tmpvar_27;
  c_25.xyz = ((col_8.xyz * tmpvar_1) * diff_26);
  c_25.w = col_8.w;
  c_24.w = c_25.w;
  c_24.xyz = c_25.xyz;
  gl_FragData[0] = c_24;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  rgba_9.xyz = (rgba_9.xyz * ((rgba_9.xyz * 
    ((rgba_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18);
  lowp float tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_19 = tmpvar_20.w;
  lowp float tmpvar_21;
  highp vec4 tmpvar_22;
  tmpvar_22 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_21 = tmpvar_22.w;
  highp float tmpvar_23;
  tmpvar_23 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_19) * tmpvar_21);
  atten_3 = tmpvar_23;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_24;
  lowp vec4 c_25;
  lowp float diff_26;
  mediump float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_26 = tmpvar_27;
  c_25.xyz = ((col_8.xyz * tmpvar_1) * diff_26);
  c_25.w = col_8.w;
  c_24.w = c_25.w;
  c_24.xyz = c_25.xyz;
  gl_FragData[0] = c_24;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  rgba_9.xyz = (rgba_9.xyz * ((rgba_9.xyz * 
    ((rgba_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18);
  lowp float tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_19 = tmpvar_20.w;
  lowp float tmpvar_21;
  highp vec4 tmpvar_22;
  tmpvar_22 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_21 = tmpvar_22.w;
  highp float tmpvar_23;
  tmpvar_23 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_19) * tmpvar_21);
  atten_3 = tmpvar_23;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_24;
  lowp vec4 c_25;
  lowp float diff_26;
  mediump float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_26 = tmpvar_27;
  c_25.xyz = ((col_8.xyz * tmpvar_1) * diff_26);
  c_25.w = col_8.w;
  c_24.w = c_25.w;
  c_24.xyz = c_25.xyz;
  gl_FragData[0] = c_24;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  rgba_9.xyz = (rgba_9.xyz * ((rgba_9.xyz * 
    ((rgba_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18).xyz;
  highp float tmpvar_19;
  tmpvar_19 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_19;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_20;
  lowp vec4 c_21;
  lowp float diff_22;
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_22 = tmpvar_23;
  c_21.xyz = ((col_8.xyz * tmpvar_1) * diff_22);
  c_21.w = col_8.w;
  c_20.w = c_21.w;
  c_20.xyz = c_21.xyz;
  gl_FragData[0] = c_20;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  rgba_9.xyz = (rgba_9.xyz * ((rgba_9.xyz * 
    ((rgba_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18).xyz;
  highp float tmpvar_19;
  tmpvar_19 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_19;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_20;
  lowp vec4 c_21;
  lowp float diff_22;
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_22 = tmpvar_23;
  c_21.xyz = ((col_8.xyz * tmpvar_1) * diff_22);
  c_21.w = col_8.w;
  c_20.w = c_21.w;
  c_20.xyz = c_21.xyz;
  gl_FragData[0] = c_20;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  rgba_9.xyz = (rgba_9.xyz * ((rgba_9.xyz * 
    ((rgba_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18).xyz;
  highp float tmpvar_19;
  tmpvar_19 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_19;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_20;
  lowp vec4 c_21;
  lowp float diff_22;
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_22 = tmpvar_23;
  c_21.xyz = ((col_8.xyz * tmpvar_1) * diff_22);
  c_21.w = col_8.w;
  c_20.w = c_21.w;
  c_20.xyz = c_21.xyz;
  gl_FragData[0] = c_20;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  mediump vec4 rgba_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_11;
  tmpvar_11.x = tmpvar_9.x;
  tmpvar_11.yz = tmpvar_10.xy;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _YpCbCrTransform[0].xyz;
  tmpvar_12[1] = _YpCbCrTransform[1].xyz;
  tmpvar_12[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_13;
  v_13.x = _YpCbCrTransform[0].w;
  v_13.y = _YpCbCrTransform[1].w;
  v_13.z = _YpCbCrTransform[2].w;
  v_13.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = (tmpvar_12 * (tmpvar_11 + v_13.xyz));
  rgba_8 = tmpvar_14;
  rgba_8.xyz = (rgba_8.xyz * ((rgba_8.xyz * 
    ((rgba_8.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_7.xyz = rgba_8.xyz;
  mediump float alpha_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_15 = ((tmpvar_16.x - 0.0625) * 1.164384);
  col_7.w = alpha_15;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = xlv_TEXCOORD1;
  highp float tmpvar_18;
  tmpvar_18 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_17).xy).w;
  atten_3 = tmpvar_18;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_19;
  lowp vec4 c_20;
  lowp float diff_21;
  mediump float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_21 = tmpvar_22;
  c_20.xyz = ((col_7.xyz * tmpvar_1) * diff_21);
  c_20.w = col_7.w;
  c_19.w = c_20.w;
  c_19.xyz = c_20.xyz;
  gl_FragData[0] = c_19;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  mediump vec4 rgba_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_11;
  tmpvar_11.x = tmpvar_9.x;
  tmpvar_11.yz = tmpvar_10.xy;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _YpCbCrTransform[0].xyz;
  tmpvar_12[1] = _YpCbCrTransform[1].xyz;
  tmpvar_12[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_13;
  v_13.x = _YpCbCrTransform[0].w;
  v_13.y = _YpCbCrTransform[1].w;
  v_13.z = _YpCbCrTransform[2].w;
  v_13.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = (tmpvar_12 * (tmpvar_11 + v_13.xyz));
  rgba_8 = tmpvar_14;
  rgba_8.xyz = (rgba_8.xyz * ((rgba_8.xyz * 
    ((rgba_8.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_7.xyz = rgba_8.xyz;
  mediump float alpha_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_15 = ((tmpvar_16.x - 0.0625) * 1.164384);
  col_7.w = alpha_15;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = xlv_TEXCOORD1;
  highp float tmpvar_18;
  tmpvar_18 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_17).xy).w;
  atten_3 = tmpvar_18;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_19;
  lowp vec4 c_20;
  lowp float diff_21;
  mediump float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_21 = tmpvar_22;
  c_20.xyz = ((col_7.xyz * tmpvar_1) * diff_21);
  c_20.w = col_7.w;
  c_19.w = c_20.w;
  c_19.xyz = c_20.xyz;
  gl_FragData[0] = c_19;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  mediump vec4 rgba_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_11;
  tmpvar_11.x = tmpvar_9.x;
  tmpvar_11.yz = tmpvar_10.xy;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _YpCbCrTransform[0].xyz;
  tmpvar_12[1] = _YpCbCrTransform[1].xyz;
  tmpvar_12[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_13;
  v_13.x = _YpCbCrTransform[0].w;
  v_13.y = _YpCbCrTransform[1].w;
  v_13.z = _YpCbCrTransform[2].w;
  v_13.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = (tmpvar_12 * (tmpvar_11 + v_13.xyz));
  rgba_8 = tmpvar_14;
  rgba_8.xyz = (rgba_8.xyz * ((rgba_8.xyz * 
    ((rgba_8.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_7.xyz = rgba_8.xyz;
  mediump float alpha_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_15 = ((tmpvar_16.x - 0.0625) * 1.164384);
  col_7.w = alpha_15;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = xlv_TEXCOORD1;
  highp float tmpvar_18;
  tmpvar_18 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_17).xy).w;
  atten_3 = tmpvar_18;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_19;
  lowp vec4 c_20;
  lowp float diff_21;
  mediump float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_21 = tmpvar_22;
  c_20.xyz = ((col_7.xyz * tmpvar_1) * diff_21);
  c_20.w = col_7.w;
  c_19.w = c_20.w;
  c_19.xyz = c_20.xyz;
  gl_FragData[0] = c_19;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  col_8.xyz = tmpvar_10.xyz;
  mediump float alpha_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_13;
  tmpvar_13 = tmpvar_12.xyz;
  alpha_11 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_8.w = alpha_11;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_14).xyz;
  highp float tmpvar_15;
  tmpvar_15 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_15;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_8.xyz * tmpvar_1) * diff_18);
  c_17.w = col_8.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  col_8.xyz = tmpvar_10.xyz;
  mediump float alpha_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_13;
  tmpvar_13 = tmpvar_12.xyz;
  alpha_11 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_8.w = alpha_11;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_14).xyz;
  highp float tmpvar_15;
  tmpvar_15 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_15;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_8.xyz * tmpvar_1) * diff_18);
  c_17.w = col_8.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  col_8.xyz = tmpvar_10.xyz;
  mediump float alpha_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_13;
  tmpvar_13 = tmpvar_12.xyz;
  alpha_11 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_8.w = alpha_11;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_14).xyz;
  highp float tmpvar_15;
  tmpvar_15 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_15;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_8.xyz * tmpvar_1) * diff_18);
  c_17.w = col_8.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  col_8.xyz = tmpvar_10.xyz;
  mediump float alpha_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_13;
  tmpvar_13 = tmpvar_12.xyz;
  alpha_11 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_8.w = alpha_11;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_14);
  lowp float tmpvar_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_15 = tmpvar_16.w;
  lowp float tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_17 = tmpvar_18.w;
  highp float tmpvar_19;
  tmpvar_19 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_15) * tmpvar_17);
  atten_3 = tmpvar_19;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_20;
  lowp vec4 c_21;
  lowp float diff_22;
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_22 = tmpvar_23;
  c_21.xyz = ((col_8.xyz * tmpvar_1) * diff_22);
  c_21.w = col_8.w;
  c_20.w = c_21.w;
  c_20.xyz = c_21.xyz;
  gl_FragData[0] = c_20;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  col_8.xyz = tmpvar_10.xyz;
  mediump float alpha_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_13;
  tmpvar_13 = tmpvar_12.xyz;
  alpha_11 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_8.w = alpha_11;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_14);
  lowp float tmpvar_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_15 = tmpvar_16.w;
  lowp float tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_17 = tmpvar_18.w;
  highp float tmpvar_19;
  tmpvar_19 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_15) * tmpvar_17);
  atten_3 = tmpvar_19;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_20;
  lowp vec4 c_21;
  lowp float diff_22;
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_22 = tmpvar_23;
  c_21.xyz = ((col_8.xyz * tmpvar_1) * diff_22);
  c_21.w = col_8.w;
  c_20.w = c_21.w;
  c_20.xyz = c_21.xyz;
  gl_FragData[0] = c_20;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  col_8.xyz = tmpvar_10.xyz;
  mediump float alpha_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_13;
  tmpvar_13 = tmpvar_12.xyz;
  alpha_11 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_8.w = alpha_11;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_14);
  lowp float tmpvar_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_15 = tmpvar_16.w;
  lowp float tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_17 = tmpvar_18.w;
  highp float tmpvar_19;
  tmpvar_19 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_15) * tmpvar_17);
  atten_3 = tmpvar_19;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_20;
  lowp vec4 c_21;
  lowp float diff_22;
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_22 = tmpvar_23;
  c_21.xyz = ((col_8.xyz * tmpvar_1) * diff_22);
  c_21.w = col_8.w;
  c_20.w = c_21.w;
  c_20.xyz = c_21.xyz;
  gl_FragData[0] = c_20;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  col_8.xyz = tmpvar_10.xyz;
  mediump float alpha_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_13;
  tmpvar_13 = tmpvar_12.xyz;
  alpha_11 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_8.w = alpha_11;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_14).xyz;
  highp float tmpvar_15;
  tmpvar_15 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_15;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_8.xyz * tmpvar_1) * diff_18);
  c_17.w = col_8.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  col_8.xyz = tmpvar_10.xyz;
  mediump float alpha_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_13;
  tmpvar_13 = tmpvar_12.xyz;
  alpha_11 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_8.w = alpha_11;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_14).xyz;
  highp float tmpvar_15;
  tmpvar_15 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_15;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_8.xyz * tmpvar_1) * diff_18);
  c_17.w = col_8.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  col_8.xyz = tmpvar_10.xyz;
  mediump float alpha_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_13;
  tmpvar_13 = tmpvar_12.xyz;
  alpha_11 = (((tmpvar_13.x + tmpvar_13.y) + tmpvar_13.z) / 3.0);
  col_8.w = alpha_11;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_14).xyz;
  highp float tmpvar_15;
  tmpvar_15 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_15;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_8.xyz * tmpvar_1) * diff_18);
  c_17.w = col_8.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  col_7.xyz = tmpvar_9.xyz;
  mediump float alpha_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_12;
  tmpvar_12 = tmpvar_11.xyz;
  alpha_10 = (((tmpvar_12.x + tmpvar_12.y) + tmpvar_12.z) / 3.0);
  col_7.w = alpha_10;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = xlv_TEXCOORD1;
  highp float tmpvar_14;
  tmpvar_14 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_13).xy).w;
  atten_3 = tmpvar_14;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_15;
  lowp vec4 c_16;
  lowp float diff_17;
  mediump float tmpvar_18;
  tmpvar_18 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_17 = tmpvar_18;
  c_16.xyz = ((col_7.xyz * tmpvar_1) * diff_17);
  c_16.w = col_7.w;
  c_15.w = c_16.w;
  c_15.xyz = c_16.xyz;
  gl_FragData[0] = c_15;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  col_7.xyz = tmpvar_9.xyz;
  mediump float alpha_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_12;
  tmpvar_12 = tmpvar_11.xyz;
  alpha_10 = (((tmpvar_12.x + tmpvar_12.y) + tmpvar_12.z) / 3.0);
  col_7.w = alpha_10;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = xlv_TEXCOORD1;
  highp float tmpvar_14;
  tmpvar_14 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_13).xy).w;
  atten_3 = tmpvar_14;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_15;
  lowp vec4 c_16;
  lowp float diff_17;
  mediump float tmpvar_18;
  tmpvar_18 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_17 = tmpvar_18;
  c_16.xyz = ((col_7.xyz * tmpvar_1) * diff_17);
  c_16.w = col_7.w;
  c_15.w = c_16.w;
  c_15.xyz = c_16.xyz;
  gl_FragData[0] = c_15;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_9;
  tmpvar_9 = tmpvar_8;
  col_7.xyz = tmpvar_9.xyz;
  mediump float alpha_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_12;
  tmpvar_12 = tmpvar_11.xyz;
  alpha_10 = (((tmpvar_12.x + tmpvar_12.y) + tmpvar_12.z) / 3.0);
  col_7.w = alpha_10;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = xlv_TEXCOORD1;
  highp float tmpvar_14;
  tmpvar_14 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_13).xy).w;
  atten_3 = tmpvar_14;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_15;
  lowp vec4 c_16;
  lowp float diff_17;
  mediump float tmpvar_18;
  tmpvar_18 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_17 = tmpvar_18;
  c_16.xyz = ((col_7.xyz * tmpvar_1) * diff_17);
  c_16.w = col_7.w;
  c_15.w = c_16.w;
  c_15.xyz = c_16.xyz;
  gl_FragData[0] = c_15;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18).xyz;
  highp float tmpvar_19;
  tmpvar_19 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_19;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_20;
  lowp vec4 c_21;
  lowp float diff_22;
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_22 = tmpvar_23;
  c_21.xyz = ((col_8.xyz * tmpvar_1) * diff_22);
  c_21.w = col_8.w;
  c_20.w = c_21.w;
  c_20.xyz = c_21.xyz;
  gl_FragData[0] = c_20;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18).xyz;
  highp float tmpvar_19;
  tmpvar_19 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_19;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_20;
  lowp vec4 c_21;
  lowp float diff_22;
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_22 = tmpvar_23;
  c_21.xyz = ((col_8.xyz * tmpvar_1) * diff_22);
  c_21.w = col_8.w;
  c_20.w = c_21.w;
  c_20.xyz = c_21.xyz;
  gl_FragData[0] = c_20;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18).xyz;
  highp float tmpvar_19;
  tmpvar_19 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_19;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_20;
  lowp vec4 c_21;
  lowp float diff_22;
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_22 = tmpvar_23;
  c_21.xyz = ((col_8.xyz * tmpvar_1) * diff_22);
  c_21.w = col_8.w;
  c_20.w = c_21.w;
  c_20.xyz = c_21.xyz;
  gl_FragData[0] = c_20;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18);
  lowp float tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_19 = tmpvar_20.w;
  lowp float tmpvar_21;
  highp vec4 tmpvar_22;
  tmpvar_22 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_21 = tmpvar_22.w;
  highp float tmpvar_23;
  tmpvar_23 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_19) * tmpvar_21);
  atten_3 = tmpvar_23;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_24;
  lowp vec4 c_25;
  lowp float diff_26;
  mediump float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_26 = tmpvar_27;
  c_25.xyz = ((col_8.xyz * tmpvar_1) * diff_26);
  c_25.w = col_8.w;
  c_24.w = c_25.w;
  c_24.xyz = c_25.xyz;
  gl_FragData[0] = c_24;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18);
  lowp float tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_19 = tmpvar_20.w;
  lowp float tmpvar_21;
  highp vec4 tmpvar_22;
  tmpvar_22 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_21 = tmpvar_22.w;
  highp float tmpvar_23;
  tmpvar_23 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_19) * tmpvar_21);
  atten_3 = tmpvar_23;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_24;
  lowp vec4 c_25;
  lowp float diff_26;
  mediump float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_26 = tmpvar_27;
  c_25.xyz = ((col_8.xyz * tmpvar_1) * diff_26);
  c_25.w = col_8.w;
  c_24.w = c_25.w;
  c_24.xyz = c_25.xyz;
  gl_FragData[0] = c_24;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18);
  lowp float tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_19 = tmpvar_20.w;
  lowp float tmpvar_21;
  highp vec4 tmpvar_22;
  tmpvar_22 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_21 = tmpvar_22.w;
  highp float tmpvar_23;
  tmpvar_23 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_19) * tmpvar_21);
  atten_3 = tmpvar_23;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_24;
  lowp vec4 c_25;
  lowp float diff_26;
  mediump float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_26 = tmpvar_27;
  c_25.xyz = ((col_8.xyz * tmpvar_1) * diff_26);
  c_25.w = col_8.w;
  c_24.w = c_25.w;
  c_24.xyz = c_25.xyz;
  gl_FragData[0] = c_24;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18).xyz;
  highp float tmpvar_19;
  tmpvar_19 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_19;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_20;
  lowp vec4 c_21;
  lowp float diff_22;
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_22 = tmpvar_23;
  c_21.xyz = ((col_8.xyz * tmpvar_1) * diff_22);
  c_21.w = col_8.w;
  c_20.w = c_21.w;
  c_20.xyz = c_21.xyz;
  gl_FragData[0] = c_20;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18).xyz;
  highp float tmpvar_19;
  tmpvar_19 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_19;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_20;
  lowp vec4 c_21;
  lowp float diff_22;
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_22 = tmpvar_23;
  c_21.xyz = ((col_8.xyz * tmpvar_1) * diff_22);
  c_21.w = col_8.w;
  c_20.w = c_21.w;
  c_20.xyz = c_21.xyz;
  gl_FragData[0] = c_20;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18).xyz;
  highp float tmpvar_19;
  tmpvar_19 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_19;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_20;
  lowp vec4 c_21;
  lowp float diff_22;
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_22 = tmpvar_23;
  c_21.xyz = ((col_8.xyz * tmpvar_1) * diff_22);
  c_21.w = col_8.w;
  c_20.w = c_21.w;
  c_20.xyz = c_21.xyz;
  gl_FragData[0] = c_20;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  mediump vec4 rgba_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_11;
  tmpvar_11.x = tmpvar_9.x;
  tmpvar_11.yz = tmpvar_10.xy;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _YpCbCrTransform[0].xyz;
  tmpvar_12[1] = _YpCbCrTransform[1].xyz;
  tmpvar_12[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_13;
  v_13.x = _YpCbCrTransform[0].w;
  v_13.y = _YpCbCrTransform[1].w;
  v_13.z = _YpCbCrTransform[2].w;
  v_13.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = (tmpvar_12 * (tmpvar_11 + v_13.xyz));
  rgba_8 = tmpvar_14;
  col_7.xyz = rgba_8.xyz;
  mediump float alpha_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_15 = ((tmpvar_16.x - 0.0625) * 1.164384);
  col_7.w = alpha_15;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = xlv_TEXCOORD1;
  highp float tmpvar_18;
  tmpvar_18 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_17).xy).w;
  atten_3 = tmpvar_18;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_19;
  lowp vec4 c_20;
  lowp float diff_21;
  mediump float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_21 = tmpvar_22;
  c_20.xyz = ((col_7.xyz * tmpvar_1) * diff_21);
  c_20.w = col_7.w;
  c_19.w = c_20.w;
  c_19.xyz = c_20.xyz;
  gl_FragData[0] = c_19;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  mediump vec4 rgba_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_11;
  tmpvar_11.x = tmpvar_9.x;
  tmpvar_11.yz = tmpvar_10.xy;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _YpCbCrTransform[0].xyz;
  tmpvar_12[1] = _YpCbCrTransform[1].xyz;
  tmpvar_12[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_13;
  v_13.x = _YpCbCrTransform[0].w;
  v_13.y = _YpCbCrTransform[1].w;
  v_13.z = _YpCbCrTransform[2].w;
  v_13.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = (tmpvar_12 * (tmpvar_11 + v_13.xyz));
  rgba_8 = tmpvar_14;
  col_7.xyz = rgba_8.xyz;
  mediump float alpha_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_15 = ((tmpvar_16.x - 0.0625) * 1.164384);
  col_7.w = alpha_15;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = xlv_TEXCOORD1;
  highp float tmpvar_18;
  tmpvar_18 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_17).xy).w;
  atten_3 = tmpvar_18;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_19;
  lowp vec4 c_20;
  lowp float diff_21;
  mediump float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_21 = tmpvar_22;
  c_20.xyz = ((col_7.xyz * tmpvar_1) * diff_21);
  c_20.w = col_7.w;
  c_19.w = c_20.w;
  c_19.xyz = c_20.xyz;
  gl_FragData[0] = c_19;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  mediump vec4 rgba_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_11;
  tmpvar_11.x = tmpvar_9.x;
  tmpvar_11.yz = tmpvar_10.xy;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _YpCbCrTransform[0].xyz;
  tmpvar_12[1] = _YpCbCrTransform[1].xyz;
  tmpvar_12[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_13;
  v_13.x = _YpCbCrTransform[0].w;
  v_13.y = _YpCbCrTransform[1].w;
  v_13.z = _YpCbCrTransform[2].w;
  v_13.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = (tmpvar_12 * (tmpvar_11 + v_13.xyz));
  rgba_8 = tmpvar_14;
  col_7.xyz = rgba_8.xyz;
  mediump float alpha_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_15 = ((tmpvar_16.x - 0.0625) * 1.164384);
  col_7.w = alpha_15;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = xlv_TEXCOORD1;
  highp float tmpvar_18;
  tmpvar_18 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_17).xy).w;
  atten_3 = tmpvar_18;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_19;
  lowp vec4 c_20;
  lowp float diff_21;
  mediump float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_21 = tmpvar_22;
  c_20.xyz = ((col_7.xyz * tmpvar_1) * diff_21);
  c_20.w = col_7.w;
  c_19.w = c_20.w;
  c_19.xyz = c_20.xyz;
  gl_FragData[0] = c_19;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  rgba_9.w = tmpvar_11.w;
  rgba_9.xyz = (tmpvar_11.xyz * ((tmpvar_11.xyz * 
    ((tmpvar_11.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_14;
  tmpvar_14 = tmpvar_13.xyz;
  mediump vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * ((tmpvar_14 * 
    ((tmpvar_14 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_12 = (((tmpvar_15.x + tmpvar_15.y) + tmpvar_15.z) / 3.0);
  col_8.w = alpha_12;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16).xyz;
  highp float tmpvar_17;
  tmpvar_17 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_17;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_18;
  lowp vec4 c_19;
  lowp float diff_20;
  mediump float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_20 = tmpvar_21;
  c_19.xyz = ((col_8.xyz * tmpvar_1) * diff_20);
  c_19.w = col_8.w;
  c_18.w = c_19.w;
  c_18.xyz = c_19.xyz;
  gl_FragData[0] = c_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  rgba_9.w = tmpvar_11.w;
  rgba_9.xyz = (tmpvar_11.xyz * ((tmpvar_11.xyz * 
    ((tmpvar_11.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_14;
  tmpvar_14 = tmpvar_13.xyz;
  mediump vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * ((tmpvar_14 * 
    ((tmpvar_14 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_12 = (((tmpvar_15.x + tmpvar_15.y) + tmpvar_15.z) / 3.0);
  col_8.w = alpha_12;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16).xyz;
  highp float tmpvar_17;
  tmpvar_17 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_17;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_18;
  lowp vec4 c_19;
  lowp float diff_20;
  mediump float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_20 = tmpvar_21;
  c_19.xyz = ((col_8.xyz * tmpvar_1) * diff_20);
  c_19.w = col_8.w;
  c_18.w = c_19.w;
  c_18.xyz = c_19.xyz;
  gl_FragData[0] = c_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  rgba_9.w = tmpvar_11.w;
  rgba_9.xyz = (tmpvar_11.xyz * ((tmpvar_11.xyz * 
    ((tmpvar_11.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_14;
  tmpvar_14 = tmpvar_13.xyz;
  mediump vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * ((tmpvar_14 * 
    ((tmpvar_14 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_12 = (((tmpvar_15.x + tmpvar_15.y) + tmpvar_15.z) / 3.0);
  col_8.w = alpha_12;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16).xyz;
  highp float tmpvar_17;
  tmpvar_17 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_17;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_18;
  lowp vec4 c_19;
  lowp float diff_20;
  mediump float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_20 = tmpvar_21;
  c_19.xyz = ((col_8.xyz * tmpvar_1) * diff_20);
  c_19.w = col_8.w;
  c_18.w = c_19.w;
  c_18.xyz = c_19.xyz;
  gl_FragData[0] = c_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  rgba_9.w = tmpvar_11.w;
  rgba_9.xyz = (tmpvar_11.xyz * ((tmpvar_11.xyz * 
    ((tmpvar_11.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_14;
  tmpvar_14 = tmpvar_13.xyz;
  mediump vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * ((tmpvar_14 * 
    ((tmpvar_14 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_12 = (((tmpvar_15.x + tmpvar_15.y) + tmpvar_15.z) / 3.0);
  col_8.w = alpha_12;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16);
  lowp float tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_17 = tmpvar_18.w;
  lowp float tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_19 = tmpvar_20.w;
  highp float tmpvar_21;
  tmpvar_21 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_17) * tmpvar_19);
  atten_3 = tmpvar_21;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_22;
  lowp vec4 c_23;
  lowp float diff_24;
  mediump float tmpvar_25;
  tmpvar_25 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_24 = tmpvar_25;
  c_23.xyz = ((col_8.xyz * tmpvar_1) * diff_24);
  c_23.w = col_8.w;
  c_22.w = c_23.w;
  c_22.xyz = c_23.xyz;
  gl_FragData[0] = c_22;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  rgba_9.w = tmpvar_11.w;
  rgba_9.xyz = (tmpvar_11.xyz * ((tmpvar_11.xyz * 
    ((tmpvar_11.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_14;
  tmpvar_14 = tmpvar_13.xyz;
  mediump vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * ((tmpvar_14 * 
    ((tmpvar_14 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_12 = (((tmpvar_15.x + tmpvar_15.y) + tmpvar_15.z) / 3.0);
  col_8.w = alpha_12;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16);
  lowp float tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_17 = tmpvar_18.w;
  lowp float tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_19 = tmpvar_20.w;
  highp float tmpvar_21;
  tmpvar_21 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_17) * tmpvar_19);
  atten_3 = tmpvar_21;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_22;
  lowp vec4 c_23;
  lowp float diff_24;
  mediump float tmpvar_25;
  tmpvar_25 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_24 = tmpvar_25;
  c_23.xyz = ((col_8.xyz * tmpvar_1) * diff_24);
  c_23.w = col_8.w;
  c_22.w = c_23.w;
  c_22.xyz = c_23.xyz;
  gl_FragData[0] = c_22;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  rgba_9.w = tmpvar_11.w;
  rgba_9.xyz = (tmpvar_11.xyz * ((tmpvar_11.xyz * 
    ((tmpvar_11.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_14;
  tmpvar_14 = tmpvar_13.xyz;
  mediump vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * ((tmpvar_14 * 
    ((tmpvar_14 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_12 = (((tmpvar_15.x + tmpvar_15.y) + tmpvar_15.z) / 3.0);
  col_8.w = alpha_12;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16);
  lowp float tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_17 = tmpvar_18.w;
  lowp float tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_19 = tmpvar_20.w;
  highp float tmpvar_21;
  tmpvar_21 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_17) * tmpvar_19);
  atten_3 = tmpvar_21;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_22;
  lowp vec4 c_23;
  lowp float diff_24;
  mediump float tmpvar_25;
  tmpvar_25 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_24 = tmpvar_25;
  c_23.xyz = ((col_8.xyz * tmpvar_1) * diff_24);
  c_23.w = col_8.w;
  c_22.w = c_23.w;
  c_22.xyz = c_23.xyz;
  gl_FragData[0] = c_22;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  rgba_9.w = tmpvar_11.w;
  rgba_9.xyz = (tmpvar_11.xyz * ((tmpvar_11.xyz * 
    ((tmpvar_11.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_14;
  tmpvar_14 = tmpvar_13.xyz;
  mediump vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * ((tmpvar_14 * 
    ((tmpvar_14 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_12 = (((tmpvar_15.x + tmpvar_15.y) + tmpvar_15.z) / 3.0);
  col_8.w = alpha_12;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16).xyz;
  highp float tmpvar_17;
  tmpvar_17 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_17;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_18;
  lowp vec4 c_19;
  lowp float diff_20;
  mediump float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_20 = tmpvar_21;
  c_19.xyz = ((col_8.xyz * tmpvar_1) * diff_20);
  c_19.w = col_8.w;
  c_18.w = c_19.w;
  c_18.xyz = c_19.xyz;
  gl_FragData[0] = c_18;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  rgba_9.w = tmpvar_11.w;
  rgba_9.xyz = (tmpvar_11.xyz * ((tmpvar_11.xyz * 
    ((tmpvar_11.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_14;
  tmpvar_14 = tmpvar_13.xyz;
  mediump vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * ((tmpvar_14 * 
    ((tmpvar_14 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_12 = (((tmpvar_15.x + tmpvar_15.y) + tmpvar_15.z) / 3.0);
  col_8.w = alpha_12;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16).xyz;
  highp float tmpvar_17;
  tmpvar_17 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_17;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_18;
  lowp vec4 c_19;
  lowp float diff_20;
  mediump float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_20 = tmpvar_21;
  c_19.xyz = ((col_8.xyz * tmpvar_1) * diff_20);
  c_19.w = col_8.w;
  c_18.w = c_19.w;
  c_18.xyz = c_19.xyz;
  gl_FragData[0] = c_18;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  rgba_9.w = tmpvar_11.w;
  rgba_9.xyz = (tmpvar_11.xyz * ((tmpvar_11.xyz * 
    ((tmpvar_11.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_14;
  tmpvar_14 = tmpvar_13.xyz;
  mediump vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * ((tmpvar_14 * 
    ((tmpvar_14 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_12 = (((tmpvar_15.x + tmpvar_15.y) + tmpvar_15.z) / 3.0);
  col_8.w = alpha_12;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_16).xyz;
  highp float tmpvar_17;
  tmpvar_17 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_17;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_18;
  lowp vec4 c_19;
  lowp float diff_20;
  mediump float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_20 = tmpvar_21;
  c_19.xyz = ((col_8.xyz * tmpvar_1) * diff_20);
  c_19.w = col_8.w;
  c_18.w = c_19.w;
  c_18.xyz = c_19.xyz;
  gl_FragData[0] = c_18;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  mediump vec4 rgba_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  rgba_8.w = tmpvar_10.w;
  rgba_8.xyz = (tmpvar_10.xyz * ((tmpvar_10.xyz * 
    ((tmpvar_10.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_7.xyz = rgba_8.xyz;
  mediump float alpha_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_13;
  tmpvar_13 = tmpvar_12.xyz;
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_13 * ((tmpvar_13 * 
    ((tmpvar_13 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_11 = (((tmpvar_14.x + tmpvar_14.y) + tmpvar_14.z) / 3.0);
  col_7.w = alpha_11;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = xlv_TEXCOORD1;
  highp float tmpvar_16;
  tmpvar_16 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_15).xy).w;
  atten_3 = tmpvar_16;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_17;
  lowp vec4 c_18;
  lowp float diff_19;
  mediump float tmpvar_20;
  tmpvar_20 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_19 = tmpvar_20;
  c_18.xyz = ((col_7.xyz * tmpvar_1) * diff_19);
  c_18.w = col_7.w;
  c_17.w = c_18.w;
  c_17.xyz = c_18.xyz;
  gl_FragData[0] = c_17;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  mediump vec4 rgba_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  rgba_8.w = tmpvar_10.w;
  rgba_8.xyz = (tmpvar_10.xyz * ((tmpvar_10.xyz * 
    ((tmpvar_10.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_7.xyz = rgba_8.xyz;
  mediump float alpha_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_13;
  tmpvar_13 = tmpvar_12.xyz;
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_13 * ((tmpvar_13 * 
    ((tmpvar_13 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_11 = (((tmpvar_14.x + tmpvar_14.y) + tmpvar_14.z) / 3.0);
  col_7.w = alpha_11;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = xlv_TEXCOORD1;
  highp float tmpvar_16;
  tmpvar_16 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_15).xy).w;
  atten_3 = tmpvar_16;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_17;
  lowp vec4 c_18;
  lowp float diff_19;
  mediump float tmpvar_20;
  tmpvar_20 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_19 = tmpvar_20;
  c_18.xyz = ((col_7.xyz * tmpvar_1) * diff_19);
  c_18.w = col_7.w;
  c_17.w = c_18.w;
  c_17.xyz = c_18.xyz;
  gl_FragData[0] = c_17;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  mediump vec4 rgba_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  mediump vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  rgba_8.w = tmpvar_10.w;
  rgba_8.xyz = (tmpvar_10.xyz * ((tmpvar_10.xyz * 
    ((tmpvar_10.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_7.xyz = rgba_8.xyz;
  mediump float alpha_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  mediump vec3 tmpvar_13;
  tmpvar_13 = tmpvar_12.xyz;
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_13 * ((tmpvar_13 * 
    ((tmpvar_13 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_11 = (((tmpvar_14.x + tmpvar_14.y) + tmpvar_14.z) / 3.0);
  col_7.w = alpha_11;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = xlv_TEXCOORD1;
  highp float tmpvar_16;
  tmpvar_16 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_15).xy).w;
  atten_3 = tmpvar_16;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_17;
  lowp vec4 c_18;
  lowp float diff_19;
  mediump float tmpvar_20;
  tmpvar_20 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_19 = tmpvar_20;
  c_18.xyz = ((col_7.xyz * tmpvar_1) * diff_19);
  c_18.w = col_7.w;
  c_17.w = c_18.w;
  c_17.xyz = c_18.xyz;
  gl_FragData[0] = c_17;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  rgba_9.xyz = (rgba_9.xyz * ((rgba_9.xyz * 
    ((rgba_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18).xyz;
  highp float tmpvar_19;
  tmpvar_19 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_19;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_20;
  lowp vec4 c_21;
  lowp float diff_22;
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_22 = tmpvar_23;
  c_21.xyz = ((col_8.xyz * tmpvar_1) * diff_22);
  c_21.w = col_8.w;
  c_20.w = c_21.w;
  c_20.xyz = c_21.xyz;
  gl_FragData[0] = c_20;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  rgba_9.xyz = (rgba_9.xyz * ((rgba_9.xyz * 
    ((rgba_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18).xyz;
  highp float tmpvar_19;
  tmpvar_19 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_19;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_20;
  lowp vec4 c_21;
  lowp float diff_22;
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_22 = tmpvar_23;
  c_21.xyz = ((col_8.xyz * tmpvar_1) * diff_22);
  c_21.w = col_8.w;
  c_20.w = c_21.w;
  c_20.xyz = c_21.xyz;
  gl_FragData[0] = c_20;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  rgba_9.xyz = (rgba_9.xyz * ((rgba_9.xyz * 
    ((rgba_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18).xyz;
  highp float tmpvar_19;
  tmpvar_19 = texture2D (_LightTexture0, vec2(dot (lightCoord_4, lightCoord_4))).w;
  atten_3 = tmpvar_19;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_20;
  lowp vec4 c_21;
  lowp float diff_22;
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_22 = tmpvar_23;
  c_21.xyz = ((col_8.xyz * tmpvar_1) * diff_22);
  c_21.w = col_8.w;
  c_20.w = c_21.w;
  c_20.xyz = c_21.xyz;
  gl_FragData[0] = c_20;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 lightDir_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = _WorldSpaceLightPos0.xyz;
  lightDir_4 = tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD0;
  lowp vec4 col_6;
  mediump vec4 rgba_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_10;
  tmpvar_10.x = tmpvar_8.x;
  tmpvar_10.yz = tmpvar_9.xy;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _YpCbCrTransform[0].xyz;
  tmpvar_11[1] = _YpCbCrTransform[1].xyz;
  tmpvar_11[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_12;
  v_12.x = _YpCbCrTransform[0].w;
  v_12.y = _YpCbCrTransform[1].w;
  v_12.z = _YpCbCrTransform[2].w;
  v_12.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_11 * (tmpvar_10 + v_12.xyz));
  rgba_7 = tmpvar_13;
  rgba_7.xyz = (rgba_7.xyz * ((rgba_7.xyz * 
    ((rgba_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_6.xyz = rgba_7.xyz;
  mediump float alpha_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_14 = ((tmpvar_15.x - 0.0625) * 1.164384);
  col_6.w = alpha_14;
  col_6 = (col_6 * _Color);
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_4;
  lowp vec4 c_16;
  lowp vec4 c_17;
  lowp float diff_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_3, tmpvar_2));
  diff_18 = tmpvar_19;
  c_17.xyz = ((col_6.xyz * tmpvar_1) * diff_18);
  c_17.w = col_6.w;
  c_16.w = c_17.w;
  c_16.xyz = c_17.xyz;
  gl_FragData[0] = c_16;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  rgba_9.xyz = (rgba_9.xyz * ((rgba_9.xyz * 
    ((rgba_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18);
  lowp float tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_19 = tmpvar_20.w;
  lowp float tmpvar_21;
  highp vec4 tmpvar_22;
  tmpvar_22 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_21 = tmpvar_22.w;
  highp float tmpvar_23;
  tmpvar_23 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_19) * tmpvar_21);
  atten_3 = tmpvar_23;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_24;
  lowp vec4 c_25;
  lowp float diff_26;
  mediump float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_26 = tmpvar_27;
  c_25.xyz = ((col_8.xyz * tmpvar_1) * diff_26);
  c_25.w = col_8.w;
  c_24.w = c_25.w;
  c_24.xyz = c_25.xyz;
  gl_FragData[0] = c_24;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  rgba_9.xyz = (rgba_9.xyz * ((rgba_9.xyz * 
    ((rgba_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18);
  lowp float tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_19 = tmpvar_20.w;
  lowp float tmpvar_21;
  highp vec4 tmpvar_22;
  tmpvar_22 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_21 = tmpvar_22.w;
  highp float tmpvar_23;
  tmpvar_23 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_19) * tmpvar_21);
  atten_3 = tmpvar_23;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_24;
  lowp vec4 c_25;
  lowp float diff_26;
  mediump float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_26 = tmpvar_27;
  c_25.xyz = ((col_8.xyz * tmpvar_1) * diff_26);
  c_25.w = col_8.w;
  c_24.w = c_25.w;
  c_24.xyz = c_25.xyz;
  gl_FragData[0] = c_24;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec4 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  rgba_9.xyz = (rgba_9.xyz * ((rgba_9.xyz * 
    ((rgba_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18);
  lowp float tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_LightTexture0, ((lightCoord_4.xy / lightCoord_4.w) + 0.5));
  tmpvar_19 = tmpvar_20.w;
  lowp float tmpvar_21;
  highp vec4 tmpvar_22;
  tmpvar_22 = texture2D (_LightTextureB0, vec2(dot (lightCoord_4.xyz, lightCoord_4.xyz)));
  tmpvar_21 = tmpvar_22.w;
  highp float tmpvar_23;
  tmpvar_23 = ((float(
    (lightCoord_4.z > 0.0)
  ) * tmpvar_19) * tmpvar_21);
  atten_3 = tmpvar_23;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_24;
  lowp vec4 c_25;
  lowp float diff_26;
  mediump float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_26 = tmpvar_27;
  c_25.xyz = ((col_8.xyz * tmpvar_1) * diff_26);
  c_25.w = col_8.w;
  c_24.w = c_25.w;
  c_24.xyz = c_25.xyz;
  gl_FragData[0] = c_24;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  rgba_9.xyz = (rgba_9.xyz * ((rgba_9.xyz * 
    ((rgba_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18).xyz;
  highp float tmpvar_19;
  tmpvar_19 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_19;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_20;
  lowp vec4 c_21;
  lowp float diff_22;
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_22 = tmpvar_23;
  c_21.xyz = ((col_8.xyz * tmpvar_1) * diff_22);
  c_21.w = col_8.w;
  c_20.w = c_21.w;
  c_20.xyz = c_21.xyz;
  gl_FragData[0] = c_20;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  rgba_9.xyz = (rgba_9.xyz * ((rgba_9.xyz * 
    ((rgba_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18).xyz;
  highp float tmpvar_19;
  tmpvar_19 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_19;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_20;
  lowp vec4 c_21;
  lowp float diff_22;
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_22 = tmpvar_23;
  c_21.xyz = ((col_8.xyz * tmpvar_1) * diff_22);
  c_21.w = col_8.w;
  c_20.w = c_21.w;
  c_20.xyz = c_21.xyz;
  gl_FragData[0] = c_20;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp samplerCube _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform highp sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  highp vec3 lightCoord_4;
  lowp vec3 tmpvar_5;
  lowp vec3 lightDir_6;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1));
  lightDir_6 = tmpvar_7;
  tmpvar_5 = xlv_TEXCOORD0;
  lowp vec4 col_8;
  mediump vec4 rgba_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_10.x;
  tmpvar_12.yz = tmpvar_11.xy;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _YpCbCrTransform[0].xyz;
  tmpvar_13[1] = _YpCbCrTransform[1].xyz;
  tmpvar_13[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_14;
  v_14.x = _YpCbCrTransform[0].w;
  v_14.y = _YpCbCrTransform[1].w;
  v_14.z = _YpCbCrTransform[2].w;
  v_14.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (tmpvar_13 * (tmpvar_12 + v_14.xyz));
  rgba_9 = tmpvar_15;
  rgba_9.xyz = (rgba_9.xyz * ((rgba_9.xyz * 
    ((rgba_9.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_8.xyz = rgba_9.xyz;
  mediump float alpha_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_16 = ((tmpvar_17.x - 0.0625) * 1.164384);
  col_8.w = alpha_16;
  col_8 = (col_8 * _Color);
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = xlv_TEXCOORD1;
  lightCoord_4 = (unity_WorldToLight * tmpvar_18).xyz;
  highp float tmpvar_19;
  tmpvar_19 = (texture2D (_LightTextureB0, vec2(dot (lightCoord_4, lightCoord_4))).w * textureCube (_LightTexture0, lightCoord_4).w);
  atten_3 = tmpvar_19;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_6;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_20;
  lowp vec4 c_21;
  lowp float diff_22;
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
  diff_22 = tmpvar_23;
  c_21.xyz = ((col_8.xyz * tmpvar_1) * diff_22);
  c_21.w = col_8.w;
  c_20.w = c_21.w;
  c_20.xyz = c_21.xyz;
  gl_FragData[0] = c_20;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  mediump vec4 rgba_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_11;
  tmpvar_11.x = tmpvar_9.x;
  tmpvar_11.yz = tmpvar_10.xy;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _YpCbCrTransform[0].xyz;
  tmpvar_12[1] = _YpCbCrTransform[1].xyz;
  tmpvar_12[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_13;
  v_13.x = _YpCbCrTransform[0].w;
  v_13.y = _YpCbCrTransform[1].w;
  v_13.z = _YpCbCrTransform[2].w;
  v_13.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = (tmpvar_12 * (tmpvar_11 + v_13.xyz));
  rgba_8 = tmpvar_14;
  rgba_8.xyz = (rgba_8.xyz * ((rgba_8.xyz * 
    ((rgba_8.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_7.xyz = rgba_8.xyz;
  mediump float alpha_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_15 = ((tmpvar_16.x - 0.0625) * 1.164384);
  col_7.w = alpha_15;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = xlv_TEXCOORD1;
  highp float tmpvar_18;
  tmpvar_18 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_17).xy).w;
  atten_3 = tmpvar_18;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_19;
  lowp vec4 c_20;
  lowp float diff_21;
  mediump float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_21 = tmpvar_22;
  c_20.xyz = ((col_7.xyz * tmpvar_1) * diff_21);
  c_20.w = col_7.w;
  c_19.w = c_20.w;
  c_19.xyz = c_20.xyz;
  gl_FragData[0] = c_19;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  mediump vec4 rgba_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_11;
  tmpvar_11.x = tmpvar_9.x;
  tmpvar_11.yz = tmpvar_10.xy;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _YpCbCrTransform[0].xyz;
  tmpvar_12[1] = _YpCbCrTransform[1].xyz;
  tmpvar_12[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_13;
  v_13.x = _YpCbCrTransform[0].w;
  v_13.y = _YpCbCrTransform[1].w;
  v_13.z = _YpCbCrTransform[2].w;
  v_13.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = (tmpvar_12 * (tmpvar_11 + v_13.xyz));
  rgba_8 = tmpvar_14;
  rgba_8.xyz = (rgba_8.xyz * ((rgba_8.xyz * 
    ((rgba_8.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_7.xyz = rgba_8.xyz;
  mediump float alpha_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_15 = ((tmpvar_16.x - 0.0625) * 1.164384);
  col_7.w = alpha_15;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = xlv_TEXCOORD1;
  highp float tmpvar_18;
  tmpvar_18 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_17).xy).w;
  atten_3 = tmpvar_18;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_19;
  lowp vec4 c_20;
  lowp float diff_21;
  mediump float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_21 = tmpvar_22;
  c_20.xyz = ((col_7.xyz * tmpvar_1) * diff_21);
  c_20.w = col_7.w;
  c_19.w = c_20.w;
  c_19.xyz = c_20.xyz;
  gl_FragData[0] = c_19;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_WorldToObject;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 _MainTex_TexelSize;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _glesVertex.xyz;
  highp mat3 tmpvar_4;
  tmpvar_4[0] = unity_WorldToObject[0].xyz;
  tmpvar_4[1] = unity_WorldToObject[1].xyz;
  tmpvar_4[2] = unity_WorldToObject[2].xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_3));
  xlv_TEXCOORD0 = normalize((_glesNormal * tmpvar_4));
  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD2 = result_1;
}


#endif
#ifdef FRAGMENT
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform highp sampler2D _LightTexture0;
uniform highp mat4 unity_WorldToLight;
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp float atten_3;
  lowp vec3 tmpvar_4;
  lowp vec3 lightDir_5;
  mediump vec3 tmpvar_6;
  tmpvar_6 = _WorldSpaceLightPos0.xyz;
  lightDir_5 = tmpvar_6;
  tmpvar_4 = xlv_TEXCOORD0;
  lowp vec4 col_7;
  mediump vec4 rgba_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD2.xy);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_ChromaTex, xlv_TEXCOORD2.xy);
  highp vec3 tmpvar_11;
  tmpvar_11.x = tmpvar_9.x;
  tmpvar_11.yz = tmpvar_10.xy;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _YpCbCrTransform[0].xyz;
  tmpvar_12[1] = _YpCbCrTransform[1].xyz;
  tmpvar_12[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_13;
  v_13.x = _YpCbCrTransform[0].w;
  v_13.y = _YpCbCrTransform[1].w;
  v_13.z = _YpCbCrTransform[2].w;
  v_13.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = (tmpvar_12 * (tmpvar_11 + v_13.xyz));
  rgba_8 = tmpvar_14;
  rgba_8.xyz = (rgba_8.xyz * ((rgba_8.xyz * 
    ((rgba_8.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_7.xyz = rgba_8.xyz;
  mediump float alpha_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD2.zw);
  alpha_15 = ((tmpvar_16.x - 0.0625) * 1.164384);
  col_7.w = alpha_15;
  col_7 = (col_7 * _Color);
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = xlv_TEXCOORD1;
  highp float tmpvar_18;
  tmpvar_18 = texture2D (_LightTexture0, (unity_WorldToLight * tmpvar_17).xy).w;
  atten_3 = tmpvar_18;
  tmpvar_1 = _LightColor0.xyz;
  tmpvar_2 = lightDir_5;
  tmpvar_1 = (tmpvar_1 * atten_3);
  lowp vec4 c_19;
  lowp vec4 c_20;
  lowp float diff_21;
  mediump float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_4, tmpvar_2));
  diff_21 = tmpvar_22;
  c_20.xyz = ((col_7.xyz * tmpvar_1) * diff_21);
  c_20.w = col_7.w;
  c_19.w = c_20.w;
  c_19.xyz = c_20.xyz;
  gl_FragData[0] = c_19;
}


#endif
"
}
}
Program "fp" {
SubProgram "gles hw_tier00 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "SPOT" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "SPOT" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "POINT_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
}
}
 Pass {
  Name "META"
  LOD 200
  Tags { "IGNOREPROJECTOR" = "true" "LIGHTMODE" = "META" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
  ZWrite Off
  Cull Off
  GpuProgramID 170191
Program "vp" {
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 vertex_2;
  vertex_2 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_3;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_3 = 0.0001;
    } else {
      tmpvar_3 = 0.0;
    };
    vertex_2.z = tmpvar_3;
  };
  if (unity_MetaVertexControl.y) {
    vertex_2.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_4;
    if ((vertex_2.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_2.z = tmpvar_4;
  };
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = vertex_2.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_6;
  tmpvar_6 = tmpvar_5;
  col_4 = tmpvar_6;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_7;
  res_7 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_8;
    tmpvar_8.w = 1.0;
    tmpvar_8.xyz = tmpvar_2;
    res_7.w = tmpvar_8.w;
    highp vec3 tmpvar_9;
    tmpvar_9 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_7.xyz = tmpvar_9;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_10;
    if (bool(unity_UseLinearSpace)) {
      emission_10 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_10 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_11;
    tmpvar_11.w = 1.0;
    tmpvar_11.xyz = emission_10;
    res_7 = tmpvar_11;
  };
  tmpvar_1 = res_7;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 vertex_2;
  vertex_2 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_3;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_3 = 0.0001;
    } else {
      tmpvar_3 = 0.0;
    };
    vertex_2.z = tmpvar_3;
  };
  if (unity_MetaVertexControl.y) {
    vertex_2.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_4;
    if ((vertex_2.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_2.z = tmpvar_4;
  };
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = vertex_2.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_6;
  tmpvar_6 = tmpvar_5;
  col_4 = tmpvar_6;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_7;
  res_7 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_8;
    tmpvar_8.w = 1.0;
    tmpvar_8.xyz = tmpvar_2;
    res_7.w = tmpvar_8.w;
    highp vec3 tmpvar_9;
    tmpvar_9 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_7.xyz = tmpvar_9;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_10;
    if (bool(unity_UseLinearSpace)) {
      emission_10 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_10 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_11;
    tmpvar_11.w = 1.0;
    tmpvar_11.xyz = emission_10;
    res_7 = tmpvar_11;
  };
  tmpvar_1 = res_7;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 vertex_2;
  vertex_2 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_3;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_3 = 0.0001;
    } else {
      tmpvar_3 = 0.0;
    };
    vertex_2.z = tmpvar_3;
  };
  if (unity_MetaVertexControl.y) {
    vertex_2.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_4;
    if ((vertex_2.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_2.z = tmpvar_4;
  };
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = vertex_2.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_6;
  tmpvar_6 = tmpvar_5;
  col_4 = tmpvar_6;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_7;
  res_7 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_8;
    tmpvar_8.w = 1.0;
    tmpvar_8.xyz = tmpvar_2;
    res_7.w = tmpvar_8.w;
    highp vec3 tmpvar_9;
    tmpvar_9 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_7.xyz = tmpvar_9;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_10;
    if (bool(unity_UseLinearSpace)) {
      emission_10 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_10 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_11;
    tmpvar_11.w = 1.0;
    tmpvar_11.xyz = emission_10;
    res_7 = tmpvar_11;
  };
  tmpvar_1 = res_7;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 vertex_2;
  vertex_2 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_3;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_3 = 0.0001;
    } else {
      tmpvar_3 = 0.0;
    };
    vertex_2.z = tmpvar_3;
  };
  if (unity_MetaVertexControl.y) {
    vertex_2.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_4;
    if ((vertex_2.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_2.z = tmpvar_4;
  };
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = vertex_2.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  mediump vec4 rgba_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_ChromaTex, xlv_TEXCOORD1.xy);
  highp vec3 tmpvar_8;
  tmpvar_8.x = tmpvar_6.x;
  tmpvar_8.yz = tmpvar_7.xy;
  highp mat3 tmpvar_9;
  tmpvar_9[0] = _YpCbCrTransform[0].xyz;
  tmpvar_9[1] = _YpCbCrTransform[1].xyz;
  tmpvar_9[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_10;
  v_10.x = _YpCbCrTransform[0].w;
  v_10.y = _YpCbCrTransform[1].w;
  v_10.z = _YpCbCrTransform[2].w;
  v_10.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = (tmpvar_9 * (tmpvar_8 + v_10.xyz));
  rgba_5 = tmpvar_11;
  col_4 = rgba_5;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_12;
  res_12 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_13;
    tmpvar_13.w = 1.0;
    tmpvar_13.xyz = tmpvar_2;
    res_12.w = tmpvar_13.w;
    highp vec3 tmpvar_14;
    tmpvar_14 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_12.xyz = tmpvar_14;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_15;
    if (bool(unity_UseLinearSpace)) {
      emission_15 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_15 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_16;
    tmpvar_16.w = 1.0;
    tmpvar_16.xyz = emission_15;
    res_12 = tmpvar_16;
  };
  tmpvar_1 = res_12;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 vertex_2;
  vertex_2 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_3;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_3 = 0.0001;
    } else {
      tmpvar_3 = 0.0;
    };
    vertex_2.z = tmpvar_3;
  };
  if (unity_MetaVertexControl.y) {
    vertex_2.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_4;
    if ((vertex_2.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_2.z = tmpvar_4;
  };
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = vertex_2.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  mediump vec4 rgba_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_ChromaTex, xlv_TEXCOORD1.xy);
  highp vec3 tmpvar_8;
  tmpvar_8.x = tmpvar_6.x;
  tmpvar_8.yz = tmpvar_7.xy;
  highp mat3 tmpvar_9;
  tmpvar_9[0] = _YpCbCrTransform[0].xyz;
  tmpvar_9[1] = _YpCbCrTransform[1].xyz;
  tmpvar_9[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_10;
  v_10.x = _YpCbCrTransform[0].w;
  v_10.y = _YpCbCrTransform[1].w;
  v_10.z = _YpCbCrTransform[2].w;
  v_10.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = (tmpvar_9 * (tmpvar_8 + v_10.xyz));
  rgba_5 = tmpvar_11;
  col_4 = rgba_5;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_12;
  res_12 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_13;
    tmpvar_13.w = 1.0;
    tmpvar_13.xyz = tmpvar_2;
    res_12.w = tmpvar_13.w;
    highp vec3 tmpvar_14;
    tmpvar_14 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_12.xyz = tmpvar_14;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_15;
    if (bool(unity_UseLinearSpace)) {
      emission_15 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_15 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_16;
    tmpvar_16.w = 1.0;
    tmpvar_16.xyz = emission_15;
    res_12 = tmpvar_16;
  };
  tmpvar_1 = res_12;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 vertex_2;
  vertex_2 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_3;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_3 = 0.0001;
    } else {
      tmpvar_3 = 0.0;
    };
    vertex_2.z = tmpvar_3;
  };
  if (unity_MetaVertexControl.y) {
    vertex_2.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_4;
    if ((vertex_2.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_2.z = tmpvar_4;
  };
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = vertex_2.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  mediump vec4 rgba_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_ChromaTex, xlv_TEXCOORD1.xy);
  highp vec3 tmpvar_8;
  tmpvar_8.x = tmpvar_6.x;
  tmpvar_8.yz = tmpvar_7.xy;
  highp mat3 tmpvar_9;
  tmpvar_9[0] = _YpCbCrTransform[0].xyz;
  tmpvar_9[1] = _YpCbCrTransform[1].xyz;
  tmpvar_9[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_10;
  v_10.x = _YpCbCrTransform[0].w;
  v_10.y = _YpCbCrTransform[1].w;
  v_10.z = _YpCbCrTransform[2].w;
  v_10.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = (tmpvar_9 * (tmpvar_8 + v_10.xyz));
  rgba_5 = tmpvar_11;
  col_4 = rgba_5;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_12;
  res_12 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_13;
    tmpvar_13.w = 1.0;
    tmpvar_13.xyz = tmpvar_2;
    res_12.w = tmpvar_13.w;
    highp vec3 tmpvar_14;
    tmpvar_14 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_12.xyz = tmpvar_14;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_15;
    if (bool(unity_UseLinearSpace)) {
      emission_15 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_15 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_16;
    tmpvar_16.w = 1.0;
    tmpvar_16.xyz = emission_15;
    res_12 = tmpvar_16;
  };
  tmpvar_1 = res_12;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 vertex_2;
  vertex_2 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_3;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_3 = 0.0001;
    } else {
      tmpvar_3 = 0.0;
    };
    vertex_2.z = tmpvar_3;
  };
  if (unity_MetaVertexControl.y) {
    vertex_2.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_4;
    if ((vertex_2.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_2.z = tmpvar_4;
  };
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = vertex_2.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  mediump vec4 rgba_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_7;
  tmpvar_7 = tmpvar_6;
  rgba_5.w = tmpvar_7.w;
  rgba_5.xyz = (tmpvar_7.xyz * ((tmpvar_7.xyz * 
    ((tmpvar_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_4 = rgba_5;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_8;
  res_8 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_9;
    tmpvar_9.w = 1.0;
    tmpvar_9.xyz = tmpvar_2;
    res_8.w = tmpvar_9.w;
    highp vec3 tmpvar_10;
    tmpvar_10 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_8.xyz = tmpvar_10;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_11;
    if (bool(unity_UseLinearSpace)) {
      emission_11 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_11 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_12;
    tmpvar_12.w = 1.0;
    tmpvar_12.xyz = emission_11;
    res_8 = tmpvar_12;
  };
  tmpvar_1 = res_8;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 vertex_2;
  vertex_2 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_3;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_3 = 0.0001;
    } else {
      tmpvar_3 = 0.0;
    };
    vertex_2.z = tmpvar_3;
  };
  if (unity_MetaVertexControl.y) {
    vertex_2.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_4;
    if ((vertex_2.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_2.z = tmpvar_4;
  };
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = vertex_2.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  mediump vec4 rgba_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_7;
  tmpvar_7 = tmpvar_6;
  rgba_5.w = tmpvar_7.w;
  rgba_5.xyz = (tmpvar_7.xyz * ((tmpvar_7.xyz * 
    ((tmpvar_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_4 = rgba_5;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_8;
  res_8 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_9;
    tmpvar_9.w = 1.0;
    tmpvar_9.xyz = tmpvar_2;
    res_8.w = tmpvar_9.w;
    highp vec3 tmpvar_10;
    tmpvar_10 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_8.xyz = tmpvar_10;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_11;
    if (bool(unity_UseLinearSpace)) {
      emission_11 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_11 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_12;
    tmpvar_12.w = 1.0;
    tmpvar_12.xyz = emission_11;
    res_8 = tmpvar_12;
  };
  tmpvar_1 = res_8;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 vertex_2;
  vertex_2 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_3;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_3 = 0.0001;
    } else {
      tmpvar_3 = 0.0;
    };
    vertex_2.z = tmpvar_3;
  };
  if (unity_MetaVertexControl.y) {
    vertex_2.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_4;
    if ((vertex_2.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_2.z = tmpvar_4;
  };
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = vertex_2.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  mediump vec4 rgba_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_7;
  tmpvar_7 = tmpvar_6;
  rgba_5.w = tmpvar_7.w;
  rgba_5.xyz = (tmpvar_7.xyz * ((tmpvar_7.xyz * 
    ((tmpvar_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_4 = rgba_5;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_8;
  res_8 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_9;
    tmpvar_9.w = 1.0;
    tmpvar_9.xyz = tmpvar_2;
    res_8.w = tmpvar_9.w;
    highp vec3 tmpvar_10;
    tmpvar_10 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_8.xyz = tmpvar_10;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_11;
    if (bool(unity_UseLinearSpace)) {
      emission_11 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_11 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_12;
    tmpvar_12.w = 1.0;
    tmpvar_12.xyz = emission_11;
    res_8 = tmpvar_12;
  };
  tmpvar_1 = res_8;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 vertex_2;
  vertex_2 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_3;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_3 = 0.0001;
    } else {
      tmpvar_3 = 0.0;
    };
    vertex_2.z = tmpvar_3;
  };
  if (unity_MetaVertexControl.y) {
    vertex_2.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_4;
    if ((vertex_2.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_2.z = tmpvar_4;
  };
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = vertex_2.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  mediump vec4 rgba_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_ChromaTex, xlv_TEXCOORD1.xy);
  highp vec3 tmpvar_8;
  tmpvar_8.x = tmpvar_6.x;
  tmpvar_8.yz = tmpvar_7.xy;
  highp mat3 tmpvar_9;
  tmpvar_9[0] = _YpCbCrTransform[0].xyz;
  tmpvar_9[1] = _YpCbCrTransform[1].xyz;
  tmpvar_9[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_10;
  v_10.x = _YpCbCrTransform[0].w;
  v_10.y = _YpCbCrTransform[1].w;
  v_10.z = _YpCbCrTransform[2].w;
  v_10.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = (tmpvar_9 * (tmpvar_8 + v_10.xyz));
  rgba_5 = tmpvar_11;
  rgba_5.xyz = (rgba_5.xyz * ((rgba_5.xyz * 
    ((rgba_5.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_4 = rgba_5;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_12;
  res_12 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_13;
    tmpvar_13.w = 1.0;
    tmpvar_13.xyz = tmpvar_2;
    res_12.w = tmpvar_13.w;
    highp vec3 tmpvar_14;
    tmpvar_14 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_12.xyz = tmpvar_14;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_15;
    if (bool(unity_UseLinearSpace)) {
      emission_15 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_15 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_16;
    tmpvar_16.w = 1.0;
    tmpvar_16.xyz = emission_15;
    res_12 = tmpvar_16;
  };
  tmpvar_1 = res_12;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 vertex_2;
  vertex_2 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_3;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_3 = 0.0001;
    } else {
      tmpvar_3 = 0.0;
    };
    vertex_2.z = tmpvar_3;
  };
  if (unity_MetaVertexControl.y) {
    vertex_2.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_4;
    if ((vertex_2.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_2.z = tmpvar_4;
  };
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = vertex_2.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  mediump vec4 rgba_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_ChromaTex, xlv_TEXCOORD1.xy);
  highp vec3 tmpvar_8;
  tmpvar_8.x = tmpvar_6.x;
  tmpvar_8.yz = tmpvar_7.xy;
  highp mat3 tmpvar_9;
  tmpvar_9[0] = _YpCbCrTransform[0].xyz;
  tmpvar_9[1] = _YpCbCrTransform[1].xyz;
  tmpvar_9[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_10;
  v_10.x = _YpCbCrTransform[0].w;
  v_10.y = _YpCbCrTransform[1].w;
  v_10.z = _YpCbCrTransform[2].w;
  v_10.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = (tmpvar_9 * (tmpvar_8 + v_10.xyz));
  rgba_5 = tmpvar_11;
  rgba_5.xyz = (rgba_5.xyz * ((rgba_5.xyz * 
    ((rgba_5.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_4 = rgba_5;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_12;
  res_12 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_13;
    tmpvar_13.w = 1.0;
    tmpvar_13.xyz = tmpvar_2;
    res_12.w = tmpvar_13.w;
    highp vec3 tmpvar_14;
    tmpvar_14 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_12.xyz = tmpvar_14;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_15;
    if (bool(unity_UseLinearSpace)) {
      emission_15 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_15 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_16;
    tmpvar_16.w = 1.0;
    tmpvar_16.xyz = emission_15;
    res_12 = tmpvar_16;
  };
  tmpvar_1 = res_12;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.xz = _glesMultiTexCoord0.xx;
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 vertex_2;
  vertex_2 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_2.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_3;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_3 = 0.0001;
    } else {
      tmpvar_3 = 0.0;
    };
    vertex_2.z = tmpvar_3;
  };
  if (unity_MetaVertexControl.y) {
    vertex_2.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_4;
    if ((vertex_2.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_2.z = tmpvar_4;
  };
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = vertex_2.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  mediump vec4 rgba_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_ChromaTex, xlv_TEXCOORD1.xy);
  highp vec3 tmpvar_8;
  tmpvar_8.x = tmpvar_6.x;
  tmpvar_8.yz = tmpvar_7.xy;
  highp mat3 tmpvar_9;
  tmpvar_9[0] = _YpCbCrTransform[0].xyz;
  tmpvar_9[1] = _YpCbCrTransform[1].xyz;
  tmpvar_9[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_10;
  v_10.x = _YpCbCrTransform[0].w;
  v_10.y = _YpCbCrTransform[1].w;
  v_10.z = _YpCbCrTransform[2].w;
  v_10.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = (tmpvar_9 * (tmpvar_8 + v_10.xyz));
  rgba_5 = tmpvar_11;
  rgba_5.xyz = (rgba_5.xyz * ((rgba_5.xyz * 
    ((rgba_5.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_4 = rgba_5;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_12;
  res_12 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_13;
    tmpvar_13.w = 1.0;
    tmpvar_13.xyz = tmpvar_2;
    res_12.w = tmpvar_13.w;
    highp vec3 tmpvar_14;
    tmpvar_14 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_12.xyz = tmpvar_14;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_15;
    if (bool(unity_UseLinearSpace)) {
      emission_15 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_15 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_16;
    tmpvar_16.w = 1.0;
    tmpvar_16.xyz = emission_15;
    res_12 = tmpvar_16;
  };
  tmpvar_1 = res_12;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _MainTex_TexelSize;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 vertex_3;
  vertex_3 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_4;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_3.z = tmpvar_4;
  };
  if (unity_MetaVertexControl.y) {
    vertex_3.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_5;
    if ((vertex_3.z > 0.0)) {
      tmpvar_5 = 0.0001;
    } else {
      tmpvar_5 = 0.0;
    };
    vertex_3.z = tmpvar_5;
  };
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = vertex_3.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_6;
  tmpvar_6 = tmpvar_5;
  col_4.xyz = tmpvar_6.xyz;
  mediump float alpha_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD1.zw);
  mediump vec3 tmpvar_9;
  tmpvar_9 = tmpvar_8.xyz;
  alpha_7 = (((tmpvar_9.x + tmpvar_9.y) + tmpvar_9.z) / 3.0);
  col_4.w = alpha_7;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_10;
  res_10 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_11;
    tmpvar_11.w = 1.0;
    tmpvar_11.xyz = tmpvar_2;
    res_10.w = tmpvar_11.w;
    highp vec3 tmpvar_12;
    tmpvar_12 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_10.xyz = tmpvar_12;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_13;
    if (bool(unity_UseLinearSpace)) {
      emission_13 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_13 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_14;
    tmpvar_14.w = 1.0;
    tmpvar_14.xyz = emission_13;
    res_10 = tmpvar_14;
  };
  tmpvar_1 = res_10;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _MainTex_TexelSize;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 vertex_3;
  vertex_3 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_4;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_3.z = tmpvar_4;
  };
  if (unity_MetaVertexControl.y) {
    vertex_3.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_5;
    if ((vertex_3.z > 0.0)) {
      tmpvar_5 = 0.0001;
    } else {
      tmpvar_5 = 0.0;
    };
    vertex_3.z = tmpvar_5;
  };
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = vertex_3.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_6;
  tmpvar_6 = tmpvar_5;
  col_4.xyz = tmpvar_6.xyz;
  mediump float alpha_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD1.zw);
  mediump vec3 tmpvar_9;
  tmpvar_9 = tmpvar_8.xyz;
  alpha_7 = (((tmpvar_9.x + tmpvar_9.y) + tmpvar_9.z) / 3.0);
  col_4.w = alpha_7;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_10;
  res_10 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_11;
    tmpvar_11.w = 1.0;
    tmpvar_11.xyz = tmpvar_2;
    res_10.w = tmpvar_11.w;
    highp vec3 tmpvar_12;
    tmpvar_12 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_10.xyz = tmpvar_12;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_13;
    if (bool(unity_UseLinearSpace)) {
      emission_13 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_13 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_14;
    tmpvar_14.w = 1.0;
    tmpvar_14.xyz = emission_13;
    res_10 = tmpvar_14;
  };
  tmpvar_1 = res_10;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _MainTex_TexelSize;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 vertex_3;
  vertex_3 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_4;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_3.z = tmpvar_4;
  };
  if (unity_MetaVertexControl.y) {
    vertex_3.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_5;
    if ((vertex_3.z > 0.0)) {
      tmpvar_5 = 0.0001;
    } else {
      tmpvar_5 = 0.0;
    };
    vertex_3.z = tmpvar_5;
  };
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = vertex_3.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_6;
  tmpvar_6 = tmpvar_5;
  col_4.xyz = tmpvar_6.xyz;
  mediump float alpha_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD1.zw);
  mediump vec3 tmpvar_9;
  tmpvar_9 = tmpvar_8.xyz;
  alpha_7 = (((tmpvar_9.x + tmpvar_9.y) + tmpvar_9.z) / 3.0);
  col_4.w = alpha_7;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_10;
  res_10 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_11;
    tmpvar_11.w = 1.0;
    tmpvar_11.xyz = tmpvar_2;
    res_10.w = tmpvar_11.w;
    highp vec3 tmpvar_12;
    tmpvar_12 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_10.xyz = tmpvar_12;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_13;
    if (bool(unity_UseLinearSpace)) {
      emission_13 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_13 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_14;
    tmpvar_14.w = 1.0;
    tmpvar_14.xyz = emission_13;
    res_10 = tmpvar_14;
  };
  tmpvar_1 = res_10;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _MainTex_TexelSize;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 vertex_3;
  vertex_3 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_4;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_3.z = tmpvar_4;
  };
  if (unity_MetaVertexControl.y) {
    vertex_3.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_5;
    if ((vertex_3.z > 0.0)) {
      tmpvar_5 = 0.0001;
    } else {
      tmpvar_5 = 0.0;
    };
    vertex_3.z = tmpvar_5;
  };
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = vertex_3.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  mediump vec4 rgba_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_ChromaTex, xlv_TEXCOORD1.xy);
  highp vec3 tmpvar_8;
  tmpvar_8.x = tmpvar_6.x;
  tmpvar_8.yz = tmpvar_7.xy;
  highp mat3 tmpvar_9;
  tmpvar_9[0] = _YpCbCrTransform[0].xyz;
  tmpvar_9[1] = _YpCbCrTransform[1].xyz;
  tmpvar_9[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_10;
  v_10.x = _YpCbCrTransform[0].w;
  v_10.y = _YpCbCrTransform[1].w;
  v_10.z = _YpCbCrTransform[2].w;
  v_10.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = (tmpvar_9 * (tmpvar_8 + v_10.xyz));
  rgba_5 = tmpvar_11;
  col_4.xyz = rgba_5.xyz;
  mediump float alpha_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD1.zw);
  alpha_12 = ((tmpvar_13.x - 0.0625) * 1.164384);
  col_4.w = alpha_12;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_14;
  res_14 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_15;
    tmpvar_15.w = 1.0;
    tmpvar_15.xyz = tmpvar_2;
    res_14.w = tmpvar_15.w;
    highp vec3 tmpvar_16;
    tmpvar_16 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_14.xyz = tmpvar_16;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_17;
    if (bool(unity_UseLinearSpace)) {
      emission_17 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_17 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_18;
    tmpvar_18.w = 1.0;
    tmpvar_18.xyz = emission_17;
    res_14 = tmpvar_18;
  };
  tmpvar_1 = res_14;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _MainTex_TexelSize;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 vertex_3;
  vertex_3 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_4;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_3.z = tmpvar_4;
  };
  if (unity_MetaVertexControl.y) {
    vertex_3.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_5;
    if ((vertex_3.z > 0.0)) {
      tmpvar_5 = 0.0001;
    } else {
      tmpvar_5 = 0.0;
    };
    vertex_3.z = tmpvar_5;
  };
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = vertex_3.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  mediump vec4 rgba_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_ChromaTex, xlv_TEXCOORD1.xy);
  highp vec3 tmpvar_8;
  tmpvar_8.x = tmpvar_6.x;
  tmpvar_8.yz = tmpvar_7.xy;
  highp mat3 tmpvar_9;
  tmpvar_9[0] = _YpCbCrTransform[0].xyz;
  tmpvar_9[1] = _YpCbCrTransform[1].xyz;
  tmpvar_9[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_10;
  v_10.x = _YpCbCrTransform[0].w;
  v_10.y = _YpCbCrTransform[1].w;
  v_10.z = _YpCbCrTransform[2].w;
  v_10.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = (tmpvar_9 * (tmpvar_8 + v_10.xyz));
  rgba_5 = tmpvar_11;
  col_4.xyz = rgba_5.xyz;
  mediump float alpha_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD1.zw);
  alpha_12 = ((tmpvar_13.x - 0.0625) * 1.164384);
  col_4.w = alpha_12;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_14;
  res_14 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_15;
    tmpvar_15.w = 1.0;
    tmpvar_15.xyz = tmpvar_2;
    res_14.w = tmpvar_15.w;
    highp vec3 tmpvar_16;
    tmpvar_16 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_14.xyz = tmpvar_16;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_17;
    if (bool(unity_UseLinearSpace)) {
      emission_17 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_17 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_18;
    tmpvar_18.w = 1.0;
    tmpvar_18.xyz = emission_17;
    res_14 = tmpvar_18;
  };
  tmpvar_1 = res_14;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _MainTex_TexelSize;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 vertex_3;
  vertex_3 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_4;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_3.z = tmpvar_4;
  };
  if (unity_MetaVertexControl.y) {
    vertex_3.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_5;
    if ((vertex_3.z > 0.0)) {
      tmpvar_5 = 0.0001;
    } else {
      tmpvar_5 = 0.0;
    };
    vertex_3.z = tmpvar_5;
  };
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = vertex_3.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  mediump vec4 rgba_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_ChromaTex, xlv_TEXCOORD1.xy);
  highp vec3 tmpvar_8;
  tmpvar_8.x = tmpvar_6.x;
  tmpvar_8.yz = tmpvar_7.xy;
  highp mat3 tmpvar_9;
  tmpvar_9[0] = _YpCbCrTransform[0].xyz;
  tmpvar_9[1] = _YpCbCrTransform[1].xyz;
  tmpvar_9[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_10;
  v_10.x = _YpCbCrTransform[0].w;
  v_10.y = _YpCbCrTransform[1].w;
  v_10.z = _YpCbCrTransform[2].w;
  v_10.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = (tmpvar_9 * (tmpvar_8 + v_10.xyz));
  rgba_5 = tmpvar_11;
  col_4.xyz = rgba_5.xyz;
  mediump float alpha_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD1.zw);
  alpha_12 = ((tmpvar_13.x - 0.0625) * 1.164384);
  col_4.w = alpha_12;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_14;
  res_14 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_15;
    tmpvar_15.w = 1.0;
    tmpvar_15.xyz = tmpvar_2;
    res_14.w = tmpvar_15.w;
    highp vec3 tmpvar_16;
    tmpvar_16 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_14.xyz = tmpvar_16;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_17;
    if (bool(unity_UseLinearSpace)) {
      emission_17 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_17 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_18;
    tmpvar_18.w = 1.0;
    tmpvar_18.xyz = emission_17;
    res_14 = tmpvar_18;
  };
  tmpvar_1 = res_14;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _MainTex_TexelSize;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 vertex_3;
  vertex_3 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_4;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_3.z = tmpvar_4;
  };
  if (unity_MetaVertexControl.y) {
    vertex_3.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_5;
    if ((vertex_3.z > 0.0)) {
      tmpvar_5 = 0.0001;
    } else {
      tmpvar_5 = 0.0;
    };
    vertex_3.z = tmpvar_5;
  };
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = vertex_3.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  mediump vec4 rgba_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_7;
  tmpvar_7 = tmpvar_6;
  rgba_5.w = tmpvar_7.w;
  rgba_5.xyz = (tmpvar_7.xyz * ((tmpvar_7.xyz * 
    ((tmpvar_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_4.xyz = rgba_5.xyz;
  mediump float alpha_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD1.zw);
  mediump vec3 tmpvar_10;
  tmpvar_10 = tmpvar_9.xyz;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * ((tmpvar_10 * 
    ((tmpvar_10 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_8 = (((tmpvar_11.x + tmpvar_11.y) + tmpvar_11.z) / 3.0);
  col_4.w = alpha_8;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_12;
  res_12 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_13;
    tmpvar_13.w = 1.0;
    tmpvar_13.xyz = tmpvar_2;
    res_12.w = tmpvar_13.w;
    highp vec3 tmpvar_14;
    tmpvar_14 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_12.xyz = tmpvar_14;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_15;
    if (bool(unity_UseLinearSpace)) {
      emission_15 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_15 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_16;
    tmpvar_16.w = 1.0;
    tmpvar_16.xyz = emission_15;
    res_12 = tmpvar_16;
  };
  tmpvar_1 = res_12;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _MainTex_TexelSize;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 vertex_3;
  vertex_3 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_4;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_3.z = tmpvar_4;
  };
  if (unity_MetaVertexControl.y) {
    vertex_3.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_5;
    if ((vertex_3.z > 0.0)) {
      tmpvar_5 = 0.0001;
    } else {
      tmpvar_5 = 0.0;
    };
    vertex_3.z = tmpvar_5;
  };
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = vertex_3.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  mediump vec4 rgba_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_7;
  tmpvar_7 = tmpvar_6;
  rgba_5.w = tmpvar_7.w;
  rgba_5.xyz = (tmpvar_7.xyz * ((tmpvar_7.xyz * 
    ((tmpvar_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_4.xyz = rgba_5.xyz;
  mediump float alpha_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD1.zw);
  mediump vec3 tmpvar_10;
  tmpvar_10 = tmpvar_9.xyz;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * ((tmpvar_10 * 
    ((tmpvar_10 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_8 = (((tmpvar_11.x + tmpvar_11.y) + tmpvar_11.z) / 3.0);
  col_4.w = alpha_8;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_12;
  res_12 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_13;
    tmpvar_13.w = 1.0;
    tmpvar_13.xyz = tmpvar_2;
    res_12.w = tmpvar_13.w;
    highp vec3 tmpvar_14;
    tmpvar_14 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_12.xyz = tmpvar_14;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_15;
    if (bool(unity_UseLinearSpace)) {
      emission_15 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_15 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_16;
    tmpvar_16.w = 1.0;
    tmpvar_16.xyz = emission_15;
    res_12 = tmpvar_16;
  };
  tmpvar_1 = res_12;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _MainTex_TexelSize;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 vertex_3;
  vertex_3 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_4;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_3.z = tmpvar_4;
  };
  if (unity_MetaVertexControl.y) {
    vertex_3.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_5;
    if ((vertex_3.z > 0.0)) {
      tmpvar_5 = 0.0001;
    } else {
      tmpvar_5 = 0.0;
    };
    vertex_3.z = tmpvar_5;
  };
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = vertex_3.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  mediump vec4 rgba_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_7;
  tmpvar_7 = tmpvar_6;
  rgba_5.w = tmpvar_7.w;
  rgba_5.xyz = (tmpvar_7.xyz * ((tmpvar_7.xyz * 
    ((tmpvar_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_4.xyz = rgba_5.xyz;
  mediump float alpha_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD1.zw);
  mediump vec3 tmpvar_10;
  tmpvar_10 = tmpvar_9.xyz;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * ((tmpvar_10 * 
    ((tmpvar_10 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_8 = (((tmpvar_11.x + tmpvar_11.y) + tmpvar_11.z) / 3.0);
  col_4.w = alpha_8;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_12;
  res_12 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_13;
    tmpvar_13.w = 1.0;
    tmpvar_13.xyz = tmpvar_2;
    res_12.w = tmpvar_13.w;
    highp vec3 tmpvar_14;
    tmpvar_14 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_12.xyz = tmpvar_14;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_15;
    if (bool(unity_UseLinearSpace)) {
      emission_15 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_15 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_16;
    tmpvar_16.w = 1.0;
    tmpvar_16.xyz = emission_15;
    res_12 = tmpvar_16;
  };
  tmpvar_1 = res_12;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _MainTex_TexelSize;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 vertex_3;
  vertex_3 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_4;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_3.z = tmpvar_4;
  };
  if (unity_MetaVertexControl.y) {
    vertex_3.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_5;
    if ((vertex_3.z > 0.0)) {
      tmpvar_5 = 0.0001;
    } else {
      tmpvar_5 = 0.0;
    };
    vertex_3.z = tmpvar_5;
  };
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = vertex_3.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  mediump vec4 rgba_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_ChromaTex, xlv_TEXCOORD1.xy);
  highp vec3 tmpvar_8;
  tmpvar_8.x = tmpvar_6.x;
  tmpvar_8.yz = tmpvar_7.xy;
  highp mat3 tmpvar_9;
  tmpvar_9[0] = _YpCbCrTransform[0].xyz;
  tmpvar_9[1] = _YpCbCrTransform[1].xyz;
  tmpvar_9[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_10;
  v_10.x = _YpCbCrTransform[0].w;
  v_10.y = _YpCbCrTransform[1].w;
  v_10.z = _YpCbCrTransform[2].w;
  v_10.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = (tmpvar_9 * (tmpvar_8 + v_10.xyz));
  rgba_5 = tmpvar_11;
  rgba_5.xyz = (rgba_5.xyz * ((rgba_5.xyz * 
    ((rgba_5.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_4.xyz = rgba_5.xyz;
  mediump float alpha_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD1.zw);
  alpha_12 = ((tmpvar_13.x - 0.0625) * 1.164384);
  col_4.w = alpha_12;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_14;
  res_14 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_15;
    tmpvar_15.w = 1.0;
    tmpvar_15.xyz = tmpvar_2;
    res_14.w = tmpvar_15.w;
    highp vec3 tmpvar_16;
    tmpvar_16 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_14.xyz = tmpvar_16;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_17;
    if (bool(unity_UseLinearSpace)) {
      emission_17 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_17 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_18;
    tmpvar_18.w = 1.0;
    tmpvar_18.xyz = emission_17;
    res_14 = tmpvar_18;
  };
  tmpvar_1 = res_14;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _MainTex_TexelSize;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 vertex_3;
  vertex_3 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_4;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_3.z = tmpvar_4;
  };
  if (unity_MetaVertexControl.y) {
    vertex_3.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_5;
    if ((vertex_3.z > 0.0)) {
      tmpvar_5 = 0.0001;
    } else {
      tmpvar_5 = 0.0;
    };
    vertex_3.z = tmpvar_5;
  };
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = vertex_3.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  mediump vec4 rgba_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_ChromaTex, xlv_TEXCOORD1.xy);
  highp vec3 tmpvar_8;
  tmpvar_8.x = tmpvar_6.x;
  tmpvar_8.yz = tmpvar_7.xy;
  highp mat3 tmpvar_9;
  tmpvar_9[0] = _YpCbCrTransform[0].xyz;
  tmpvar_9[1] = _YpCbCrTransform[1].xyz;
  tmpvar_9[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_10;
  v_10.x = _YpCbCrTransform[0].w;
  v_10.y = _YpCbCrTransform[1].w;
  v_10.z = _YpCbCrTransform[2].w;
  v_10.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = (tmpvar_9 * (tmpvar_8 + v_10.xyz));
  rgba_5 = tmpvar_11;
  rgba_5.xyz = (rgba_5.xyz * ((rgba_5.xyz * 
    ((rgba_5.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_4.xyz = rgba_5.xyz;
  mediump float alpha_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD1.zw);
  alpha_12 = ((tmpvar_13.x - 0.0625) * 1.164384);
  col_4.w = alpha_12;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_14;
  res_14 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_15;
    tmpvar_15.w = 1.0;
    tmpvar_15.xyz = tmpvar_2;
    res_14.w = tmpvar_15.w;
    highp vec3 tmpvar_16;
    tmpvar_16 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_14.xyz = tmpvar_16;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_17;
    if (bool(unity_UseLinearSpace)) {
      emission_17 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_17 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_18;
    tmpvar_18.w = 1.0;
    tmpvar_18.xyz = emission_17;
    res_14 = tmpvar_18;
  };
  tmpvar_1 = res_14;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _MainTex_TexelSize;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.xzw = _glesMultiTexCoord0.xxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.y * 1.5);
  result_1.y = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.y);
  result_1.w = (result_1.y + 0.5);
  result_1.yw = (1.0 - result_1.yw);
  result_1.yw = result_1.wy;
  highp vec4 vertex_3;
  vertex_3 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_4;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_3.z = tmpvar_4;
  };
  if (unity_MetaVertexControl.y) {
    vertex_3.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_5;
    if ((vertex_3.z > 0.0)) {
      tmpvar_5 = 0.0001;
    } else {
      tmpvar_5 = 0.0;
    };
    vertex_3.z = tmpvar_5;
  };
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = vertex_3.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  mediump vec4 rgba_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_ChromaTex, xlv_TEXCOORD1.xy);
  highp vec3 tmpvar_8;
  tmpvar_8.x = tmpvar_6.x;
  tmpvar_8.yz = tmpvar_7.xy;
  highp mat3 tmpvar_9;
  tmpvar_9[0] = _YpCbCrTransform[0].xyz;
  tmpvar_9[1] = _YpCbCrTransform[1].xyz;
  tmpvar_9[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_10;
  v_10.x = _YpCbCrTransform[0].w;
  v_10.y = _YpCbCrTransform[1].w;
  v_10.z = _YpCbCrTransform[2].w;
  v_10.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = (tmpvar_9 * (tmpvar_8 + v_10.xyz));
  rgba_5 = tmpvar_11;
  rgba_5.xyz = (rgba_5.xyz * ((rgba_5.xyz * 
    ((rgba_5.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_4.xyz = rgba_5.xyz;
  mediump float alpha_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD1.zw);
  alpha_12 = ((tmpvar_13.x - 0.0625) * 1.164384);
  col_4.w = alpha_12;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_14;
  res_14 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_15;
    tmpvar_15.w = 1.0;
    tmpvar_15.xyz = tmpvar_2;
    res_14.w = tmpvar_15.w;
    highp vec3 tmpvar_16;
    tmpvar_16 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_14.xyz = tmpvar_16;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_17;
    if (bool(unity_UseLinearSpace)) {
      emission_17 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_17 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_18;
    tmpvar_18.w = 1.0;
    tmpvar_18.xyz = emission_17;
    res_14 = tmpvar_18;
  };
  tmpvar_1 = res_14;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _MainTex_TexelSize;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 vertex_3;
  vertex_3 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_4;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_3.z = tmpvar_4;
  };
  if (unity_MetaVertexControl.y) {
    vertex_3.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_5;
    if ((vertex_3.z > 0.0)) {
      tmpvar_5 = 0.0001;
    } else {
      tmpvar_5 = 0.0;
    };
    vertex_3.z = tmpvar_5;
  };
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = vertex_3.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_6;
  tmpvar_6 = tmpvar_5;
  col_4.xyz = tmpvar_6.xyz;
  mediump float alpha_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD1.zw);
  mediump vec3 tmpvar_9;
  tmpvar_9 = tmpvar_8.xyz;
  alpha_7 = (((tmpvar_9.x + tmpvar_9.y) + tmpvar_9.z) / 3.0);
  col_4.w = alpha_7;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_10;
  res_10 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_11;
    tmpvar_11.w = 1.0;
    tmpvar_11.xyz = tmpvar_2;
    res_10.w = tmpvar_11.w;
    highp vec3 tmpvar_12;
    tmpvar_12 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_10.xyz = tmpvar_12;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_13;
    if (bool(unity_UseLinearSpace)) {
      emission_13 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_13 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_14;
    tmpvar_14.w = 1.0;
    tmpvar_14.xyz = emission_13;
    res_10 = tmpvar_14;
  };
  tmpvar_1 = res_10;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _MainTex_TexelSize;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 vertex_3;
  vertex_3 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_4;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_3.z = tmpvar_4;
  };
  if (unity_MetaVertexControl.y) {
    vertex_3.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_5;
    if ((vertex_3.z > 0.0)) {
      tmpvar_5 = 0.0001;
    } else {
      tmpvar_5 = 0.0;
    };
    vertex_3.z = tmpvar_5;
  };
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = vertex_3.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_6;
  tmpvar_6 = tmpvar_5;
  col_4.xyz = tmpvar_6.xyz;
  mediump float alpha_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD1.zw);
  mediump vec3 tmpvar_9;
  tmpvar_9 = tmpvar_8.xyz;
  alpha_7 = (((tmpvar_9.x + tmpvar_9.y) + tmpvar_9.z) / 3.0);
  col_4.w = alpha_7;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_10;
  res_10 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_11;
    tmpvar_11.w = 1.0;
    tmpvar_11.xyz = tmpvar_2;
    res_10.w = tmpvar_11.w;
    highp vec3 tmpvar_12;
    tmpvar_12 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_10.xyz = tmpvar_12;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_13;
    if (bool(unity_UseLinearSpace)) {
      emission_13 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_13 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_14;
    tmpvar_14.w = 1.0;
    tmpvar_14.xyz = emission_13;
    res_10 = tmpvar_14;
  };
  tmpvar_1 = res_10;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _MainTex_TexelSize;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 vertex_3;
  vertex_3 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_4;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_3.z = tmpvar_4;
  };
  if (unity_MetaVertexControl.y) {
    vertex_3.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_5;
    if ((vertex_3.z > 0.0)) {
      tmpvar_5 = 0.0001;
    } else {
      tmpvar_5 = 0.0;
    };
    vertex_3.z = tmpvar_5;
  };
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = vertex_3.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_6;
  tmpvar_6 = tmpvar_5;
  col_4.xyz = tmpvar_6.xyz;
  mediump float alpha_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD1.zw);
  mediump vec3 tmpvar_9;
  tmpvar_9 = tmpvar_8.xyz;
  alpha_7 = (((tmpvar_9.x + tmpvar_9.y) + tmpvar_9.z) / 3.0);
  col_4.w = alpha_7;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_10;
  res_10 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_11;
    tmpvar_11.w = 1.0;
    tmpvar_11.xyz = tmpvar_2;
    res_10.w = tmpvar_11.w;
    highp vec3 tmpvar_12;
    tmpvar_12 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_10.xyz = tmpvar_12;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_13;
    if (bool(unity_UseLinearSpace)) {
      emission_13 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_13 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_14;
    tmpvar_14.w = 1.0;
    tmpvar_14.xyz = emission_13;
    res_10 = tmpvar_14;
  };
  tmpvar_1 = res_10;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _MainTex_TexelSize;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 vertex_3;
  vertex_3 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_4;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_3.z = tmpvar_4;
  };
  if (unity_MetaVertexControl.y) {
    vertex_3.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_5;
    if ((vertex_3.z > 0.0)) {
      tmpvar_5 = 0.0001;
    } else {
      tmpvar_5 = 0.0;
    };
    vertex_3.z = tmpvar_5;
  };
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = vertex_3.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  mediump vec4 rgba_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_ChromaTex, xlv_TEXCOORD1.xy);
  highp vec3 tmpvar_8;
  tmpvar_8.x = tmpvar_6.x;
  tmpvar_8.yz = tmpvar_7.xy;
  highp mat3 tmpvar_9;
  tmpvar_9[0] = _YpCbCrTransform[0].xyz;
  tmpvar_9[1] = _YpCbCrTransform[1].xyz;
  tmpvar_9[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_10;
  v_10.x = _YpCbCrTransform[0].w;
  v_10.y = _YpCbCrTransform[1].w;
  v_10.z = _YpCbCrTransform[2].w;
  v_10.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = (tmpvar_9 * (tmpvar_8 + v_10.xyz));
  rgba_5 = tmpvar_11;
  col_4.xyz = rgba_5.xyz;
  mediump float alpha_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD1.zw);
  alpha_12 = ((tmpvar_13.x - 0.0625) * 1.164384);
  col_4.w = alpha_12;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_14;
  res_14 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_15;
    tmpvar_15.w = 1.0;
    tmpvar_15.xyz = tmpvar_2;
    res_14.w = tmpvar_15.w;
    highp vec3 tmpvar_16;
    tmpvar_16 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_14.xyz = tmpvar_16;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_17;
    if (bool(unity_UseLinearSpace)) {
      emission_17 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_17 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_18;
    tmpvar_18.w = 1.0;
    tmpvar_18.xyz = emission_17;
    res_14 = tmpvar_18;
  };
  tmpvar_1 = res_14;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _MainTex_TexelSize;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 vertex_3;
  vertex_3 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_4;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_3.z = tmpvar_4;
  };
  if (unity_MetaVertexControl.y) {
    vertex_3.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_5;
    if ((vertex_3.z > 0.0)) {
      tmpvar_5 = 0.0001;
    } else {
      tmpvar_5 = 0.0;
    };
    vertex_3.z = tmpvar_5;
  };
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = vertex_3.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  mediump vec4 rgba_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_ChromaTex, xlv_TEXCOORD1.xy);
  highp vec3 tmpvar_8;
  tmpvar_8.x = tmpvar_6.x;
  tmpvar_8.yz = tmpvar_7.xy;
  highp mat3 tmpvar_9;
  tmpvar_9[0] = _YpCbCrTransform[0].xyz;
  tmpvar_9[1] = _YpCbCrTransform[1].xyz;
  tmpvar_9[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_10;
  v_10.x = _YpCbCrTransform[0].w;
  v_10.y = _YpCbCrTransform[1].w;
  v_10.z = _YpCbCrTransform[2].w;
  v_10.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = (tmpvar_9 * (tmpvar_8 + v_10.xyz));
  rgba_5 = tmpvar_11;
  col_4.xyz = rgba_5.xyz;
  mediump float alpha_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD1.zw);
  alpha_12 = ((tmpvar_13.x - 0.0625) * 1.164384);
  col_4.w = alpha_12;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_14;
  res_14 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_15;
    tmpvar_15.w = 1.0;
    tmpvar_15.xyz = tmpvar_2;
    res_14.w = tmpvar_15.w;
    highp vec3 tmpvar_16;
    tmpvar_16 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_14.xyz = tmpvar_16;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_17;
    if (bool(unity_UseLinearSpace)) {
      emission_17 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_17 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_18;
    tmpvar_18.w = 1.0;
    tmpvar_18.xyz = emission_17;
    res_14 = tmpvar_18;
  };
  tmpvar_1 = res_14;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _MainTex_TexelSize;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 vertex_3;
  vertex_3 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_4;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_3.z = tmpvar_4;
  };
  if (unity_MetaVertexControl.y) {
    vertex_3.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_5;
    if ((vertex_3.z > 0.0)) {
      tmpvar_5 = 0.0001;
    } else {
      tmpvar_5 = 0.0;
    };
    vertex_3.z = tmpvar_5;
  };
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = vertex_3.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  mediump vec4 rgba_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_ChromaTex, xlv_TEXCOORD1.xy);
  highp vec3 tmpvar_8;
  tmpvar_8.x = tmpvar_6.x;
  tmpvar_8.yz = tmpvar_7.xy;
  highp mat3 tmpvar_9;
  tmpvar_9[0] = _YpCbCrTransform[0].xyz;
  tmpvar_9[1] = _YpCbCrTransform[1].xyz;
  tmpvar_9[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_10;
  v_10.x = _YpCbCrTransform[0].w;
  v_10.y = _YpCbCrTransform[1].w;
  v_10.z = _YpCbCrTransform[2].w;
  v_10.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = (tmpvar_9 * (tmpvar_8 + v_10.xyz));
  rgba_5 = tmpvar_11;
  col_4.xyz = rgba_5.xyz;
  mediump float alpha_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD1.zw);
  alpha_12 = ((tmpvar_13.x - 0.0625) * 1.164384);
  col_4.w = alpha_12;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_14;
  res_14 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_15;
    tmpvar_15.w = 1.0;
    tmpvar_15.xyz = tmpvar_2;
    res_14.w = tmpvar_15.w;
    highp vec3 tmpvar_16;
    tmpvar_16 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_14.xyz = tmpvar_16;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_17;
    if (bool(unity_UseLinearSpace)) {
      emission_17 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_17 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_18;
    tmpvar_18.w = 1.0;
    tmpvar_18.xyz = emission_17;
    res_14 = tmpvar_18;
  };
  tmpvar_1 = res_14;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _MainTex_TexelSize;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 vertex_3;
  vertex_3 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_4;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_3.z = tmpvar_4;
  };
  if (unity_MetaVertexControl.y) {
    vertex_3.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_5;
    if ((vertex_3.z > 0.0)) {
      tmpvar_5 = 0.0001;
    } else {
      tmpvar_5 = 0.0;
    };
    vertex_3.z = tmpvar_5;
  };
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = vertex_3.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  mediump vec4 rgba_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_7;
  tmpvar_7 = tmpvar_6;
  rgba_5.w = tmpvar_7.w;
  rgba_5.xyz = (tmpvar_7.xyz * ((tmpvar_7.xyz * 
    ((tmpvar_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_4.xyz = rgba_5.xyz;
  mediump float alpha_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD1.zw);
  mediump vec3 tmpvar_10;
  tmpvar_10 = tmpvar_9.xyz;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * ((tmpvar_10 * 
    ((tmpvar_10 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_8 = (((tmpvar_11.x + tmpvar_11.y) + tmpvar_11.z) / 3.0);
  col_4.w = alpha_8;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_12;
  res_12 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_13;
    tmpvar_13.w = 1.0;
    tmpvar_13.xyz = tmpvar_2;
    res_12.w = tmpvar_13.w;
    highp vec3 tmpvar_14;
    tmpvar_14 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_12.xyz = tmpvar_14;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_15;
    if (bool(unity_UseLinearSpace)) {
      emission_15 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_15 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_16;
    tmpvar_16.w = 1.0;
    tmpvar_16.xyz = emission_15;
    res_12 = tmpvar_16;
  };
  tmpvar_1 = res_12;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _MainTex_TexelSize;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 vertex_3;
  vertex_3 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_4;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_3.z = tmpvar_4;
  };
  if (unity_MetaVertexControl.y) {
    vertex_3.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_5;
    if ((vertex_3.z > 0.0)) {
      tmpvar_5 = 0.0001;
    } else {
      tmpvar_5 = 0.0;
    };
    vertex_3.z = tmpvar_5;
  };
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = vertex_3.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  mediump vec4 rgba_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_7;
  tmpvar_7 = tmpvar_6;
  rgba_5.w = tmpvar_7.w;
  rgba_5.xyz = (tmpvar_7.xyz * ((tmpvar_7.xyz * 
    ((tmpvar_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_4.xyz = rgba_5.xyz;
  mediump float alpha_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD1.zw);
  mediump vec3 tmpvar_10;
  tmpvar_10 = tmpvar_9.xyz;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * ((tmpvar_10 * 
    ((tmpvar_10 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_8 = (((tmpvar_11.x + tmpvar_11.y) + tmpvar_11.z) / 3.0);
  col_4.w = alpha_8;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_12;
  res_12 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_13;
    tmpvar_13.w = 1.0;
    tmpvar_13.xyz = tmpvar_2;
    res_12.w = tmpvar_13.w;
    highp vec3 tmpvar_14;
    tmpvar_14 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_12.xyz = tmpvar_14;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_15;
    if (bool(unity_UseLinearSpace)) {
      emission_15 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_15 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_16;
    tmpvar_16.w = 1.0;
    tmpvar_16.xyz = emission_15;
    res_12 = tmpvar_16;
  };
  tmpvar_1 = res_12;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _MainTex_TexelSize;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 vertex_3;
  vertex_3 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_4;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_3.z = tmpvar_4;
  };
  if (unity_MetaVertexControl.y) {
    vertex_3.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_5;
    if ((vertex_3.z > 0.0)) {
      tmpvar_5 = 0.0001;
    } else {
      tmpvar_5 = 0.0;
    };
    vertex_3.z = tmpvar_5;
  };
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = vertex_3.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  mediump vec4 rgba_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  mediump vec4 tmpvar_7;
  tmpvar_7 = tmpvar_6;
  rgba_5.w = tmpvar_7.w;
  rgba_5.xyz = (tmpvar_7.xyz * ((tmpvar_7.xyz * 
    ((tmpvar_7.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_4.xyz = rgba_5.xyz;
  mediump float alpha_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD1.zw);
  mediump vec3 tmpvar_10;
  tmpvar_10 = tmpvar_9.xyz;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * ((tmpvar_10 * 
    ((tmpvar_10 * 0.305306) + 0.6821711)
  ) + 0.01252288));
  alpha_8 = (((tmpvar_11.x + tmpvar_11.y) + tmpvar_11.z) / 3.0);
  col_4.w = alpha_8;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_12;
  res_12 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_13;
    tmpvar_13.w = 1.0;
    tmpvar_13.xyz = tmpvar_2;
    res_12.w = tmpvar_13.w;
    highp vec3 tmpvar_14;
    tmpvar_14 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_12.xyz = tmpvar_14;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_15;
    if (bool(unity_UseLinearSpace)) {
      emission_15 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_15 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_16;
    tmpvar_16.w = 1.0;
    tmpvar_16.xyz = emission_15;
    res_12 = tmpvar_16;
  };
  tmpvar_1 = res_12;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _MainTex_TexelSize;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 vertex_3;
  vertex_3 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_4;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_3.z = tmpvar_4;
  };
  if (unity_MetaVertexControl.y) {
    vertex_3.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_5;
    if ((vertex_3.z > 0.0)) {
      tmpvar_5 = 0.0001;
    } else {
      tmpvar_5 = 0.0;
    };
    vertex_3.z = tmpvar_5;
  };
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = vertex_3.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  mediump vec4 rgba_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_ChromaTex, xlv_TEXCOORD1.xy);
  highp vec3 tmpvar_8;
  tmpvar_8.x = tmpvar_6.x;
  tmpvar_8.yz = tmpvar_7.xy;
  highp mat3 tmpvar_9;
  tmpvar_9[0] = _YpCbCrTransform[0].xyz;
  tmpvar_9[1] = _YpCbCrTransform[1].xyz;
  tmpvar_9[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_10;
  v_10.x = _YpCbCrTransform[0].w;
  v_10.y = _YpCbCrTransform[1].w;
  v_10.z = _YpCbCrTransform[2].w;
  v_10.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = (tmpvar_9 * (tmpvar_8 + v_10.xyz));
  rgba_5 = tmpvar_11;
  rgba_5.xyz = (rgba_5.xyz * ((rgba_5.xyz * 
    ((rgba_5.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_4.xyz = rgba_5.xyz;
  mediump float alpha_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD1.zw);
  alpha_12 = ((tmpvar_13.x - 0.0625) * 1.164384);
  col_4.w = alpha_12;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_14;
  res_14 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_15;
    tmpvar_15.w = 1.0;
    tmpvar_15.xyz = tmpvar_2;
    res_14.w = tmpvar_15.w;
    highp vec3 tmpvar_16;
    tmpvar_16 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_14.xyz = tmpvar_16;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_17;
    if (bool(unity_UseLinearSpace)) {
      emission_17 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_17 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_18;
    tmpvar_18.w = 1.0;
    tmpvar_18.xyz = emission_17;
    res_14 = tmpvar_18;
  };
  tmpvar_1 = res_14;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _MainTex_TexelSize;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 vertex_3;
  vertex_3 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_4;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_3.z = tmpvar_4;
  };
  if (unity_MetaVertexControl.y) {
    vertex_3.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_5;
    if ((vertex_3.z > 0.0)) {
      tmpvar_5 = 0.0001;
    } else {
      tmpvar_5 = 0.0;
    };
    vertex_3.z = tmpvar_5;
  };
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = vertex_3.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  mediump vec4 rgba_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_ChromaTex, xlv_TEXCOORD1.xy);
  highp vec3 tmpvar_8;
  tmpvar_8.x = tmpvar_6.x;
  tmpvar_8.yz = tmpvar_7.xy;
  highp mat3 tmpvar_9;
  tmpvar_9[0] = _YpCbCrTransform[0].xyz;
  tmpvar_9[1] = _YpCbCrTransform[1].xyz;
  tmpvar_9[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_10;
  v_10.x = _YpCbCrTransform[0].w;
  v_10.y = _YpCbCrTransform[1].w;
  v_10.z = _YpCbCrTransform[2].w;
  v_10.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = (tmpvar_9 * (tmpvar_8 + v_10.xyz));
  rgba_5 = tmpvar_11;
  rgba_5.xyz = (rgba_5.xyz * ((rgba_5.xyz * 
    ((rgba_5.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_4.xyz = rgba_5.xyz;
  mediump float alpha_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD1.zw);
  alpha_12 = ((tmpvar_13.x - 0.0625) * 1.164384);
  col_4.w = alpha_12;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_14;
  res_14 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_15;
    tmpvar_15.w = 1.0;
    tmpvar_15.xyz = tmpvar_2;
    res_14.w = tmpvar_15.w;
    highp vec3 tmpvar_16;
    tmpvar_16 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_14.xyz = tmpvar_16;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_17;
    if (bool(unity_UseLinearSpace)) {
      emission_17 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_17 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_18;
    tmpvar_18.w = 1.0;
    tmpvar_18.xyz = emission_17;
    res_14 = tmpvar_18;
  };
  tmpvar_1 = res_14;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
"#version 100

#ifdef VERTEX
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord2;
uniform highp mat4 unity_ObjectToWorld;
uniform highp mat4 unity_MatrixVP;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_DynamicLightmapST;
uniform highp vec4 _MainTex_TexelSize;
uniform bvec4 unity_MetaVertexControl;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  highp vec4 result_1;
  result_1.yzw = _glesMultiTexCoord0.yxy;
  highp float tmpvar_2;
  tmpvar_2 = (_MainTex_TexelSize.x * 1.5);
  result_1.x = mix (tmpvar_2, (0.5 - tmpvar_2), _glesMultiTexCoord0.x);
  result_1.z = (result_1.x + 0.5);
  result_1.yw = (1.0 - _glesMultiTexCoord0.yy);
  highp vec4 vertex_3;
  vertex_3 = _glesVertex;
  if (unity_MetaVertexControl.x) {
    vertex_3.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp float tmpvar_4;
    if ((_glesVertex.z > 0.0)) {
      tmpvar_4 = 0.0001;
    } else {
      tmpvar_4 = 0.0;
    };
    vertex_3.z = tmpvar_4;
  };
  if (unity_MetaVertexControl.y) {
    vertex_3.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
    highp float tmpvar_5;
    if ((vertex_3.z > 0.0)) {
      tmpvar_5 = 0.0001;
    } else {
      tmpvar_5 = 0.0;
    };
    vertex_3.z = tmpvar_5;
  };
  highp vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = vertex_3.xyz;
  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
  xlv_TEXCOORD0 = (unity_ObjectToWorld * _glesVertex).xyz;
  xlv_TEXCOORD1 = result_1;
}


#endif
#ifdef FRAGMENT
uniform sampler2D _MainTex;
uniform sampler2D _ChromaTex;
uniform highp mat4 _YpCbCrTransform;
uniform lowp vec4 _Color;
uniform bvec4 unity_MetaFragmentControl;
uniform highp float unity_OneOverOutputBoost;
uniform highp float unity_MaxOutputValue;
uniform highp float unity_UseLinearSpace;
varying highp vec4 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec4 col_4;
  mediump vec4 rgba_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD1.xy);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_ChromaTex, xlv_TEXCOORD1.xy);
  highp vec3 tmpvar_8;
  tmpvar_8.x = tmpvar_6.x;
  tmpvar_8.yz = tmpvar_7.xy;
  highp mat3 tmpvar_9;
  tmpvar_9[0] = _YpCbCrTransform[0].xyz;
  tmpvar_9[1] = _YpCbCrTransform[1].xyz;
  tmpvar_9[2] = _YpCbCrTransform[2].xyz;
  highp vec4 v_10;
  v_10.x = _YpCbCrTransform[0].w;
  v_10.y = _YpCbCrTransform[1].w;
  v_10.z = _YpCbCrTransform[2].w;
  v_10.w = _YpCbCrTransform[3].w;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = (tmpvar_9 * (tmpvar_8 + v_10.xyz));
  rgba_5 = tmpvar_11;
  rgba_5.xyz = (rgba_5.xyz * ((rgba_5.xyz * 
    ((rgba_5.xyz * 0.305306) + 0.6821711)
  ) + 0.01252288));
  col_4.xyz = rgba_5.xyz;
  mediump float alpha_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD1.zw);
  alpha_12 = ((tmpvar_13.x - 0.0625) * 1.164384);
  col_4.w = alpha_12;
  col_4 = (col_4 * _Color);
  tmpvar_3 = col_4.xyz;
  tmpvar_2 = tmpvar_3;
  mediump vec4 res_14;
  res_14 = vec4(0.0, 0.0, 0.0, 0.0);
  if (unity_MetaFragmentControl.x) {
    mediump vec4 tmpvar_15;
    tmpvar_15.w = 1.0;
    tmpvar_15.xyz = tmpvar_2;
    res_14.w = tmpvar_15.w;
    highp vec3 tmpvar_16;
    tmpvar_16 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
    res_14.xyz = tmpvar_16;
  };
  if (unity_MetaFragmentControl.y) {
    mediump vec3 emission_17;
    if (bool(unity_UseLinearSpace)) {
      emission_17 = vec3(0.0, 0.0, 0.0);
    } else {
      emission_17 = vec3(0.0, 0.0, 0.0);
    };
    mediump vec4 tmpvar_18;
    tmpvar_18.w = 1.0;
    tmpvar_18.xyz = emission_17;
    res_14 = tmpvar_18;
  };
  tmpvar_1 = res_14;
  gl_FragData[0] = tmpvar_1;
}


#endif
"
}
}
Program "fp" {
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_NONE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_TOP_BOTTOM" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA_OFF" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR_OFF" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "APPLY_GAMMA" "USE_YPCBCR" "ALPHAPACK_LEFT_RIGHT" }
""
}
}
}
}
Fallback "Legacy Shaders/Transparent/VertexLit"
}